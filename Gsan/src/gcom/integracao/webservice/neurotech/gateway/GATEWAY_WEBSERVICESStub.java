//
///**
// * GATEWAY_WEBSERVICESStub.java
// *
// * This file was auto-generated from WSDL
// * by the Apache Axis2 version: 1.6.1  Built on : Aug 31, 2011 (12:22:40 CEST)
// */
//        package gcom.integracao.webservice.neurotech.gateway;
//
//        
//
//        /*
//        *  GATEWAY_WEBSERVICESStub java implementation
//        */
//
//        
//        public class GATEWAY_WEBSERVICESStub extends org.apache.axis2.client.Stub
//        {
//        protected org.apache.axis2.description.AxisOperation[] _operations;
//
//        //hashmaps to keep the fault mapping
//        private java.util.HashMap faultExceptionNameMap = new java.util.HashMap();
//        private java.util.HashMap faultExceptionClassNameMap = new java.util.HashMap();
//        private java.util.HashMap faultMessageMap = new java.util.HashMap();
//
//        private static int counter = 0;
//
//        private static synchronized java.lang.String getUniqueSuffix(){
//            // reset the counter if it is greater than 99999
//            if (counter > 99999){
//                counter = 0;
//            }
//            counter = counter + 1; 
//            return java.lang.Long.toString(java.lang.System.currentTimeMillis()) + "_" + counter;
//        }
//
//    
//    private void populateAxisService() throws org.apache.axis2.AxisFault {
//
//     //creating the Service with a unique name
//     _service = new org.apache.axis2.description.AxisService("GATEWAY_WEBSERVICES" + getUniqueSuffix());
//     addAnonymousOperations();
//
//        //creating the operations
//        org.apache.axis2.description.AxisOperation __operation;
//
//        _operations = new org.apache.axis2.description.AxisOperation[11];
//        
//                   __operation = new org.apache.axis2.description.OutInAxisOperation();
//                
//
//            __operation.setName(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br", "consultarHistoricoComparacaoFonetica"));
//	    _service.addOperation(__operation);
//	    
//
//	    
//	    
//            _operations[0]=__operation;
//            
//        
//                   __operation = new org.apache.axis2.description.OutInAxisOperation();
//                
//
//            __operation.setName(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br", "wFtoHTML"));
//	    _service.addOperation(__operation);
//	    
//
//	    
//	    
//            _operations[1]=__operation;
//            
//        
//                   __operation = new org.apache.axis2.description.OutInAxisOperation();
//                
//
//            __operation.setName(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br", "consultarGatewayComparacaoFoneticaU"));
//	    _service.addOperation(__operation);
//	    
//
//	    
//	    
//            _operations[2]=__operation;
//            
//        
//                   __operation = new org.apache.axis2.description.OutInAxisOperation();
//                
//
//            __operation.setName(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br", "consultarHistoricoComparacaoFonetica2"));
//	    _service.addOperation(__operation);
//	    
//
//	    
//	    
//            _operations[3]=__operation;
//            
//        
//                   __operation = new org.apache.axis2.description.OutInAxisOperation();
//                
//
//            __operation.setName(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br", "atualizarCache"));
//	    _service.addOperation(__operation);
//	    
//
//	    
//	    
//            _operations[4]=__operation;
//            
//        
//                   __operation = new org.apache.axis2.description.OutInAxisOperation();
//                
//
//            __operation.setName(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br", "consultar"));
//	    _service.addOperation(__operation);
//	    
//
//	    
//	    
//            _operations[5]=__operation;
//            
//        
//                   __operation = new org.apache.axis2.description.OutInAxisOperation();
//                
//
//            __operation.setName(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br", "consultarGatewayComparacaoFonetica2"));
//	    _service.addOperation(__operation);
//	    
//
//	    
//	    
//            _operations[6]=__operation;
//            
//        
//                   __operation = new org.apache.axis2.description.OutInAxisOperation();
//                
//
//            __operation.setName(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br", "consultarLog"));
//	    _service.addOperation(__operation);
//	    
//
//	    
//	    
//            _operations[7]=__operation;
//            
//        
//                   __operation = new org.apache.axis2.description.OutInAxisOperation();
//                
//
//            __operation.setName(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br", "consultarHistorico"));
//	    _service.addOperation(__operation);
//	    
//
//	    
//	    
//            _operations[8]=__operation;
//            
//        
//                   __operation = new org.apache.axis2.description.OutInAxisOperation();
//                
//
//            __operation.setName(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br", "consultarGateway"));
//	    _service.addOperation(__operation);
//	    
//
//	    
//	    
//            _operations[9]=__operation;
//            
//        
//                   __operation = new org.apache.axis2.description.OutInAxisOperation();
//                
//
//            __operation.setName(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br", "consultarGatewayComparacaoFonetica"));
//	    _service.addOperation(__operation);
//	    
//
//	    
//	    
//            _operations[10]=__operation;
//            
//        
//        }
//
//    //populates the faults
//    private void populateFaults(){
//         
//
//
//    }
//
//    /**
//      *Constructor that takes in a configContext
//      */
//
//    public GATEWAY_WEBSERVICESStub(org.apache.axis2.context.ConfigurationContext configurationContext,
//       java.lang.String targetEndpoint)
//       throws org.apache.axis2.AxisFault {
//         this(configurationContext,targetEndpoint,false);
//   }
//
//
//   /**
//     * Constructor that takes in a configContext  and useseperate listner
//     */
//   public GATEWAY_WEBSERVICESStub(org.apache.axis2.context.ConfigurationContext configurationContext,
//        java.lang.String targetEndpoint, boolean useSeparateListener)
//        throws org.apache.axis2.AxisFault {
//         //To populate AxisService
//         populateAxisService();
//         populateFaults();
//
//        _serviceClient = new org.apache.axis2.client.ServiceClient(configurationContext,_service);
//        
//	
//        _serviceClient.getOptions().setTo(new org.apache.axis2.addressing.EndpointReference(
//                targetEndpoint));
//        _serviceClient.getOptions().setUseSeparateListener(useSeparateListener);
//        
//            //Set the soap version
//            _serviceClient.getOptions().setSoapVersionURI(org.apache.axiom.soap.SOAP12Constants.SOAP_ENVELOPE_NAMESPACE_URI);
//        
//    
//    }
//
//    /**
//     * Default Constructor
//     */
//    public GATEWAY_WEBSERVICESStub(org.apache.axis2.context.ConfigurationContext configurationContext) throws org.apache.axis2.AxisFault {
//        
//                    this(configurationContext,"http://188.138.117.15:80/neurotech/services/GATEWAY_WEBSERVICES.GATEWAY_WEBSERVICESHttpSoap12Endpoint/" );
//                
//    }
//
//    /**
//     * Default Constructor
//     */
//    public GATEWAY_WEBSERVICESStub() throws org.apache.axis2.AxisFault {
//        
//                    this("http://188.138.117.15:80/neurotech/services/GATEWAY_WEBSERVICES.GATEWAY_WEBSERVICESHttpSoap12Endpoint/" );
//                
//    }
//
//    /**
//     * Constructor taking the target endpoint
//     */
//    public GATEWAY_WEBSERVICESStub(java.lang.String targetEndpoint) throws org.apache.axis2.AxisFault {
//        this(null,targetEndpoint);
//    }
//
//
//
//        
//                    /**
//                     * Auto generated method signature
//                     * 
//                     * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#consultarHistoricoComparacaoFonetica
//                     * @param consultarHistoricoComparacaoFonetica0
//                    
//                     */
//
//                    
//
//                            public  gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFoneticaResponse consultarHistoricoComparacaoFonetica(
//
//                            gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica consultarHistoricoComparacaoFonetica0)
//                        
//
//                    throws java.rmi.RemoteException
//                    
//                    {
//              org.apache.axis2.context.MessageContext _messageContext = null;
//              try{
//               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
//              _operationClient.getOptions().setAction("urn:consultarHistoricoComparacaoFonetica");
//              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//              // create a message context
//              _messageContext = new org.apache.axis2.context.MessageContext();
//
//              
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env = null;
//                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultarHistoricoComparacaoFonetica0,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarHistoricoComparacaoFonetica")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarHistoricoComparacaoFonetica"));
//                                                
//        //adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // set the message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message contxt to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//        //execute the operation client
//        _operationClient.execute(true);
//
//         
//               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
//                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
//                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
//                
//                
//                                java.lang.Object object = fromOM(
//                                             _returnEnv.getBody().getFirstElement() ,
//                                             gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFoneticaResponse.class,
//                                              getEnvelopeNamespaces(_returnEnv));
//
//                               
//                                        return (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFoneticaResponse)object;
//                                   
//         }catch(org.apache.axis2.AxisFault f){
//
//            org.apache.axiom.om.OMElement faultElt = f.getDetail();
//            if (faultElt!=null){
//                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistoricoComparacaoFonetica"))){
//                    //make the fault by reflection
//                    try{
//                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistoricoComparacaoFonetica"));
//                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//                        java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//                        //message class
//                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistoricoComparacaoFonetica"));
//                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//                                   new java.lang.Class[]{messageClass});
//                        m.invoke(ex,new java.lang.Object[]{messageObject});
//                        
//
//                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
//                    }catch(java.lang.ClassCastException e){
//                       // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.ClassNotFoundException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }catch (java.lang.NoSuchMethodException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.reflect.InvocationTargetException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }  catch (java.lang.IllegalAccessException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }   catch (java.lang.InstantiationException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }
//                }else{
//                    throw f;
//                }
//            }else{
//                throw f;
//            }
//            } finally {
//                if (_messageContext.getTransportOut() != null) {
//                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                }
//            }
//        }
//            
//                /**
//                * Auto generated method signature for Asynchronous Invocations
//                * 
//                * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#startconsultarHistoricoComparacaoFonetica
//                    * @param consultarHistoricoComparacaoFonetica0
//                
//                */
//                public  void startconsultarHistoricoComparacaoFonetica(
//
//                 gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica consultarHistoricoComparacaoFonetica0,
//
//                  final gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESCallbackHandler callback)
//
//                throws java.rmi.RemoteException{
//
//              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
//             _operationClient.getOptions().setAction("urn:consultarHistoricoComparacaoFonetica");
//             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env=null;
//              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();
//
//                    
//                                    //Style is Doc.
//                                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultarHistoricoComparacaoFonetica0,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarHistoricoComparacaoFonetica")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarHistoricoComparacaoFonetica"));
//                                                
//        // adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // create message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message context to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//
//                    
//                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
//                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
//                            try {
//                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
//                                
//                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
//                                                                         gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFoneticaResponse.class,
//                                                                         getEnvelopeNamespaces(resultEnv));
//                                        callback.receiveResultconsultarHistoricoComparacaoFonetica(
//                                        (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFoneticaResponse)object);
//                                        
//                            } catch (org.apache.axis2.AxisFault e) {
//                                callback.receiveErrorconsultarHistoricoComparacaoFonetica(e);
//                            }
//                            }
//
//                            public void onError(java.lang.Exception error) {
//								if (error instanceof org.apache.axis2.AxisFault) {
//									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
//									org.apache.axiom.om.OMElement faultElt = f.getDetail();
//									if (faultElt!=null){
//										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistoricoComparacaoFonetica"))){
//											//make the fault by reflection
//											try{
//													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistoricoComparacaoFonetica"));
//													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//													java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//													//message class
//													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistoricoComparacaoFonetica"));
//														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//															new java.lang.Class[]{messageClass});
//													m.invoke(ex,new java.lang.Object[]{messageObject});
//													
//					
//										            callback.receiveErrorconsultarHistoricoComparacaoFonetica(new java.rmi.RemoteException(ex.getMessage(), ex));
//                                            } catch(java.lang.ClassCastException e){
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistoricoComparacaoFonetica(f);
//                                            } catch (java.lang.ClassNotFoundException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistoricoComparacaoFonetica(f);
//                                            } catch (java.lang.NoSuchMethodException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistoricoComparacaoFonetica(f);
//                                            } catch (java.lang.reflect.InvocationTargetException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistoricoComparacaoFonetica(f);
//                                            } catch (java.lang.IllegalAccessException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistoricoComparacaoFonetica(f);
//                                            } catch (java.lang.InstantiationException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistoricoComparacaoFonetica(f);
//                                            } catch (org.apache.axis2.AxisFault e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistoricoComparacaoFonetica(f);
//                                            }
//									    } else {
//										    callback.receiveErrorconsultarHistoricoComparacaoFonetica(f);
//									    }
//									} else {
//									    callback.receiveErrorconsultarHistoricoComparacaoFonetica(f);
//									}
//								} else {
//								    callback.receiveErrorconsultarHistoricoComparacaoFonetica(error);
//								}
//                            }
//
//                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
//                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
//                                onError(fault);
//                            }
//
//                            public void onComplete() {
//                                try {
//                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                                } catch (org.apache.axis2.AxisFault axisFault) {
//                                    callback.receiveErrorconsultarHistoricoComparacaoFonetica(axisFault);
//                                }
//                            }
//                });
//                        
//
//          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
//        if ( _operations[0].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
//           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
//          _operations[0].setMessageReceiver(
//                    _callbackReceiver);
//        }
//
//           //execute the operation client
//           _operationClient.execute(false);
//
//                    }
//                
//                    /**
//                     * Auto generated method signature
//                     * 
//                     * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#wFtoHTML
//                     * @param wFtoHTML2
//                    
//                     */
//
//                    
//
//                            public  gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.WFtoHTMLResponse wFtoHTML(
//
//                            gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.WFtoHTML wFtoHTML2)
//                        
//
//                    throws java.rmi.RemoteException
//                    
//                    {
//              org.apache.axis2.context.MessageContext _messageContext = null;
//              try{
//               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[1].getName());
//              _operationClient.getOptions().setAction("urn:WFtoHTML");
//              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//              // create a message context
//              _messageContext = new org.apache.axis2.context.MessageContext();
//
//              
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env = null;
//                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    wFtoHTML2,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "wFtoHTML")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "wFtoHTML"));
//                                                
//        //adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // set the message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message contxt to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//        //execute the operation client
//        _operationClient.execute(true);
//
//         
//               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
//                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
//                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
//                
//                
//                                java.lang.Object object = fromOM(
//                                             _returnEnv.getBody().getFirstElement() ,
//                                             gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.WFtoHTMLResponse.class,
//                                              getEnvelopeNamespaces(_returnEnv));
//
//                               
//                                        return (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.WFtoHTMLResponse)object;
//                                   
//         }catch(org.apache.axis2.AxisFault f){
//
//            org.apache.axiom.om.OMElement faultElt = f.getDetail();
//            if (faultElt!=null){
//                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"WFtoHTML"))){
//                    //make the fault by reflection
//                    try{
//                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"WFtoHTML"));
//                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//                        java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//                        //message class
//                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"WFtoHTML"));
//                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//                                   new java.lang.Class[]{messageClass});
//                        m.invoke(ex,new java.lang.Object[]{messageObject});
//                        
//
//                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
//                    }catch(java.lang.ClassCastException e){
//                       // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.ClassNotFoundException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }catch (java.lang.NoSuchMethodException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.reflect.InvocationTargetException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }  catch (java.lang.IllegalAccessException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }   catch (java.lang.InstantiationException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }
//                }else{
//                    throw f;
//                }
//            }else{
//                throw f;
//            }
//            } finally {
//                if (_messageContext.getTransportOut() != null) {
//                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                }
//            }
//        }
//            
//                /**
//                * Auto generated method signature for Asynchronous Invocations
//                * 
//                * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#startwFtoHTML
//                    * @param wFtoHTML2
//                
//                */
//                public  void startwFtoHTML(
//
//                 gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.WFtoHTML wFtoHTML2,
//
//                  final gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESCallbackHandler callback)
//
//                throws java.rmi.RemoteException{
//
//              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[1].getName());
//             _operationClient.getOptions().setAction("urn:WFtoHTML");
//             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env=null;
//              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();
//
//                    
//                                    //Style is Doc.
//                                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    wFtoHTML2,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "wFtoHTML")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "wFtoHTML"));
//                                                
//        // adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // create message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message context to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//
//                    
//                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
//                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
//                            try {
//                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
//                                
//                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
//                                                                         gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.WFtoHTMLResponse.class,
//                                                                         getEnvelopeNamespaces(resultEnv));
//                                        callback.receiveResultwFtoHTML(
//                                        (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.WFtoHTMLResponse)object);
//                                        
//                            } catch (org.apache.axis2.AxisFault e) {
//                                callback.receiveErrorwFtoHTML(e);
//                            }
//                            }
//
//                            public void onError(java.lang.Exception error) {
//								if (error instanceof org.apache.axis2.AxisFault) {
//									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
//									org.apache.axiom.om.OMElement faultElt = f.getDetail();
//									if (faultElt!=null){
//										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"WFtoHTML"))){
//											//make the fault by reflection
//											try{
//													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"WFtoHTML"));
//													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//													java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//													//message class
//													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"WFtoHTML"));
//														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//															new java.lang.Class[]{messageClass});
//													m.invoke(ex,new java.lang.Object[]{messageObject});
//													
//					
//										            callback.receiveErrorwFtoHTML(new java.rmi.RemoteException(ex.getMessage(), ex));
//                                            } catch(java.lang.ClassCastException e){
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorwFtoHTML(f);
//                                            } catch (java.lang.ClassNotFoundException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorwFtoHTML(f);
//                                            } catch (java.lang.NoSuchMethodException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorwFtoHTML(f);
//                                            } catch (java.lang.reflect.InvocationTargetException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorwFtoHTML(f);
//                                            } catch (java.lang.IllegalAccessException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorwFtoHTML(f);
//                                            } catch (java.lang.InstantiationException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorwFtoHTML(f);
//                                            } catch (org.apache.axis2.AxisFault e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorwFtoHTML(f);
//                                            }
//									    } else {
//										    callback.receiveErrorwFtoHTML(f);
//									    }
//									} else {
//									    callback.receiveErrorwFtoHTML(f);
//									}
//								} else {
//								    callback.receiveErrorwFtoHTML(error);
//								}
//                            }
//
//                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
//                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
//                                onError(fault);
//                            }
//
//                            public void onComplete() {
//                                try {
//                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                                } catch (org.apache.axis2.AxisFault axisFault) {
//                                    callback.receiveErrorwFtoHTML(axisFault);
//                                }
//                            }
//                });
//                        
//
//          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
//        if ( _operations[1].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
//           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
//          _operations[1].setMessageReceiver(
//                    _callbackReceiver);
//        }
//
//           //execute the operation client
//           _operationClient.execute(false);
//
//                    }
//                
//                    /**
//                     * Auto generated method signature
//                     * 
//                     * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#consultarGatewayComparacaoFoneticaU
//                     * @param consultarGatewayComparacaoFoneticaU4
//                    
//                     */
//
//                    
//
//                            public  gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaUResponse consultarGatewayComparacaoFoneticaU(
//
//                            gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaU consultarGatewayComparacaoFoneticaU4)
//                        
//
//                    throws java.rmi.RemoteException
//                    
//                    {
//              org.apache.axis2.context.MessageContext _messageContext = null;
//              try{
//               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[2].getName());
//              _operationClient.getOptions().setAction("urn:consultarGatewayComparacaoFoneticaU");
//              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//              // create a message context
//              _messageContext = new org.apache.axis2.context.MessageContext();
//
//              
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env = null;
//                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultarGatewayComparacaoFoneticaU4,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarGatewayComparacaoFoneticaU")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarGatewayComparacaoFoneticaU"));
//                                                
//        //adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // set the message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message contxt to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//        //execute the operation client
//        _operationClient.execute(true);
//
//         
//               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
//                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
//                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
//                
//                
//                                java.lang.Object object = fromOM(
//                                             _returnEnv.getBody().getFirstElement() ,
//                                             gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaUResponse.class,
//                                              getEnvelopeNamespaces(_returnEnv));
//
//                               
//                                        return (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaUResponse)object;
//                                   
//         }catch(org.apache.axis2.AxisFault f){
//
//            org.apache.axiom.om.OMElement faultElt = f.getDetail();
//            if (faultElt!=null){
//                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFoneticaU"))){
//                    //make the fault by reflection
//                    try{
//                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFoneticaU"));
//                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//                        java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//                        //message class
//                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFoneticaU"));
//                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//                                   new java.lang.Class[]{messageClass});
//                        m.invoke(ex,new java.lang.Object[]{messageObject});
//                        
//
//                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
//                    }catch(java.lang.ClassCastException e){
//                       // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.ClassNotFoundException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }catch (java.lang.NoSuchMethodException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.reflect.InvocationTargetException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }  catch (java.lang.IllegalAccessException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }   catch (java.lang.InstantiationException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }
//                }else{
//                    throw f;
//                }
//            }else{
//                throw f;
//            }
//            } finally {
//                if (_messageContext.getTransportOut() != null) {
//                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                }
//            }
//        }
//            
//                /**
//                * Auto generated method signature for Asynchronous Invocations
//                * 
//                * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#startconsultarGatewayComparacaoFoneticaU
//                    * @param consultarGatewayComparacaoFoneticaU4
//                
//                */
//                public  void startconsultarGatewayComparacaoFoneticaU(
//
//                 gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaU consultarGatewayComparacaoFoneticaU4,
//
//                  final gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESCallbackHandler callback)
//
//                throws java.rmi.RemoteException{
//
//              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[2].getName());
//             _operationClient.getOptions().setAction("urn:consultarGatewayComparacaoFoneticaU");
//             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env=null;
//              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();
//
//                    
//                                    //Style is Doc.
//                                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultarGatewayComparacaoFoneticaU4,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarGatewayComparacaoFoneticaU")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarGatewayComparacaoFoneticaU"));
//                                                
//        // adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // create message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message context to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//
//                    
//                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
//                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
//                            try {
//                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
//                                
//                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
//                                                                         gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaUResponse.class,
//                                                                         getEnvelopeNamespaces(resultEnv));
//                                        callback.receiveResultconsultarGatewayComparacaoFoneticaU(
//                                        (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaUResponse)object);
//                                        
//                            } catch (org.apache.axis2.AxisFault e) {
//                                callback.receiveErrorconsultarGatewayComparacaoFoneticaU(e);
//                            }
//                            }
//
//                            public void onError(java.lang.Exception error) {
//								if (error instanceof org.apache.axis2.AxisFault) {
//									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
//									org.apache.axiom.om.OMElement faultElt = f.getDetail();
//									if (faultElt!=null){
//										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFoneticaU"))){
//											//make the fault by reflection
//											try{
//													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFoneticaU"));
//													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//													java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//													//message class
//													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFoneticaU"));
//														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//															new java.lang.Class[]{messageClass});
//													m.invoke(ex,new java.lang.Object[]{messageObject});
//													
//					
//										            callback.receiveErrorconsultarGatewayComparacaoFoneticaU(new java.rmi.RemoteException(ex.getMessage(), ex));
//                                            } catch(java.lang.ClassCastException e){
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFoneticaU(f);
//                                            } catch (java.lang.ClassNotFoundException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFoneticaU(f);
//                                            } catch (java.lang.NoSuchMethodException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFoneticaU(f);
//                                            } catch (java.lang.reflect.InvocationTargetException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFoneticaU(f);
//                                            } catch (java.lang.IllegalAccessException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFoneticaU(f);
//                                            } catch (java.lang.InstantiationException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFoneticaU(f);
//                                            } catch (org.apache.axis2.AxisFault e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFoneticaU(f);
//                                            }
//									    } else {
//										    callback.receiveErrorconsultarGatewayComparacaoFoneticaU(f);
//									    }
//									} else {
//									    callback.receiveErrorconsultarGatewayComparacaoFoneticaU(f);
//									}
//								} else {
//								    callback.receiveErrorconsultarGatewayComparacaoFoneticaU(error);
//								}
//                            }
//
//                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
//                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
//                                onError(fault);
//                            }
//
//                            public void onComplete() {
//                                try {
//                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                                } catch (org.apache.axis2.AxisFault axisFault) {
//                                    callback.receiveErrorconsultarGatewayComparacaoFoneticaU(axisFault);
//                                }
//                            }
//                });
//                        
//
//          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
//        if ( _operations[2].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
//           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
//          _operations[2].setMessageReceiver(
//                    _callbackReceiver);
//        }
//
//           //execute the operation client
//           _operationClient.execute(false);
//
//                    }
//                
//                    /**
//                     * Auto generated method signature
//                     * 
//                     * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#consultarHistoricoComparacaoFonetica2
//                     * @param consultarHistoricoComparacaoFonetica26
//                    
//                     */
//
//                    
//
//                            public  gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica2Response consultarHistoricoComparacaoFonetica2(
//
//                            gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica2 consultarHistoricoComparacaoFonetica26)
//                        
//
//                    throws java.rmi.RemoteException
//                    
//                    {
//              org.apache.axis2.context.MessageContext _messageContext = null;
//              try{
//               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[3].getName());
//              _operationClient.getOptions().setAction("urn:consultarHistoricoComparacaoFonetica2");
//              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//              // create a message context
//              _messageContext = new org.apache.axis2.context.MessageContext();
//
//              
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env = null;
//                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultarHistoricoComparacaoFonetica26,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarHistoricoComparacaoFonetica2")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarHistoricoComparacaoFonetica2"));
//                                                
//        //adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // set the message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message contxt to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//        //execute the operation client
//        _operationClient.execute(true);
//
//         
//               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
//                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
//                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
//                
//                
//                                java.lang.Object object = fromOM(
//                                             _returnEnv.getBody().getFirstElement() ,
//                                             gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica2Response.class,
//                                              getEnvelopeNamespaces(_returnEnv));
//
//                               
//                                        return (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica2Response)object;
//                                   
//         }catch(org.apache.axis2.AxisFault f){
//
//            org.apache.axiom.om.OMElement faultElt = f.getDetail();
//            if (faultElt!=null){
//                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistoricoComparacaoFonetica2"))){
//                    //make the fault by reflection
//                    try{
//                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistoricoComparacaoFonetica2"));
//                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//                        java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//                        //message class
//                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistoricoComparacaoFonetica2"));
//                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//                                   new java.lang.Class[]{messageClass});
//                        m.invoke(ex,new java.lang.Object[]{messageObject});
//                        
//
//                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
//                    }catch(java.lang.ClassCastException e){
//                       // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.ClassNotFoundException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }catch (java.lang.NoSuchMethodException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.reflect.InvocationTargetException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }  catch (java.lang.IllegalAccessException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }   catch (java.lang.InstantiationException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }
//                }else{
//                    throw f;
//                }
//            }else{
//                throw f;
//            }
//            } finally {
//                if (_messageContext.getTransportOut() != null) {
//                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                }
//            }
//        }
//            
//                /**
//                * Auto generated method signature for Asynchronous Invocations
//                * 
//                * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#startconsultarHistoricoComparacaoFonetica2
//                    * @param consultarHistoricoComparacaoFonetica26
//                
//                */
//                public  void startconsultarHistoricoComparacaoFonetica2(
//
//                 gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica2 consultarHistoricoComparacaoFonetica26,
//
//                  final gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESCallbackHandler callback)
//
//                throws java.rmi.RemoteException{
//
//              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[3].getName());
//             _operationClient.getOptions().setAction("urn:consultarHistoricoComparacaoFonetica2");
//             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env=null;
//              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();
//
//                    
//                                    //Style is Doc.
//                                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultarHistoricoComparacaoFonetica26,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarHistoricoComparacaoFonetica2")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarHistoricoComparacaoFonetica2"));
//                                                
//        // adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // create message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message context to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//
//                    
//                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
//                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
//                            try {
//                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
//                                
//                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
//                                                                         gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica2Response.class,
//                                                                         getEnvelopeNamespaces(resultEnv));
//                                        callback.receiveResultconsultarHistoricoComparacaoFonetica2(
//                                        (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica2Response)object);
//                                        
//                            } catch (org.apache.axis2.AxisFault e) {
//                                callback.receiveErrorconsultarHistoricoComparacaoFonetica2(e);
//                            }
//                            }
//
//                            public void onError(java.lang.Exception error) {
//								if (error instanceof org.apache.axis2.AxisFault) {
//									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
//									org.apache.axiom.om.OMElement faultElt = f.getDetail();
//									if (faultElt!=null){
//										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistoricoComparacaoFonetica2"))){
//											//make the fault by reflection
//											try{
//													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistoricoComparacaoFonetica2"));
//													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//													java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//													//message class
//													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistoricoComparacaoFonetica2"));
//														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//															new java.lang.Class[]{messageClass});
//													m.invoke(ex,new java.lang.Object[]{messageObject});
//													
//					
//										            callback.receiveErrorconsultarHistoricoComparacaoFonetica2(new java.rmi.RemoteException(ex.getMessage(), ex));
//                                            } catch(java.lang.ClassCastException e){
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistoricoComparacaoFonetica2(f);
//                                            } catch (java.lang.ClassNotFoundException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistoricoComparacaoFonetica2(f);
//                                            } catch (java.lang.NoSuchMethodException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistoricoComparacaoFonetica2(f);
//                                            } catch (java.lang.reflect.InvocationTargetException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistoricoComparacaoFonetica2(f);
//                                            } catch (java.lang.IllegalAccessException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistoricoComparacaoFonetica2(f);
//                                            } catch (java.lang.InstantiationException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistoricoComparacaoFonetica2(f);
//                                            } catch (org.apache.axis2.AxisFault e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistoricoComparacaoFonetica2(f);
//                                            }
//									    } else {
//										    callback.receiveErrorconsultarHistoricoComparacaoFonetica2(f);
//									    }
//									} else {
//									    callback.receiveErrorconsultarHistoricoComparacaoFonetica2(f);
//									}
//								} else {
//								    callback.receiveErrorconsultarHistoricoComparacaoFonetica2(error);
//								}
//                            }
//
//                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
//                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
//                                onError(fault);
//                            }
//
//                            public void onComplete() {
//                                try {
//                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                                } catch (org.apache.axis2.AxisFault axisFault) {
//                                    callback.receiveErrorconsultarHistoricoComparacaoFonetica2(axisFault);
//                                }
//                            }
//                });
//                        
//
//          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
//        if ( _operations[3].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
//           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
//          _operations[3].setMessageReceiver(
//                    _callbackReceiver);
//        }
//
//           //execute the operation client
//           _operationClient.execute(false);
//
//                    }
//                
//                    /**
//                     * Auto generated method signature
//                     * 
//                     * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#atualizarCache
//                     * @param atualizarCache8
//                    
//                     */
//
//                    
//
//                            public  gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.AtualizarCacheResponse atualizarCache(
//
//                            gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.AtualizarCache atualizarCache8)
//                        
//
//                    throws java.rmi.RemoteException
//                    
//                    {
//              org.apache.axis2.context.MessageContext _messageContext = null;
//              try{
//               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[4].getName());
//              _operationClient.getOptions().setAction("urn:atualizarCache");
//              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//              // create a message context
//              _messageContext = new org.apache.axis2.context.MessageContext();
//
//              
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env = null;
//                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    atualizarCache8,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "atualizarCache")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "atualizarCache"));
//                                                
//        //adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // set the message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message contxt to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//        //execute the operation client
//        _operationClient.execute(true);
//
//         
//               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
//                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
//                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
//                
//                
//                                java.lang.Object object = fromOM(
//                                             _returnEnv.getBody().getFirstElement() ,
//                                             gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.AtualizarCacheResponse.class,
//                                              getEnvelopeNamespaces(_returnEnv));
//
//                               
//                                        return (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.AtualizarCacheResponse)object;
//                                   
//         }catch(org.apache.axis2.AxisFault f){
//
//            org.apache.axiom.om.OMElement faultElt = f.getDetail();
//            if (faultElt!=null){
//                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"atualizarCache"))){
//                    //make the fault by reflection
//                    try{
//                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"atualizarCache"));
//                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//                        java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//                        //message class
//                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"atualizarCache"));
//                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//                                   new java.lang.Class[]{messageClass});
//                        m.invoke(ex,new java.lang.Object[]{messageObject});
//                        
//
//                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
//                    }catch(java.lang.ClassCastException e){
//                       // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.ClassNotFoundException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }catch (java.lang.NoSuchMethodException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.reflect.InvocationTargetException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }  catch (java.lang.IllegalAccessException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }   catch (java.lang.InstantiationException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }
//                }else{
//                    throw f;
//                }
//            }else{
//                throw f;
//            }
//            } finally {
//                if (_messageContext.getTransportOut() != null) {
//                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                }
//            }
//        }
//            
//                /**
//                * Auto generated method signature for Asynchronous Invocations
//                * 
//                * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#startatualizarCache
//                    * @param atualizarCache8
//                
//                */
//                public  void startatualizarCache(
//
//                 gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.AtualizarCache atualizarCache8,
//
//                  final gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESCallbackHandler callback)
//
//                throws java.rmi.RemoteException{
//
//              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[4].getName());
//             _operationClient.getOptions().setAction("urn:atualizarCache");
//             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env=null;
//              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();
//
//                    
//                                    //Style is Doc.
//                                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    atualizarCache8,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "atualizarCache")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "atualizarCache"));
//                                                
//        // adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // create message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message context to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//
//                    
//                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
//                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
//                            try {
//                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
//                                
//                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
//                                                                         gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.AtualizarCacheResponse.class,
//                                                                         getEnvelopeNamespaces(resultEnv));
//                                        callback.receiveResultatualizarCache(
//                                        (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.AtualizarCacheResponse)object);
//                                        
//                            } catch (org.apache.axis2.AxisFault e) {
//                                callback.receiveErroratualizarCache(e);
//                            }
//                            }
//
//                            public void onError(java.lang.Exception error) {
//								if (error instanceof org.apache.axis2.AxisFault) {
//									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
//									org.apache.axiom.om.OMElement faultElt = f.getDetail();
//									if (faultElt!=null){
//										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"atualizarCache"))){
//											//make the fault by reflection
//											try{
//													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"atualizarCache"));
//													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//													java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//													//message class
//													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"atualizarCache"));
//														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//															new java.lang.Class[]{messageClass});
//													m.invoke(ex,new java.lang.Object[]{messageObject});
//													
//					
//										            callback.receiveErroratualizarCache(new java.rmi.RemoteException(ex.getMessage(), ex));
//                                            } catch(java.lang.ClassCastException e){
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErroratualizarCache(f);
//                                            } catch (java.lang.ClassNotFoundException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErroratualizarCache(f);
//                                            } catch (java.lang.NoSuchMethodException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErroratualizarCache(f);
//                                            } catch (java.lang.reflect.InvocationTargetException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErroratualizarCache(f);
//                                            } catch (java.lang.IllegalAccessException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErroratualizarCache(f);
//                                            } catch (java.lang.InstantiationException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErroratualizarCache(f);
//                                            } catch (org.apache.axis2.AxisFault e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErroratualizarCache(f);
//                                            }
//									    } else {
//										    callback.receiveErroratualizarCache(f);
//									    }
//									} else {
//									    callback.receiveErroratualizarCache(f);
//									}
//								} else {
//								    callback.receiveErroratualizarCache(error);
//								}
//                            }
//
//                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
//                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
//                                onError(fault);
//                            }
//
//                            public void onComplete() {
//                                try {
//                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                                } catch (org.apache.axis2.AxisFault axisFault) {
//                                    callback.receiveErroratualizarCache(axisFault);
//                                }
//                            }
//                });
//                        
//
//          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
//        if ( _operations[4].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
//           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
//          _operations[4].setMessageReceiver(
//                    _callbackReceiver);
//        }
//
//           //execute the operation client
//           _operationClient.execute(false);
//
//                    }
//                
//                    /**
//                     * Auto generated method signature
//                     * 
//                     * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#consultar
//                     * @param consultar10
//                    
//                     */
//
//                    
//
//                            public  gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarResponse consultar(
//
//                            gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.Consultar consultar10)
//                        
//
//                    throws java.rmi.RemoteException
//                    
//                    {
//              org.apache.axis2.context.MessageContext _messageContext = null;
//              try{
//               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[5].getName());
//              _operationClient.getOptions().setAction("urn:consultar");
//              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//              // create a message context
//              _messageContext = new org.apache.axis2.context.MessageContext();
//
//              
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env = null;
//                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultar10,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultar")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultar"));
//                                                
//        //adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // set the message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message contxt to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//        //execute the operation client
//        _operationClient.execute(true);
//
//         
//               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
//                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
//                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
//                
//                
//                                java.lang.Object object = fromOM(
//                                             _returnEnv.getBody().getFirstElement() ,
//                                             gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarResponse.class,
//                                              getEnvelopeNamespaces(_returnEnv));
//
//                               
//                                        return (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarResponse)object;
//                                   
//         }catch(org.apache.axis2.AxisFault f){
//
//            org.apache.axiom.om.OMElement faultElt = f.getDetail();
//            if (faultElt!=null){
//                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultar"))){
//                    //make the fault by reflection
//                    try{
//                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultar"));
//                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//                        java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//                        //message class
//                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultar"));
//                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//                                   new java.lang.Class[]{messageClass});
//                        m.invoke(ex,new java.lang.Object[]{messageObject});
//                        
//
//                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
//                    }catch(java.lang.ClassCastException e){
//                       // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.ClassNotFoundException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }catch (java.lang.NoSuchMethodException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.reflect.InvocationTargetException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }  catch (java.lang.IllegalAccessException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }   catch (java.lang.InstantiationException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }
//                }else{
//                    throw f;
//                }
//            }else{
//                throw f;
//            }
//            } finally {
//                if (_messageContext.getTransportOut() != null) {
//                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                }
//            }
//        }
//            
//                /**
//                * Auto generated method signature for Asynchronous Invocations
//                * 
//                * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#startconsultar
//                    * @param consultar10
//                
//                */
//                public  void startconsultar(
//
//                 gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.Consultar consultar10,
//
//                  final gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESCallbackHandler callback)
//
//                throws java.rmi.RemoteException{
//
//              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[5].getName());
//             _operationClient.getOptions().setAction("urn:consultar");
//             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env=null;
//              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();
//
//                    
//                                    //Style is Doc.
//                                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultar10,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultar")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultar"));
//                                                
//        // adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // create message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message context to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//
//                    
//                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
//                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
//                            try {
//                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
//                                
//                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
//                                                                         gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarResponse.class,
//                                                                         getEnvelopeNamespaces(resultEnv));
//                                        callback.receiveResultconsultar(
//                                        (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarResponse)object);
//                                        
//                            } catch (org.apache.axis2.AxisFault e) {
//                                callback.receiveErrorconsultar(e);
//                            }
//                            }
//
//                            public void onError(java.lang.Exception error) {
//								if (error instanceof org.apache.axis2.AxisFault) {
//									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
//									org.apache.axiom.om.OMElement faultElt = f.getDetail();
//									if (faultElt!=null){
//										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultar"))){
//											//make the fault by reflection
//											try{
//													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultar"));
//													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//													java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//													//message class
//													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultar"));
//														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//															new java.lang.Class[]{messageClass});
//													m.invoke(ex,new java.lang.Object[]{messageObject});
//													
//					
//										            callback.receiveErrorconsultar(new java.rmi.RemoteException(ex.getMessage(), ex));
//                                            } catch(java.lang.ClassCastException e){
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultar(f);
//                                            } catch (java.lang.ClassNotFoundException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultar(f);
//                                            } catch (java.lang.NoSuchMethodException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultar(f);
//                                            } catch (java.lang.reflect.InvocationTargetException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultar(f);
//                                            } catch (java.lang.IllegalAccessException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultar(f);
//                                            } catch (java.lang.InstantiationException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultar(f);
//                                            } catch (org.apache.axis2.AxisFault e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultar(f);
//                                            }
//									    } else {
//										    callback.receiveErrorconsultar(f);
//									    }
//									} else {
//									    callback.receiveErrorconsultar(f);
//									}
//								} else {
//								    callback.receiveErrorconsultar(error);
//								}
//                            }
//
//                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
//                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
//                                onError(fault);
//                            }
//
//                            public void onComplete() {
//                                try {
//                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                                } catch (org.apache.axis2.AxisFault axisFault) {
//                                    callback.receiveErrorconsultar(axisFault);
//                                }
//                            }
//                });
//                        
//
//          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
//        if ( _operations[5].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
//           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
//          _operations[5].setMessageReceiver(
//                    _callbackReceiver);
//        }
//
//           //execute the operation client
//           _operationClient.execute(false);
//
//                    }
//                
//                    /**
//                     * Auto generated method signature
//                     * 
//                     * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#consultarGatewayComparacaoFonetica2
//                     * @param consultarGatewayComparacaoFonetica212
//                    
//                     */
//
//                    
//
//                            public  gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica2Response consultarGatewayComparacaoFonetica2(
//
//                            gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica2 consultarGatewayComparacaoFonetica212)
//                        
//
//                    throws java.rmi.RemoteException
//                    
//                    {
//              org.apache.axis2.context.MessageContext _messageContext = null;
//              try{
//               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[6].getName());
//              _operationClient.getOptions().setAction("urn:consultarGatewayComparacaoFonetica2");
//              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//              // create a message context
//              _messageContext = new org.apache.axis2.context.MessageContext();
//
//              
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env = null;
//                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultarGatewayComparacaoFonetica212,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarGatewayComparacaoFonetica2")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarGatewayComparacaoFonetica2"));
//                                                
//        //adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // set the message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message contxt to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//        //execute the operation client
//        _operationClient.execute(true);
//
//         
//               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
//                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
//                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
//                
//                
//                                java.lang.Object object = fromOM(
//                                             _returnEnv.getBody().getFirstElement() ,
//                                             gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica2Response.class,
//                                              getEnvelopeNamespaces(_returnEnv));
//
//                               
//                                        return (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica2Response)object;
//                                   
//         }catch(org.apache.axis2.AxisFault f){
//
//            org.apache.axiom.om.OMElement faultElt = f.getDetail();
//            if (faultElt!=null){
//                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFonetica2"))){
//                    //make the fault by reflection
//                    try{
//                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFonetica2"));
//                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//                        java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//                        //message class
//                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFonetica2"));
//                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//                                   new java.lang.Class[]{messageClass});
//                        m.invoke(ex,new java.lang.Object[]{messageObject});
//                        
//
//                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
//                    }catch(java.lang.ClassCastException e){
//                       // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.ClassNotFoundException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }catch (java.lang.NoSuchMethodException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.reflect.InvocationTargetException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }  catch (java.lang.IllegalAccessException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }   catch (java.lang.InstantiationException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }
//                }else{
//                    throw f;
//                }
//            }else{
//                throw f;
//            }
//            } finally {
//                if (_messageContext.getTransportOut() != null) {
//                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                }
//            }
//        }
//            
//                /**
//                * Auto generated method signature for Asynchronous Invocations
//                * 
//                * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#startconsultarGatewayComparacaoFonetica2
//                    * @param consultarGatewayComparacaoFonetica212
//                
//                */
//                public  void startconsultarGatewayComparacaoFonetica2(
//
//                 gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica2 consultarGatewayComparacaoFonetica212,
//
//                  final gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESCallbackHandler callback)
//
//                throws java.rmi.RemoteException{
//
//              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[6].getName());
//             _operationClient.getOptions().setAction("urn:consultarGatewayComparacaoFonetica2");
//             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env=null;
//              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();
//
//                    
//                                    //Style is Doc.
//                                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultarGatewayComparacaoFonetica212,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarGatewayComparacaoFonetica2")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarGatewayComparacaoFonetica2"));
//                                                
//        // adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // create message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message context to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//
//                    
//                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
//                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
//                            try {
//                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
//                                
//                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
//                                                                         gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica2Response.class,
//                                                                         getEnvelopeNamespaces(resultEnv));
//                                        callback.receiveResultconsultarGatewayComparacaoFonetica2(
//                                        (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica2Response)object);
//                                        
//                            } catch (org.apache.axis2.AxisFault e) {
//                                callback.receiveErrorconsultarGatewayComparacaoFonetica2(e);
//                            }
//                            }
//
//                            public void onError(java.lang.Exception error) {
//								if (error instanceof org.apache.axis2.AxisFault) {
//									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
//									org.apache.axiom.om.OMElement faultElt = f.getDetail();
//									if (faultElt!=null){
//										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFonetica2"))){
//											//make the fault by reflection
//											try{
//													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFonetica2"));
//													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//													java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//													//message class
//													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFonetica2"));
//														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//															new java.lang.Class[]{messageClass});
//													m.invoke(ex,new java.lang.Object[]{messageObject});
//													
//					
//										            callback.receiveErrorconsultarGatewayComparacaoFonetica2(new java.rmi.RemoteException(ex.getMessage(), ex));
//                                            } catch(java.lang.ClassCastException e){
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFonetica2(f);
//                                            } catch (java.lang.ClassNotFoundException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFonetica2(f);
//                                            } catch (java.lang.NoSuchMethodException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFonetica2(f);
//                                            } catch (java.lang.reflect.InvocationTargetException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFonetica2(f);
//                                            } catch (java.lang.IllegalAccessException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFonetica2(f);
//                                            } catch (java.lang.InstantiationException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFonetica2(f);
//                                            } catch (org.apache.axis2.AxisFault e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFonetica2(f);
//                                            }
//									    } else {
//										    callback.receiveErrorconsultarGatewayComparacaoFonetica2(f);
//									    }
//									} else {
//									    callback.receiveErrorconsultarGatewayComparacaoFonetica2(f);
//									}
//								} else {
//								    callback.receiveErrorconsultarGatewayComparacaoFonetica2(error);
//								}
//                            }
//
//                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
//                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
//                                onError(fault);
//                            }
//
//                            public void onComplete() {
//                                try {
//                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                                } catch (org.apache.axis2.AxisFault axisFault) {
//                                    callback.receiveErrorconsultarGatewayComparacaoFonetica2(axisFault);
//                                }
//                            }
//                });
//                        
//
//          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
//        if ( _operations[6].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
//           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
//          _operations[6].setMessageReceiver(
//                    _callbackReceiver);
//        }
//
//           //execute the operation client
//           _operationClient.execute(false);
//
//                    }
//                
//                    /**
//                     * Auto generated method signature
//                     * 
//                     * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#consultarLog
//                     * @param consultarLog14
//                    
//                     */
//
//                    
//
//                            public  gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarLogResponse consultarLog(
//
//                            gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarLog consultarLog14)
//                        
//
//                    throws java.rmi.RemoteException
//                    
//                    {
//              org.apache.axis2.context.MessageContext _messageContext = null;
//              try{
//               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[7].getName());
//              _operationClient.getOptions().setAction("urn:consultarLog");
//              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//              // create a message context
//              _messageContext = new org.apache.axis2.context.MessageContext();
//
//              
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env = null;
//                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultarLog14,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarLog")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarLog"));
//                                                
//        //adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // set the message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message contxt to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//        //execute the operation client
//        _operationClient.execute(true);
//
//         
//               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
//                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
//                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
//                
//                
//                                java.lang.Object object = fromOM(
//                                             _returnEnv.getBody().getFirstElement() ,
//                                             gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarLogResponse.class,
//                                              getEnvelopeNamespaces(_returnEnv));
//
//                               
//                                        return (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarLogResponse)object;
//                                   
//         }catch(org.apache.axis2.AxisFault f){
//
//            org.apache.axiom.om.OMElement faultElt = f.getDetail();
//            if (faultElt!=null){
//                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarLog"))){
//                    //make the fault by reflection
//                    try{
//                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarLog"));
//                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//                        java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//                        //message class
//                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarLog"));
//                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//                                   new java.lang.Class[]{messageClass});
//                        m.invoke(ex,new java.lang.Object[]{messageObject});
//                        
//
//                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
//                    }catch(java.lang.ClassCastException e){
//                       // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.ClassNotFoundException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }catch (java.lang.NoSuchMethodException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.reflect.InvocationTargetException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }  catch (java.lang.IllegalAccessException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }   catch (java.lang.InstantiationException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }
//                }else{
//                    throw f;
//                }
//            }else{
//                throw f;
//            }
//            } finally {
//                if (_messageContext.getTransportOut() != null) {
//                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                }
//            }
//        }
//            
//                /**
//                * Auto generated method signature for Asynchronous Invocations
//                * 
//                * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#startconsultarLog
//                    * @param consultarLog14
//                
//                */
//                public  void startconsultarLog(
//
//                 gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarLog consultarLog14,
//
//                  final gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESCallbackHandler callback)
//
//                throws java.rmi.RemoteException{
//
//              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[7].getName());
//             _operationClient.getOptions().setAction("urn:consultarLog");
//             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env=null;
//              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();
//
//                    
//                                    //Style is Doc.
//                                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultarLog14,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarLog")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarLog"));
//                                                
//        // adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // create message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message context to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//
//                    
//                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
//                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
//                            try {
//                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
//                                
//                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
//                                                                         gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarLogResponse.class,
//                                                                         getEnvelopeNamespaces(resultEnv));
//                                        callback.receiveResultconsultarLog(
//                                        (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarLogResponse)object);
//                                        
//                            } catch (org.apache.axis2.AxisFault e) {
//                                callback.receiveErrorconsultarLog(e);
//                            }
//                            }
//
//                            public void onError(java.lang.Exception error) {
//								if (error instanceof org.apache.axis2.AxisFault) {
//									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
//									org.apache.axiom.om.OMElement faultElt = f.getDetail();
//									if (faultElt!=null){
//										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarLog"))){
//											//make the fault by reflection
//											try{
//													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarLog"));
//													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//													java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//													//message class
//													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarLog"));
//														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//															new java.lang.Class[]{messageClass});
//													m.invoke(ex,new java.lang.Object[]{messageObject});
//													
//					
//										            callback.receiveErrorconsultarLog(new java.rmi.RemoteException(ex.getMessage(), ex));
//                                            } catch(java.lang.ClassCastException e){
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarLog(f);
//                                            } catch (java.lang.ClassNotFoundException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarLog(f);
//                                            } catch (java.lang.NoSuchMethodException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarLog(f);
//                                            } catch (java.lang.reflect.InvocationTargetException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarLog(f);
//                                            } catch (java.lang.IllegalAccessException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarLog(f);
//                                            } catch (java.lang.InstantiationException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarLog(f);
//                                            } catch (org.apache.axis2.AxisFault e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarLog(f);
//                                            }
//									    } else {
//										    callback.receiveErrorconsultarLog(f);
//									    }
//									} else {
//									    callback.receiveErrorconsultarLog(f);
//									}
//								} else {
//								    callback.receiveErrorconsultarLog(error);
//								}
//                            }
//
//                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
//                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
//                                onError(fault);
//                            }
//
//                            public void onComplete() {
//                                try {
//                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                                } catch (org.apache.axis2.AxisFault axisFault) {
//                                    callback.receiveErrorconsultarLog(axisFault);
//                                }
//                            }
//                });
//                        
//
//          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
//        if ( _operations[7].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
//           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
//          _operations[7].setMessageReceiver(
//                    _callbackReceiver);
//        }
//
//           //execute the operation client
//           _operationClient.execute(false);
//
//                    }
//                
//                    /**
//                     * Auto generated method signature
//                     * 
//                     * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#consultarHistorico
//                     * @param consultarHistorico16
//                    
//                     */
//
//                    
//
//                            public  gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoResponse consultarHistorico(
//
//                            gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistorico consultarHistorico16)
//                        
//
//                    throws java.rmi.RemoteException
//                    
//                    {
//              org.apache.axis2.context.MessageContext _messageContext = null;
//              try{
//               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[8].getName());
//              _operationClient.getOptions().setAction("urn:consultarHistorico");
//              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//              // create a message context
//              _messageContext = new org.apache.axis2.context.MessageContext();
//
//              
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env = null;
//                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultarHistorico16,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarHistorico")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarHistorico"));
//                                                
//        //adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // set the message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message contxt to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//        //execute the operation client
//        _operationClient.execute(true);
//
//         
//               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
//                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
//                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
//                
//                
//                                java.lang.Object object = fromOM(
//                                             _returnEnv.getBody().getFirstElement() ,
//                                             gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoResponse.class,
//                                              getEnvelopeNamespaces(_returnEnv));
//
//                               
//                                        return (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoResponse)object;
//                                   
//         }catch(org.apache.axis2.AxisFault f){
//
//            org.apache.axiom.om.OMElement faultElt = f.getDetail();
//            if (faultElt!=null){
//                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistorico"))){
//                    //make the fault by reflection
//                    try{
//                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistorico"));
//                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//                        java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//                        //message class
//                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistorico"));
//                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//                                   new java.lang.Class[]{messageClass});
//                        m.invoke(ex,new java.lang.Object[]{messageObject});
//                        
//
//                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
//                    }catch(java.lang.ClassCastException e){
//                       // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.ClassNotFoundException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }catch (java.lang.NoSuchMethodException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.reflect.InvocationTargetException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }  catch (java.lang.IllegalAccessException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }   catch (java.lang.InstantiationException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }
//                }else{
//                    throw f;
//                }
//            }else{
//                throw f;
//            }
//            } finally {
//                if (_messageContext.getTransportOut() != null) {
//                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                }
//            }
//        }
//            
//                /**
//                * Auto generated method signature for Asynchronous Invocations
//                * 
//                * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#startconsultarHistorico
//                    * @param consultarHistorico16
//                
//                */
//                public  void startconsultarHistorico(
//
//                 gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistorico consultarHistorico16,
//
//                  final gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESCallbackHandler callback)
//
//                throws java.rmi.RemoteException{
//
//              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[8].getName());
//             _operationClient.getOptions().setAction("urn:consultarHistorico");
//             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env=null;
//              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();
//
//                    
//                                    //Style is Doc.
//                                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultarHistorico16,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarHistorico")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarHistorico"));
//                                                
//        // adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // create message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message context to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//
//                    
//                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
//                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
//                            try {
//                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
//                                
//                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
//                                                                         gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoResponse.class,
//                                                                         getEnvelopeNamespaces(resultEnv));
//                                        callback.receiveResultconsultarHistorico(
//                                        (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoResponse)object);
//                                        
//                            } catch (org.apache.axis2.AxisFault e) {
//                                callback.receiveErrorconsultarHistorico(e);
//                            }
//                            }
//
//                            public void onError(java.lang.Exception error) {
//								if (error instanceof org.apache.axis2.AxisFault) {
//									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
//									org.apache.axiom.om.OMElement faultElt = f.getDetail();
//									if (faultElt!=null){
//										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistorico"))){
//											//make the fault by reflection
//											try{
//													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistorico"));
//													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//													java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//													//message class
//													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarHistorico"));
//														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//															new java.lang.Class[]{messageClass});
//													m.invoke(ex,new java.lang.Object[]{messageObject});
//													
//					
//										            callback.receiveErrorconsultarHistorico(new java.rmi.RemoteException(ex.getMessage(), ex));
//                                            } catch(java.lang.ClassCastException e){
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistorico(f);
//                                            } catch (java.lang.ClassNotFoundException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistorico(f);
//                                            } catch (java.lang.NoSuchMethodException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistorico(f);
//                                            } catch (java.lang.reflect.InvocationTargetException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistorico(f);
//                                            } catch (java.lang.IllegalAccessException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistorico(f);
//                                            } catch (java.lang.InstantiationException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistorico(f);
//                                            } catch (org.apache.axis2.AxisFault e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarHistorico(f);
//                                            }
//									    } else {
//										    callback.receiveErrorconsultarHistorico(f);
//									    }
//									} else {
//									    callback.receiveErrorconsultarHistorico(f);
//									}
//								} else {
//								    callback.receiveErrorconsultarHistorico(error);
//								}
//                            }
//
//                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
//                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
//                                onError(fault);
//                            }
//
//                            public void onComplete() {
//                                try {
//                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                                } catch (org.apache.axis2.AxisFault axisFault) {
//                                    callback.receiveErrorconsultarHistorico(axisFault);
//                                }
//                            }
//                });
//                        
//
//          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
//        if ( _operations[8].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
//           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
//          _operations[8].setMessageReceiver(
//                    _callbackReceiver);
//        }
//
//           //execute the operation client
//           _operationClient.execute(false);
//
//                    }
//                
//                    /**
//                     * Auto generated method signature
//                     * 
//                     * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#consultarGateway
//                     * @param consultarGateway18
//                    
//                     */
//
//                    
//
//                            public  gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayResponse consultarGateway(
//
//                            gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGateway consultarGateway18)
//                        
//
//                    throws java.rmi.RemoteException
//                    
//                    {
//              org.apache.axis2.context.MessageContext _messageContext = null;
//              try{
//               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[9].getName());
//              _operationClient.getOptions().setAction("urn:consultarGateway");
//              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//              // create a message context
//              _messageContext = new org.apache.axis2.context.MessageContext();
//
//              
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env = null;
//                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultarGateway18,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarGateway")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarGateway"));
//                                                
//        //adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // set the message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message contxt to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//        //execute the operation client
//        _operationClient.execute(true);
//
//         
//               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
//                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
//                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
//                
//                
//                                java.lang.Object object = fromOM(
//                                             _returnEnv.getBody().getFirstElement() ,
//                                             gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayResponse.class,
//                                              getEnvelopeNamespaces(_returnEnv));
//
//                               
//                                        return (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayResponse)object;
//                                   
//         }catch(org.apache.axis2.AxisFault f){
//
//            org.apache.axiom.om.OMElement faultElt = f.getDetail();
//            if (faultElt!=null){
//                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGateway"))){
//                    //make the fault by reflection
//                    try{
//                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGateway"));
//                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//                        java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//                        //message class
//                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGateway"));
//                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//                                   new java.lang.Class[]{messageClass});
//                        m.invoke(ex,new java.lang.Object[]{messageObject});
//                        
//
//                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
//                    }catch(java.lang.ClassCastException e){
//                       // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.ClassNotFoundException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }catch (java.lang.NoSuchMethodException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.reflect.InvocationTargetException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }  catch (java.lang.IllegalAccessException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }   catch (java.lang.InstantiationException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }
//                }else{
//                    throw f;
//                }
//            }else{
//                throw f;
//            }
//            } finally {
//                if (_messageContext.getTransportOut() != null) {
//                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                }
//            }
//        }
//            
//                /**
//                * Auto generated method signature for Asynchronous Invocations
//                * 
//                * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#startconsultarGateway
//                    * @param consultarGateway18
//                
//                */
//                public  void startconsultarGateway(
//
//                 gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGateway consultarGateway18,
//
//                  final gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESCallbackHandler callback)
//
//                throws java.rmi.RemoteException{
//
//              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[9].getName());
//             _operationClient.getOptions().setAction("urn:consultarGateway");
//             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env=null;
//              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();
//
//                    
//                                    //Style is Doc.
//                                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultarGateway18,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarGateway")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarGateway"));
//                                                
//        // adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // create message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message context to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//
//                    
//                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
//                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
//                            try {
//                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
//                                
//                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
//                                                                         gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayResponse.class,
//                                                                         getEnvelopeNamespaces(resultEnv));
//                                        callback.receiveResultconsultarGateway(
//                                        (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayResponse)object);
//                                        
//                            } catch (org.apache.axis2.AxisFault e) {
//                                callback.receiveErrorconsultarGateway(e);
//                            }
//                            }
//
//                            public void onError(java.lang.Exception error) {
//								if (error instanceof org.apache.axis2.AxisFault) {
//									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
//									org.apache.axiom.om.OMElement faultElt = f.getDetail();
//									if (faultElt!=null){
//										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGateway"))){
//											//make the fault by reflection
//											try{
//													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGateway"));
//													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//													java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//													//message class
//													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGateway"));
//														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//															new java.lang.Class[]{messageClass});
//													m.invoke(ex,new java.lang.Object[]{messageObject});
//													
//					
//										            callback.receiveErrorconsultarGateway(new java.rmi.RemoteException(ex.getMessage(), ex));
//                                            } catch(java.lang.ClassCastException e){
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGateway(f);
//                                            } catch (java.lang.ClassNotFoundException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGateway(f);
//                                            } catch (java.lang.NoSuchMethodException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGateway(f);
//                                            } catch (java.lang.reflect.InvocationTargetException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGateway(f);
//                                            } catch (java.lang.IllegalAccessException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGateway(f);
//                                            } catch (java.lang.InstantiationException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGateway(f);
//                                            } catch (org.apache.axis2.AxisFault e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGateway(f);
//                                            }
//									    } else {
//										    callback.receiveErrorconsultarGateway(f);
//									    }
//									} else {
//									    callback.receiveErrorconsultarGateway(f);
//									}
//								} else {
//								    callback.receiveErrorconsultarGateway(error);
//								}
//                            }
//
//                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
//                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
//                                onError(fault);
//                            }
//
//                            public void onComplete() {
//                                try {
//                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                                } catch (org.apache.axis2.AxisFault axisFault) {
//                                    callback.receiveErrorconsultarGateway(axisFault);
//                                }
//                            }
//                });
//                        
//
//          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
//        if ( _operations[9].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
//           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
//          _operations[9].setMessageReceiver(
//                    _callbackReceiver);
//        }
//
//           //execute the operation client
//           _operationClient.execute(false);
//
//                    }
//                
//                    /**
//                     * Auto generated method signature
//                     * 
//                     * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#consultarGatewayComparacaoFonetica
//                     * @param consultarGatewayComparacaoFonetica20
//                    
//                     */
//
//                    
//
//                            public  gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaResponse consultarGatewayComparacaoFonetica(
//
//                            gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica consultarGatewayComparacaoFonetica20)
//                        
//
//                    throws java.rmi.RemoteException
//                    
//                    {
//              org.apache.axis2.context.MessageContext _messageContext = null;
//              try{
//               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[10].getName());
//              _operationClient.getOptions().setAction("urn:consultarGatewayComparacaoFonetica");
//              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//              // create a message context
//              _messageContext = new org.apache.axis2.context.MessageContext();
//
//              
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env = null;
//                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultarGatewayComparacaoFonetica20,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarGatewayComparacaoFonetica")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarGatewayComparacaoFonetica"));
//                                                
//        //adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // set the message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message contxt to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//        //execute the operation client
//        _operationClient.execute(true);
//
//         
//               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
//                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
//                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
//                
//                
//                                java.lang.Object object = fromOM(
//                                             _returnEnv.getBody().getFirstElement() ,
//                                             gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaResponse.class,
//                                              getEnvelopeNamespaces(_returnEnv));
//
//                               
//                                        return (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaResponse)object;
//                                   
//         }catch(org.apache.axis2.AxisFault f){
//
//            org.apache.axiom.om.OMElement faultElt = f.getDetail();
//            if (faultElt!=null){
//                if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFonetica"))){
//                    //make the fault by reflection
//                    try{
//                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFonetica"));
//                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//                        java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//                        //message class
//                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFonetica"));
//                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//                                   new java.lang.Class[]{messageClass});
//                        m.invoke(ex,new java.lang.Object[]{messageObject});
//                        
//
//                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
//                    }catch(java.lang.ClassCastException e){
//                       // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.ClassNotFoundException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }catch (java.lang.NoSuchMethodException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    } catch (java.lang.reflect.InvocationTargetException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }  catch (java.lang.IllegalAccessException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }   catch (java.lang.InstantiationException e) {
//                        // we cannot intantiate the class - throw the original Axis fault
//                        throw f;
//                    }
//                }else{
//                    throw f;
//                }
//            }else{
//                throw f;
//            }
//            } finally {
//                if (_messageContext.getTransportOut() != null) {
//                      _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                }
//            }
//        }
//            
//                /**
//                * Auto generated method signature for Asynchronous Invocations
//                * 
//                * @see gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICES#startconsultarGatewayComparacaoFonetica
//                    * @param consultarGatewayComparacaoFonetica20
//                
//                */
//                public  void startconsultarGatewayComparacaoFonetica(
//
//                 gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica consultarGatewayComparacaoFonetica20,
//
//                  final gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESCallbackHandler callback)
//
//                throws java.rmi.RemoteException{
//
//              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[10].getName());
//             _operationClient.getOptions().setAction("urn:consultarGatewayComparacaoFonetica");
//             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
//
//              
//              
//                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
//              
//
//
//              // create SOAP envelope with that payload
//              org.apache.axiom.soap.SOAPEnvelope env=null;
//              final org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();
//
//                    
//                                    //Style is Doc.
//                                    
//                                                    
//                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
//                                                    consultarGatewayComparacaoFonetica20,
//                                                    optimizeContent(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarGatewayComparacaoFonetica")), new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                    "consultarGatewayComparacaoFonetica"));
//                                                
//        // adding SOAP soap_headers
//         _serviceClient.addHeadersToEnvelope(env);
//        // create message context with that soap envelope
//        _messageContext.setEnvelope(env);
//
//        // add the message context to the operation client
//        _operationClient.addMessageContext(_messageContext);
//
//
//                    
//                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
//                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
//                            try {
//                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
//                                
//                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
//                                                                         gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaResponse.class,
//                                                                         getEnvelopeNamespaces(resultEnv));
//                                        callback.receiveResultconsultarGatewayComparacaoFonetica(
//                                        (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaResponse)object);
//                                        
//                            } catch (org.apache.axis2.AxisFault e) {
//                                callback.receiveErrorconsultarGatewayComparacaoFonetica(e);
//                            }
//                            }
//
//                            public void onError(java.lang.Exception error) {
//								if (error instanceof org.apache.axis2.AxisFault) {
//									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
//									org.apache.axiom.om.OMElement faultElt = f.getDetail();
//									if (faultElt!=null){
//										if (faultExceptionNameMap.containsKey(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFonetica"))){
//											//make the fault by reflection
//											try{
//													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFonetica"));
//													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
//													java.lang.Exception ex = (java.lang.Exception) exceptionClass.newInstance();
//													//message class
//													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(new org.apache.axis2.client.FaultMapKey(faultElt.getQName(),"consultarGatewayComparacaoFonetica"));
//														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
//													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
//													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
//															new java.lang.Class[]{messageClass});
//													m.invoke(ex,new java.lang.Object[]{messageObject});
//													
//					
//										            callback.receiveErrorconsultarGatewayComparacaoFonetica(new java.rmi.RemoteException(ex.getMessage(), ex));
//                                            } catch(java.lang.ClassCastException e){
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFonetica(f);
//                                            } catch (java.lang.ClassNotFoundException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFonetica(f);
//                                            } catch (java.lang.NoSuchMethodException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFonetica(f);
//                                            } catch (java.lang.reflect.InvocationTargetException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFonetica(f);
//                                            } catch (java.lang.IllegalAccessException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFonetica(f);
//                                            } catch (java.lang.InstantiationException e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFonetica(f);
//                                            } catch (org.apache.axis2.AxisFault e) {
//                                                // we cannot intantiate the class - throw the original Axis fault
//                                                callback.receiveErrorconsultarGatewayComparacaoFonetica(f);
//                                            }
//									    } else {
//										    callback.receiveErrorconsultarGatewayComparacaoFonetica(f);
//									    }
//									} else {
//									    callback.receiveErrorconsultarGatewayComparacaoFonetica(f);
//									}
//								} else {
//								    callback.receiveErrorconsultarGatewayComparacaoFonetica(error);
//								}
//                            }
//
//                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
//                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
//                                onError(fault);
//                            }
//
//                            public void onComplete() {
//                                try {
//                                    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
//                                } catch (org.apache.axis2.AxisFault axisFault) {
//                                    callback.receiveErrorconsultarGatewayComparacaoFonetica(axisFault);
//                                }
//                            }
//                });
//                        
//
//          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
//        if ( _operations[10].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
//           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
//          _operations[10].setMessageReceiver(
//                    _callbackReceiver);
//        }
//
//           //execute the operation client
//           _operationClient.execute(false);
//
//                    }
//                
//
//
//       /**
//        *  A utility method that copies the namepaces from the SOAPEnvelope
//        */
//       private java.util.Map getEnvelopeNamespaces(org.apache.axiom.soap.SOAPEnvelope env){
//        java.util.Map returnMap = new java.util.HashMap();
//        java.util.Iterator namespaceIterator = env.getAllDeclaredNamespaces();
//        while (namespaceIterator.hasNext()) {
//            org.apache.axiom.om.OMNamespace ns = (org.apache.axiom.om.OMNamespace) namespaceIterator.next();
//            returnMap.put(ns.getPrefix(),ns.getNamespaceURI());
//        }
//       return returnMap;
//    }
//
//    
//    
//    private javax.xml.namespace.QName[] opNameArray = null;
//    private boolean optimizeContent(javax.xml.namespace.QName opName) {
//        
//
//        if (opNameArray == null) {
//            return false;
//        }
//        for (int i = 0; i < opNameArray.length; i++) {
//            if (opName.equals(opNameArray[i])) {
//                return true;   
//            }
//        }
//        return false;
//    }
//     //http://188.138.117.15:80/neurotech/services/GATEWAY_WEBSERVICES.GATEWAY_WEBSERVICESHttpSoap12Endpoint/
//        public static class ConsultarGatewayResponse
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultarGatewayResponse",
//                "ns3");
//
//            
//
//                        /**
//                        * field for _return
//                        * This was an Array!
//                        */
//
//                        
//                                    protected RetornoWSIdLog[] local_return ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean local_returnTracker = false ;
//
//                           public boolean is_returnSpecified(){
//                               return local_returnTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return RetornoWSIdLog[]
//                           */
//                           public  RetornoWSIdLog[] get_return(){
//                               return local_return;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for _return
//                               */
//                              protected void validate_return(RetornoWSIdLog[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param _return
//                              */
//                              public void set_return(RetornoWSIdLog[] param){
//                              
//                                   validate_return(param);
//
//                               local_returnTracker = true;
//                                      
//                                      this.local_return=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param RetornoWSIdLog
//                             */
//                             public void add_return(RetornoWSIdLog param){
//                                   if (local_return == null){
//                                   local_return = new RetornoWSIdLog[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                local_returnTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(local_return);
//                               list.add(param);
//                               this.local_return =
//                             (RetornoWSIdLog[])list.toArray(
//                            new RetornoWSIdLog[list.size()]);
//
//                             }
//                             
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultarGatewayResponse",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultarGatewayResponse",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (local_returnTracker){
//                                       if (local_return!=null){
//                                            for (int i = 0;i < local_return.length;i++){
//                                                if (local_return[i] != null){
//                                                 local_return[i].serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "return", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "return", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (local_returnTracker){
//                             if (local_return!=null) {
//                                 for (int i = 0;i < local_return.length;i++){
//
//                                    if (local_return[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                         elementList.add(local_return[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                        elementList.add(local_return);
//                                    
//                             }
//
//                        }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultarGatewayResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultarGatewayResponse object =
//                new ConsultarGatewayResponse();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultarGatewayResponse".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultarGatewayResponse)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list1 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list1.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list1.add(RetornoWSIdLog.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone1 = false;
//                                                        while(!loopDone1){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone1 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list1.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list1.add(RetornoWSIdLog.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone1 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.set_return((RetornoWSIdLog[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                RetornoWSIdLog.class,
//                                                                list1));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class GatewayPanelOperation
//        implements org.apache.axis2.databinding.ADBBean{
//        /* This type was generated from the piece of schema that had
//                name = GatewayPanelOperation
//                Namespace URI = http://panel.gateway.neurotech.com.br/xsd
//                Namespace Prefix = ns2
//                */
//            
//
//                        /**
//                        * field for Login
//                        */
//
//                        
//                                    protected java.lang.String localLogin ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localLoginTracker = false ;
//
//                           public boolean isLoginSpecified(){
//                               return localLoginTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getLogin(){
//                               return localLogin;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param Login
//                               */
//                               public void setLogin(java.lang.String param){
//                            localLoginTracker = true;
//                                   
//                                            this.localLogin=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for OperationID
//                        */
//
//                        
//                                    protected int localOperationID ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localOperationIDTracker = false ;
//
//                           public boolean isOperationIDSpecified(){
//                               return localOperationIDTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return int
//                           */
//                           public  int getOperationID(){
//                               return localOperationID;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param OperationID
//                               */
//                               public void setOperationID(int param){
//                            
//                                       // setting primitive attribute tracker to true
//                                       localOperationIDTracker =
//                                       param != java.lang.Integer.MIN_VALUE;
//                                   
//                                            this.localOperationID=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for OperationXML
//                        */
//
//                        
//                                    protected java.lang.String localOperationXML ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localOperationXMLTracker = false ;
//
//                           public boolean isOperationXMLSpecified(){
//                               return localOperationXMLTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getOperationXML(){
//                               return localOperationXML;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param OperationXML
//                               */
//                               public void setOperationXML(java.lang.String param){
//                            localOperationXMLTracker = true;
//                                   
//                                            this.localOperationXML=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
//               return factory.createOMElement(dataSource,parentQName);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://panel.gateway.neurotech.com.br/xsd");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":GatewayPanelOperation",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "GatewayPanelOperation",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (localLoginTracker){
//                                    namespace = "http://panel.gateway.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "login", xmlWriter);
//                             
//
//                                          if (localLogin==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localLogin);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localOperationIDTracker){
//                                    namespace = "http://panel.gateway.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "operationID", xmlWriter);
//                             
//                                               if (localOperationID==java.lang.Integer.MIN_VALUE) {
//                                           
//                                                         throw new org.apache.axis2.databinding.ADBException("operationID cannot be null!!");
//                                                      
//                                               } else {
//                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOperationID));
//                                               }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localOperationXMLTracker){
//                                    namespace = "http://panel.gateway.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "operationXML", xmlWriter);
//                             
//
//                                          if (localOperationXML==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localOperationXML);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://panel.gateway.neurotech.com.br/xsd")){
//                return "ns2";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (localLoginTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://panel.gateway.neurotech.com.br/xsd",
//                                                                      "login"));
//                                 
//                                         elementList.add(localLogin==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLogin));
//                                    } if (localOperationIDTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://panel.gateway.neurotech.com.br/xsd",
//                                                                      "operationID"));
//                                 
//                                elementList.add(
//                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOperationID));
//                            } if (localOperationXMLTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://panel.gateway.neurotech.com.br/xsd",
//                                                                      "operationXML"));
//                                 
//                                         elementList.add(localOperationXML==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOperationXML));
//                                    }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static GatewayPanelOperation parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            GatewayPanelOperation object =
//                new GatewayPanelOperation();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"GatewayPanelOperation".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (GatewayPanelOperation)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://panel.gateway.neurotech.com.br/xsd","login").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setLogin(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://panel.gateway.neurotech.com.br/xsd","operationID").equals(reader.getName())){
//                                
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setOperationID(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
//                                              
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                               object.setOperationID(java.lang.Integer.MIN_VALUE);
//                                           
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://panel.gateway.neurotech.com.br/xsd","operationXML").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setOperationXML(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultarGateway
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultarGateway",
//                "ns3");
//
//            
//
//                        /**
//                        * field for PIdentificador
//                        */
//
//                        
//                                    protected int localPIdentificador ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPIdentificadorTracker = false ;
//
//                           public boolean isPIdentificadorSpecified(){
//                               return localPIdentificadorTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return int
//                           */
//                           public  int getPIdentificador(){
//                               return localPIdentificador;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PIdentificador
//                               */
//                               public void setPIdentificador(int param){
//                            
//                                       // setting primitive attribute tracker to true
//                                       localPIdentificadorTracker =
//                                       param != java.lang.Integer.MIN_VALUE;
//                                   
//                                            this.localPIdentificador=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PLogin
//                        */
//
//                        
//                                    protected java.lang.String localPLogin ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPLoginTracker = false ;
//
//                           public boolean isPLoginSpecified(){
//                               return localPLoginTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPLogin(){
//                               return localPLogin;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PLogin
//                               */
//                               public void setPLogin(java.lang.String param){
//                            localPLoginTracker = true;
//                                   
//                                            this.localPLogin=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PSenha
//                        */
//
//                        
//                                    protected java.lang.String localPSenha ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPSenhaTracker = false ;
//
//                           public boolean isPSenhaSpecified(){
//                               return localPSenhaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPSenha(){
//                               return localPSenha;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PSenha
//                               */
//                               public void setPSenha(java.lang.String param){
//                            localPSenhaTracker = true;
//                                   
//                                            this.localPSenha=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PConsultas
//                        * This was an Array!
//                        */
//
//                        
//                                    protected ConsultaWS[] localPConsultas ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPConsultasTracker = false ;
//
//                           public boolean isPConsultasSpecified(){
//                               return localPConsultasTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return ConsultaWS[]
//                           */
//                           public  ConsultaWS[] getPConsultas(){
//                               return localPConsultas;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for PConsultas
//                               */
//                              protected void validatePConsultas(ConsultaWS[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param PConsultas
//                              */
//                              public void setPConsultas(ConsultaWS[] param){
//                              
//                                   validatePConsultas(param);
//
//                               localPConsultasTracker = true;
//                                      
//                                      this.localPConsultas=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param ConsultaWS
//                             */
//                             public void addPConsultas(ConsultaWS param){
//                                   if (localPConsultas == null){
//                                   localPConsultas = new ConsultaWS[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                localPConsultasTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localPConsultas);
//                               list.add(param);
//                               this.localPConsultas =
//                             (ConsultaWS[])list.toArray(
//                            new ConsultaWS[list.size()]);
//
//                             }
//                             
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultarGateway",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultarGateway",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (localPIdentificadorTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pIdentificador", xmlWriter);
//                             
//                                               if (localPIdentificador==java.lang.Integer.MIN_VALUE) {
//                                           
//                                                         throw new org.apache.axis2.databinding.ADBException("pIdentificador cannot be null!!");
//                                                      
//                                               } else {
//                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                                               }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPLoginTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pLogin", xmlWriter);
//                             
//
//                                          if (localPLogin==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPLogin);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPSenhaTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pSenha", xmlWriter);
//                             
//
//                                          if (localPSenha==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPSenha);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPConsultasTracker){
//                                       if (localPConsultas!=null){
//                                            for (int i = 0;i < localPConsultas.length;i++){
//                                                if (localPConsultas[i] != null){
//                                                 localPConsultas[i].serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsultas"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "pConsultas", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "pConsultas", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (localPIdentificadorTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pIdentificador"));
//                                 
//                                elementList.add(
//                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                            } if (localPLoginTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pLogin"));
//                                 
//                                         elementList.add(localPLogin==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPLogin));
//                                    } if (localPSenhaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pSenha"));
//                                 
//                                         elementList.add(localPSenha==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPSenha));
//                                    } if (localPConsultasTracker){
//                             if (localPConsultas!=null) {
//                                 for (int i = 0;i < localPConsultas.length;i++){
//
//                                    if (localPConsultas[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "pConsultas"));
//                                         elementList.add(localPConsultas[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "pConsultas"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "pConsultas"));
//                                        elementList.add(localPConsultas);
//                                    
//                             }
//
//                        }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultarGateway parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultarGateway object =
//                new ConsultarGateway();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultarGateway".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultarGateway)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list4 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pIdentificador").equals(reader.getName())){
//                                
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPIdentificador(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
//                                              
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                               object.setPIdentificador(java.lang.Integer.MIN_VALUE);
//                                           
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pLogin").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPLogin(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pSenha").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPSenha(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsultas").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list4.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list4.add(ConsultaWS.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone4 = false;
//                                                        while(!loopDone4){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone4 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsultas").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list4.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list4.add(ConsultaWS.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone4 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setPConsultas((ConsultaWS[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                ConsultaWS.class,
//                                                                list4));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class AtualizarCacheResponse
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "atualizarCacheResponse",
//                "ns3");
//
//            
//
//                        /**
//                        * field for _return
//                        */
//
//                        
//                                    protected CacheWS local_return ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean local_returnTracker = false ;
//
//                           public boolean is_returnSpecified(){
//                               return local_returnTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return CacheWS
//                           */
//                           public  CacheWS get_return(){
//                               return local_return;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param _return
//                               */
//                               public void set_return(CacheWS param){
//                            local_returnTracker = true;
//                                   
//                                            this.local_return=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":atualizarCacheResponse",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "atualizarCacheResponse",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (local_returnTracker){
//                                    if (local_return==null){
//
//                                        writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "return", xmlWriter);
//
//                                       // write the nil attribute
//                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                      xmlWriter.writeEndElement();
//                                    }else{
//                                     local_return.serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return"),
//                                        xmlWriter);
//                                    }
//                                }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (local_returnTracker){
//                            elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "return"));
//                            
//                            
//                                    elementList.add(local_return==null?null:
//                                    local_return);
//                                }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static AtualizarCacheResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            AtualizarCacheResponse object =
//                new AtualizarCacheResponse();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"atualizarCacheResponse".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (AtualizarCacheResponse)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return").equals(reader.getName())){
//                                
//                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                          object.set_return(null);
//                                          reader.next();
//                                            
//                                            reader.next();
//                                          
//                                      }else{
//                                    
//                                                object.set_return(CacheWS.Factory.parse(reader));
//                                              
//                                        reader.next();
//                                    }
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class GatewayPanelHTML
//        implements org.apache.axis2.databinding.ADBBean{
//        /* This type was generated from the piece of schema that had
//                name = GatewayPanelHTML
//                Namespace URI = http://panel.gateway.neurotech.com.br/xsd
//                Namespace Prefix = ns2
//                */
//            
//
//                        /**
//                        * field for HTML
//                        */
//
//                        
//                                    protected java.lang.String localHTML ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localHTMLTracker = false ;
//
//                           public boolean isHTMLSpecified(){
//                               return localHTMLTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getHTML(){
//                               return localHTML;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param HTML
//                               */
//                               public void setHTML(java.lang.String param){
//                            localHTMLTracker = true;
//                                   
//                                            this.localHTML=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
//               return factory.createOMElement(dataSource,parentQName);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://panel.gateway.neurotech.com.br/xsd");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":GatewayPanelHTML",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "GatewayPanelHTML",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (localHTMLTracker){
//                                    namespace = "http://panel.gateway.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "HTML", xmlWriter);
//                             
//
//                                          if (localHTML==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localHTML);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://panel.gateway.neurotech.com.br/xsd")){
//                return "ns2";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (localHTMLTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://panel.gateway.neurotech.com.br/xsd",
//                                                                      "HTML"));
//                                 
//                                         elementList.add(localHTML==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHTML));
//                                    }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static GatewayPanelHTML parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            GatewayPanelHTML object =
//                new GatewayPanelHTML();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"GatewayPanelHTML".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (GatewayPanelHTML)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://panel.gateway.neurotech.com.br/xsd","HTML").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setHTML(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultarGatewayComparacaoFonetica
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultarGatewayComparacaoFonetica",
//                "ns3");
//
//            
//
//                        /**
//                        * field for PIdentificador
//                        */
//
//                        
//                                    protected int localPIdentificador ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPIdentificadorTracker = false ;
//
//                           public boolean isPIdentificadorSpecified(){
//                               return localPIdentificadorTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return int
//                           */
//                           public  int getPIdentificador(){
//                               return localPIdentificador;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PIdentificador
//                               */
//                               public void setPIdentificador(int param){
//                            
//                                       // setting primitive attribute tracker to true
//                                       localPIdentificadorTracker =
//                                       param != java.lang.Integer.MIN_VALUE;
//                                   
//                                            this.localPIdentificador=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PLogin
//                        */
//
//                        
//                                    protected java.lang.String localPLogin ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPLoginTracker = false ;
//
//                           public boolean isPLoginSpecified(){
//                               return localPLoginTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPLogin(){
//                               return localPLogin;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PLogin
//                               */
//                               public void setPLogin(java.lang.String param){
//                            localPLoginTracker = true;
//                                   
//                                            this.localPLogin=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PSenha
//                        */
//
//                        
//                                    protected java.lang.String localPSenha ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPSenhaTracker = false ;
//
//                           public boolean isPSenhaSpecified(){
//                               return localPSenhaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPSenha(){
//                               return localPSenha;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PSenha
//                               */
//                               public void setPSenha(java.lang.String param){
//                            localPSenhaTracker = true;
//                                   
//                                            this.localPSenha=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PAlias
//                        */
//
//                        
//                                    protected java.lang.String localPAlias ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPAliasTracker = false ;
//
//                           public boolean isPAliasSpecified(){
//                               return localPAliasTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPAlias(){
//                               return localPAlias;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PAlias
//                               */
//                               public void setPAlias(java.lang.String param){
//                            localPAliasTracker = true;
//                                   
//                                            this.localPAlias=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PConsultas
//                        * This was an Array!
//                        */
//
//                        
//                                    protected ConsultaWSComparacaoFonetica[] localPConsultas ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPConsultasTracker = false ;
//
//                           public boolean isPConsultasSpecified(){
//                               return localPConsultasTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return ConsultaWSComparacaoFonetica[]
//                           */
//                           public  ConsultaWSComparacaoFonetica[] getPConsultas(){
//                               return localPConsultas;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for PConsultas
//                               */
//                              protected void validatePConsultas(ConsultaWSComparacaoFonetica[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param PConsultas
//                              */
//                              public void setPConsultas(ConsultaWSComparacaoFonetica[] param){
//                              
//                                   validatePConsultas(param);
//
//                               localPConsultasTracker = true;
//                                      
//                                      this.localPConsultas=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param ConsultaWSComparacaoFonetica
//                             */
//                             public void addPConsultas(ConsultaWSComparacaoFonetica param){
//                                   if (localPConsultas == null){
//                                   localPConsultas = new ConsultaWSComparacaoFonetica[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                localPConsultasTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localPConsultas);
//                               list.add(param);
//                               this.localPConsultas =
//                             (ConsultaWSComparacaoFonetica[])list.toArray(
//                            new ConsultaWSComparacaoFonetica[list.size()]);
//
//                             }
//                             
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultarGatewayComparacaoFonetica",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultarGatewayComparacaoFonetica",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (localPIdentificadorTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pIdentificador", xmlWriter);
//                             
//                                               if (localPIdentificador==java.lang.Integer.MIN_VALUE) {
//                                           
//                                                         throw new org.apache.axis2.databinding.ADBException("pIdentificador cannot be null!!");
//                                                      
//                                               } else {
//                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                                               }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPLoginTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pLogin", xmlWriter);
//                             
//
//                                          if (localPLogin==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPLogin);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPSenhaTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pSenha", xmlWriter);
//                             
//
//                                          if (localPSenha==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPSenha);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPAliasTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pAlias", xmlWriter);
//                             
//
//                                          if (localPAlias==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPAlias);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPConsultasTracker){
//                                       if (localPConsultas!=null){
//                                            for (int i = 0;i < localPConsultas.length;i++){
//                                                if (localPConsultas[i] != null){
//                                                 localPConsultas[i].serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsultas"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "pConsultas", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "pConsultas", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (localPIdentificadorTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pIdentificador"));
//                                 
//                                elementList.add(
//                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                            } if (localPLoginTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pLogin"));
//                                 
//                                         elementList.add(localPLogin==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPLogin));
//                                    } if (localPSenhaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pSenha"));
//                                 
//                                         elementList.add(localPSenha==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPSenha));
//                                    } if (localPAliasTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pAlias"));
//                                 
//                                         elementList.add(localPAlias==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPAlias));
//                                    } if (localPConsultasTracker){
//                             if (localPConsultas!=null) {
//                                 for (int i = 0;i < localPConsultas.length;i++){
//
//                                    if (localPConsultas[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "pConsultas"));
//                                         elementList.add(localPConsultas[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "pConsultas"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "pConsultas"));
//                                        elementList.add(localPConsultas);
//                                    
//                             }
//
//                        }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultarGatewayComparacaoFonetica parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultarGatewayComparacaoFonetica object =
//                new ConsultarGatewayComparacaoFonetica();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultarGatewayComparacaoFonetica".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultarGatewayComparacaoFonetica)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list5 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pIdentificador").equals(reader.getName())){
//                                
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPIdentificador(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
//                                              
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                               object.setPIdentificador(java.lang.Integer.MIN_VALUE);
//                                           
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pLogin").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPLogin(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pSenha").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPSenha(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pAlias").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPAlias(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsultas").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list5.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list5.add(ConsultaWSComparacaoFonetica.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone5 = false;
//                                                        while(!loopDone5){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone5 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsultas").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list5.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list5.add(ConsultaWSComparacaoFonetica.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone5 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setPConsultas((ConsultaWSComparacaoFonetica[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                ConsultaWSComparacaoFonetica.class,
//                                                                list5));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultarHistoricoComparacaoFonetica2
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultarHistoricoComparacaoFonetica2",
//                "ns3");
//
//            
//
//                        /**
//                        * field for PIdentificador
//                        */
//
//                        
//                                    protected int localPIdentificador ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPIdentificadorTracker = false ;
//
//                           public boolean isPIdentificadorSpecified(){
//                               return localPIdentificadorTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return int
//                           */
//                           public  int getPIdentificador(){
//                               return localPIdentificador;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PIdentificador
//                               */
//                               public void setPIdentificador(int param){
//                            
//                                       // setting primitive attribute tracker to true
//                                       localPIdentificadorTracker =
//                                       param != java.lang.Integer.MIN_VALUE;
//                                   
//                                            this.localPIdentificador=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PLogin
//                        */
//
//                        
//                                    protected java.lang.String localPLogin ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPLoginTracker = false ;
//
//                           public boolean isPLoginSpecified(){
//                               return localPLoginTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPLogin(){
//                               return localPLogin;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PLogin
//                               */
//                               public void setPLogin(java.lang.String param){
//                            localPLoginTracker = true;
//                                   
//                                            this.localPLogin=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PSenha
//                        */
//
//                        
//                                    protected java.lang.String localPSenha ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPSenhaTracker = false ;
//
//                           public boolean isPSenhaSpecified(){
//                               return localPSenhaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPSenha(){
//                               return localPSenha;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PSenha
//                               */
//                               public void setPSenha(java.lang.String param){
//                            localPSenhaTracker = true;
//                                   
//                                            this.localPSenha=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PConsulta
//                        */
//
//                        
//                                    protected ConsultaWSComparacaoFonetica localPConsulta ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPConsultaTracker = false ;
//
//                           public boolean isPConsultaSpecified(){
//                               return localPConsultaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return ConsultaWSComparacaoFonetica
//                           */
//                           public  ConsultaWSComparacaoFonetica getPConsulta(){
//                               return localPConsulta;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PConsulta
//                               */
//                               public void setPConsulta(ConsultaWSComparacaoFonetica param){
//                            localPConsultaTracker = true;
//                                   
//                                            this.localPConsulta=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PAlgoritmo
//                        */
//
//                        
//                                    protected java.lang.String localPAlgoritmo ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPAlgoritmoTracker = false ;
//
//                           public boolean isPAlgoritmoSpecified(){
//                               return localPAlgoritmoTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPAlgoritmo(){
//                               return localPAlgoritmo;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PAlgoritmo
//                               */
//                               public void setPAlgoritmo(java.lang.String param){
//                            localPAlgoritmoTracker = true;
//                                   
//                                            this.localPAlgoritmo=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultarHistoricoComparacaoFonetica2",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultarHistoricoComparacaoFonetica2",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (localPIdentificadorTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pIdentificador", xmlWriter);
//                             
//                                               if (localPIdentificador==java.lang.Integer.MIN_VALUE) {
//                                           
//                                                         throw new org.apache.axis2.databinding.ADBException("pIdentificador cannot be null!!");
//                                                      
//                                               } else {
//                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                                               }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPLoginTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pLogin", xmlWriter);
//                             
//
//                                          if (localPLogin==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPLogin);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPSenhaTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pSenha", xmlWriter);
//                             
//
//                                          if (localPSenha==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPSenha);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPConsultaTracker){
//                                    if (localPConsulta==null){
//
//                                        writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "pConsulta", xmlWriter);
//
//                                       // write the nil attribute
//                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                      xmlWriter.writeEndElement();
//                                    }else{
//                                     localPConsulta.serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsulta"),
//                                        xmlWriter);
//                                    }
//                                } if (localPAlgoritmoTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pAlgoritmo", xmlWriter);
//                             
//
//                                          if (localPAlgoritmo==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPAlgoritmo);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (localPIdentificadorTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pIdentificador"));
//                                 
//                                elementList.add(
//                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                            } if (localPLoginTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pLogin"));
//                                 
//                                         elementList.add(localPLogin==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPLogin));
//                                    } if (localPSenhaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pSenha"));
//                                 
//                                         elementList.add(localPSenha==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPSenha));
//                                    } if (localPConsultaTracker){
//                            elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pConsulta"));
//                            
//                            
//                                    elementList.add(localPConsulta==null?null:
//                                    localPConsulta);
//                                } if (localPAlgoritmoTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pAlgoritmo"));
//                                 
//                                         elementList.add(localPAlgoritmo==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPAlgoritmo));
//                                    }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultarHistoricoComparacaoFonetica2 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultarHistoricoComparacaoFonetica2 object =
//                new ConsultarHistoricoComparacaoFonetica2();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultarHistoricoComparacaoFonetica2".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultarHistoricoComparacaoFonetica2)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pIdentificador").equals(reader.getName())){
//                                
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPIdentificador(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
//                                              
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                               object.setPIdentificador(java.lang.Integer.MIN_VALUE);
//                                           
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pLogin").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPLogin(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pSenha").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPSenha(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsulta").equals(reader.getName())){
//                                
//                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                          object.setPConsulta(null);
//                                          reader.next();
//                                            
//                                            reader.next();
//                                          
//                                      }else{
//                                    
//                                                object.setPConsulta(ConsultaWSComparacaoFonetica.Factory.parse(reader));
//                                              
//                                        reader.next();
//                                    }
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pAlgoritmo").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPAlgoritmo(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultarGatewayComparacaoFonetica2
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultarGatewayComparacaoFonetica2",
//                "ns3");
//
//            
//
//                        /**
//                        * field for PIdentificador
//                        */
//
//                        
//                                    protected int localPIdentificador ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPIdentificadorTracker = false ;
//
//                           public boolean isPIdentificadorSpecified(){
//                               return localPIdentificadorTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return int
//                           */
//                           public  int getPIdentificador(){
//                               return localPIdentificador;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PIdentificador
//                               */
//                               public void setPIdentificador(int param){
//                            
//                                       // setting primitive attribute tracker to true
//                                       localPIdentificadorTracker =
//                                       param != java.lang.Integer.MIN_VALUE;
//                                   
//                                            this.localPIdentificador=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PLogin
//                        */
//
//                        
//                                    protected java.lang.String localPLogin ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPLoginTracker = false ;
//
//                           public boolean isPLoginSpecified(){
//                               return localPLoginTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPLogin(){
//                               return localPLogin;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PLogin
//                               */
//                               public void setPLogin(java.lang.String param){
//                            localPLoginTracker = true;
//                                   
//                                            this.localPLogin=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PSenha
//                        */
//
//                        
//                                    protected java.lang.String localPSenha ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPSenhaTracker = false ;
//
//                           public boolean isPSenhaSpecified(){
//                               return localPSenhaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPSenha(){
//                               return localPSenha;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PSenha
//                               */
//                               public void setPSenha(java.lang.String param){
//                            localPSenhaTracker = true;
//                                   
//                                            this.localPSenha=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PAlias
//                        */
//
//                        
//                                    protected java.lang.String localPAlias ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPAliasTracker = false ;
//
//                           public boolean isPAliasSpecified(){
//                               return localPAliasTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPAlias(){
//                               return localPAlias;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PAlias
//                               */
//                               public void setPAlias(java.lang.String param){
//                            localPAliasTracker = true;
//                                   
//                                            this.localPAlias=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PConsultas
//                        * This was an Array!
//                        */
//
//                        
//                                    protected ConsultaWSComparacaoFonetica[] localPConsultas ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPConsultasTracker = false ;
//
//                           public boolean isPConsultasSpecified(){
//                               return localPConsultasTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return ConsultaWSComparacaoFonetica[]
//                           */
//                           public  ConsultaWSComparacaoFonetica[] getPConsultas(){
//                               return localPConsultas;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for PConsultas
//                               */
//                              protected void validatePConsultas(ConsultaWSComparacaoFonetica[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param PConsultas
//                              */
//                              public void setPConsultas(ConsultaWSComparacaoFonetica[] param){
//                              
//                                   validatePConsultas(param);
//
//                               localPConsultasTracker = true;
//                                      
//                                      this.localPConsultas=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param ConsultaWSComparacaoFonetica
//                             */
//                             public void addPConsultas(ConsultaWSComparacaoFonetica param){
//                                   if (localPConsultas == null){
//                                   localPConsultas = new ConsultaWSComparacaoFonetica[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                localPConsultasTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localPConsultas);
//                               list.add(param);
//                               this.localPConsultas =
//                             (ConsultaWSComparacaoFonetica[])list.toArray(
//                            new ConsultaWSComparacaoFonetica[list.size()]);
//
//                             }
//                             
//
//                        /**
//                        * field for PAlgoritmo
//                        */
//
//                        
//                                    protected java.lang.String localPAlgoritmo ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPAlgoritmoTracker = false ;
//
//                           public boolean isPAlgoritmoSpecified(){
//                               return localPAlgoritmoTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPAlgoritmo(){
//                               return localPAlgoritmo;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PAlgoritmo
//                               */
//                               public void setPAlgoritmo(java.lang.String param){
//                            localPAlgoritmoTracker = true;
//                                   
//                                            this.localPAlgoritmo=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultarGatewayComparacaoFonetica2",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultarGatewayComparacaoFonetica2",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (localPIdentificadorTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pIdentificador", xmlWriter);
//                             
//                                               if (localPIdentificador==java.lang.Integer.MIN_VALUE) {
//                                           
//                                                         throw new org.apache.axis2.databinding.ADBException("pIdentificador cannot be null!!");
//                                                      
//                                               } else {
//                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                                               }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPLoginTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pLogin", xmlWriter);
//                             
//
//                                          if (localPLogin==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPLogin);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPSenhaTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pSenha", xmlWriter);
//                             
//
//                                          if (localPSenha==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPSenha);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPAliasTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pAlias", xmlWriter);
//                             
//
//                                          if (localPAlias==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPAlias);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPConsultasTracker){
//                                       if (localPConsultas!=null){
//                                            for (int i = 0;i < localPConsultas.length;i++){
//                                                if (localPConsultas[i] != null){
//                                                 localPConsultas[i].serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsultas"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "pConsultas", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "pConsultas", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 } if (localPAlgoritmoTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pAlgoritmo", xmlWriter);
//                             
//
//                                          if (localPAlgoritmo==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPAlgoritmo);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (localPIdentificadorTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pIdentificador"));
//                                 
//                                elementList.add(
//                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                            } if (localPLoginTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pLogin"));
//                                 
//                                         elementList.add(localPLogin==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPLogin));
//                                    } if (localPSenhaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pSenha"));
//                                 
//                                         elementList.add(localPSenha==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPSenha));
//                                    } if (localPAliasTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pAlias"));
//                                 
//                                         elementList.add(localPAlias==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPAlias));
//                                    } if (localPConsultasTracker){
//                             if (localPConsultas!=null) {
//                                 for (int i = 0;i < localPConsultas.length;i++){
//
//                                    if (localPConsultas[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "pConsultas"));
//                                         elementList.add(localPConsultas[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "pConsultas"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "pConsultas"));
//                                        elementList.add(localPConsultas);
//                                    
//                             }
//
//                        } if (localPAlgoritmoTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pAlgoritmo"));
//                                 
//                                         elementList.add(localPAlgoritmo==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPAlgoritmo));
//                                    }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultarGatewayComparacaoFonetica2 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultarGatewayComparacaoFonetica2 object =
//                new ConsultarGatewayComparacaoFonetica2();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultarGatewayComparacaoFonetica2".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultarGatewayComparacaoFonetica2)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list5 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pIdentificador").equals(reader.getName())){
//                                
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPIdentificador(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
//                                              
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                               object.setPIdentificador(java.lang.Integer.MIN_VALUE);
//                                           
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pLogin").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPLogin(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pSenha").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPSenha(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pAlias").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPAlias(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsultas").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list5.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list5.add(ConsultaWSComparacaoFonetica.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone5 = false;
//                                                        while(!loopDone5){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone5 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsultas").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list5.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list5.add(ConsultaWSComparacaoFonetica.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone5 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setPConsultas((ConsultaWSComparacaoFonetica[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                ConsultaWSComparacaoFonetica.class,
//                                                                list5));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pAlgoritmo").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPAlgoritmo(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class RetornoWSComparacaoFoneticaU extends RetornoWSComparacaoFonetica
//        implements org.apache.axis2.databinding.ADBBean{
//        /* This type was generated from the piece of schema that had
//                name = RetornoWSComparacaoFoneticaU
//                Namespace URI = http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd
//                Namespace Prefix = ns1
//                */
//            
//
//                        /**
//                        * field for DiasValidadeRestantes
//                        */
//
//                        
//                                    protected int localDiasValidadeRestantes ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localDiasValidadeRestantesTracker = false ;
//
//                           public boolean isDiasValidadeRestantesSpecified(){
//                               return localDiasValidadeRestantesTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return int
//                           */
//                           public  int getDiasValidadeRestantes(){
//                               return localDiasValidadeRestantes;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param DiasValidadeRestantes
//                               */
//                               public void setDiasValidadeRestantes(int param){
//                            
//                                       // setting primitive attribute tracker to true
//                                       localDiasValidadeRestantesTracker =
//                                       param != java.lang.Integer.MIN_VALUE;
//                                   
//                                            this.localDiasValidadeRestantes=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
//               return factory.createOMElement(dataSource,parentQName);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":RetornoWSComparacaoFoneticaU",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "RetornoWSComparacaoFoneticaU",
//                           xmlWriter);
//                   }
//
//                if (localCdMensagemTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "cdMensagem", xmlWriter);
//                             
//
//                                          if (localCdMensagem==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localCdMensagem);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localDsMensagemTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "dsMensagem", xmlWriter);
//                             
//
//                                          if (localDsMensagem==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localDsMensagem);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localIdConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "idConsulta", xmlWriter);
//                             
//
//                                          if (localIdConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localIdConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localLsRetornoTracker){
//                                       if (localLsRetorno!=null){
//                                            for (int i = 0;i < localLsRetorno.length;i++){
//                                                if (localLsRetorno[i] != null){
//                                                 localLsRetorno[i].serialize(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetorno", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetorno", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 } if (localDataRealizacaoConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "dataRealizacaoConsulta", xmlWriter);
//                             
//
//                                          if (localDataRealizacaoConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localDataRealizacaoConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localIdLogTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "idLog", xmlWriter);
//                             
//
//                                          if (localIdLog==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localIdLog);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localLsRetornoIdLogTracker){
//                                       if (localLsRetornoIdLog!=null){
//                                            for (int i = 0;i < localLsRetornoIdLog.length;i++){
//                                                if (localLsRetornoIdLog[i] != null){
//                                                 localLsRetornoIdLog[i].serialize(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoIdLog"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetornoIdLog", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetornoIdLog", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 } if (localOrigemConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "origemConsulta", xmlWriter);
//                             
//
//                                          if (localOrigemConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localOrigemConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localLsRetornoComparacaoFoneticaTracker){
//                                       if (localLsRetornoComparacaoFonetica!=null){
//                                            for (int i = 0;i < localLsRetornoComparacaoFonetica.length;i++){
//                                                if (localLsRetornoComparacaoFonetica[i] != null){
//                                                 localLsRetornoComparacaoFonetica[i].serialize(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoComparacaoFonetica"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetornoComparacaoFonetica", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetornoComparacaoFonetica", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 } if (localDiasValidadeRestantesTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "diasValidadeRestantes", xmlWriter);
//                             
//                                               if (localDiasValidadeRestantes==java.lang.Integer.MIN_VALUE) {
//                                           
//                                                         throw new org.apache.axis2.databinding.ADBException("diasValidadeRestantes cannot be null!!");
//                                                      
//                                               } else {
//                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDiasValidadeRestantes));
//                                               }
//                                    
//                                   xmlWriter.writeEndElement();
//                             }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd")){
//                return "ns1";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                
//                    attribList.add(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema-instance","type"));
//                    attribList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","RetornoWSComparacaoFoneticaU"));
//                 if (localCdMensagemTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "cdMensagem"));
//                                 
//                                         elementList.add(localCdMensagem==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCdMensagem));
//                                    } if (localDsMensagemTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "dsMensagem"));
//                                 
//                                         elementList.add(localDsMensagem==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDsMensagem));
//                                    } if (localIdConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "idConsulta"));
//                                 
//                                         elementList.add(localIdConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdConsulta));
//                                    } if (localLsRetornoTracker){
//                             if (localLsRetorno!=null) {
//                                 for (int i = 0;i < localLsRetorno.length;i++){
//
//                                    if (localLsRetorno[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                         elementList.add(localLsRetorno[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                        elementList.add(localLsRetorno);
//                                    
//                             }
//
//                        } if (localDataRealizacaoConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "dataRealizacaoConsulta"));
//                                 
//                                         elementList.add(localDataRealizacaoConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDataRealizacaoConsulta));
//                                    } if (localIdLogTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "idLog"));
//                                 
//                                         elementList.add(localIdLog==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdLog));
//                                    } if (localLsRetornoIdLogTracker){
//                             if (localLsRetornoIdLog!=null) {
//                                 for (int i = 0;i < localLsRetornoIdLog.length;i++){
//
//                                    if (localLsRetornoIdLog[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoIdLog"));
//                                         elementList.add(localLsRetornoIdLog[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoIdLog"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoIdLog"));
//                                        elementList.add(localLsRetornoIdLog);
//                                    
//                             }
//
//                        } if (localOrigemConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "origemConsulta"));
//                                 
//                                         elementList.add(localOrigemConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrigemConsulta));
//                                    } if (localLsRetornoComparacaoFoneticaTracker){
//                             if (localLsRetornoComparacaoFonetica!=null) {
//                                 for (int i = 0;i < localLsRetornoComparacaoFonetica.length;i++){
//
//                                    if (localLsRetornoComparacaoFonetica[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoComparacaoFonetica"));
//                                         elementList.add(localLsRetornoComparacaoFonetica[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoComparacaoFonetica"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoComparacaoFonetica"));
//                                        elementList.add(localLsRetornoComparacaoFonetica);
//                                    
//                             }
//
//                        } if (localDiasValidadeRestantesTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "diasValidadeRestantes"));
//                                 
//                                elementList.add(
//                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDiasValidadeRestantes));
//                            }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static RetornoWSComparacaoFoneticaU parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            RetornoWSComparacaoFoneticaU object =
//                new RetornoWSComparacaoFoneticaU();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"RetornoWSComparacaoFoneticaU".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (RetornoWSComparacaoFoneticaU)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list4 = new java.util.ArrayList();
//                    
//                        java.util.ArrayList list7 = new java.util.ArrayList();
//                    
//                        java.util.ArrayList list9 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","cdMensagem").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setCdMensagem(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","dsMensagem").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setDsMensagem(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","idConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setIdConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list4.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list4.add(CampoWS.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone4 = false;
//                                                        while(!loopDone4){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone4 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list4.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list4.add(CampoWS.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone4 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setLsRetorno((CampoWS[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                CampoWS.class,
//                                                                list4));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","dataRealizacaoConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setDataRealizacaoConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","idLog").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setIdLog(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoIdLog").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list7.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list7.add(CampoWSIdLog.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone7 = false;
//                                                        while(!loopDone7){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone7 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoIdLog").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list7.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list7.add(CampoWSIdLog.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone7 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setLsRetornoIdLog((CampoWSIdLog[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                CampoWSIdLog.class,
//                                                                list7));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","origemConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setOrigemConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoComparacaoFonetica").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list9.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list9.add(CampoWS.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone9 = false;
//                                                        while(!loopDone9){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone9 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoComparacaoFonetica").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list9.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list9.add(CampoWS.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone9 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setLsRetornoComparacaoFonetica((CampoWS[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                CampoWS.class,
//                                                                list9));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","diasValidadeRestantes").equals(reader.getName())){
//                                
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setDiasValidadeRestantes(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
//                                              
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                               object.setDiasValidadeRestantes(java.lang.Integer.MIN_VALUE);
//                                           
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ExtensionMapper{
//
//          public static java.lang.Object getTypeObject(java.lang.String namespaceURI,
//                                                       java.lang.String typeName,
//                                                       javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//
//              
//                  if (
//                  "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd".equals(namespaceURI) &&
//                  "RetornoWSComparacaoFonetica".equals(typeName)){
//                   
//                            return  RetornoWSComparacaoFonetica.Factory.parse(reader);
//                        
//
//                  }
//
//              
//                  if (
//                  "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd".equals(namespaceURI) &&
//                  "RetornoWSHistoricoCF".equals(typeName)){
//                   
//                            return  RetornoWSHistoricoCF.Factory.parse(reader);
//                        
//
//                  }
//
//              
//                  if (
//                  "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd".equals(namespaceURI) &&
//                  "ConsultaWS".equals(typeName)){
//                   
//                            return  ConsultaWS.Factory.parse(reader);
//                        
//
//                  }
//
//              
//                  if (
//                  "http://panel.gateway.neurotech.com.br/xsd".equals(namespaceURI) &&
//                  "GatewayPanelOperation".equals(typeName)){
//                   
//                            return  GatewayPanelOperation.Factory.parse(reader);
//                        
//
//                  }
//
//              
//                  if (
//                  "http://panel.gateway.neurotech.com.br/xsd".equals(namespaceURI) &&
//                  "GatewayPanelHTML".equals(typeName)){
//                   
//                            return  GatewayPanelHTML.Factory.parse(reader);
//                        
//
//                  }
//
//              
//                  if (
//                  "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd".equals(namespaceURI) &&
//                  "CampoWSIdLog".equals(typeName)){
//                   
//                            return  CampoWSIdLog.Factory.parse(reader);
//                        
//
//                  }
//
//              
//                  if (
//                  "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd".equals(namespaceURI) &&
//                  "CampoWS".equals(typeName)){
//                   
//                            return  CampoWS.Factory.parse(reader);
//                        
//
//                  }
//
//              
//                  if (
//                  "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd".equals(namespaceURI) &&
//                  "RetornoWS".equals(typeName)){
//                   
//                            return  RetornoWS.Factory.parse(reader);
//                        
//
//                  }
//
//              
//                  if (
//                  "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd".equals(namespaceURI) &&
//                  "RetornoWSComparacaoFoneticaU".equals(typeName)){
//                   
//                            return  RetornoWSComparacaoFoneticaU.Factory.parse(reader);
//                        
//
//                  }
//
//              
//                  if (
//                  "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd".equals(namespaceURI) &&
//                  "RetornoWSHistorico".equals(typeName)){
//                   
//                            return  RetornoWSHistorico.Factory.parse(reader);
//                        
//
//                  }
//
//              
//                  if (
//                  "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd".equals(namespaceURI) &&
//                  "RetornoWSIdLog".equals(typeName)){
//                   
//                            return  RetornoWSIdLog.Factory.parse(reader);
//                        
//
//                  }
//
//              
//                  if (
//                  "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd".equals(namespaceURI) &&
//                  "ConsultaWSComparacaoFonetica".equals(typeName)){
//                   
//                            return  ConsultaWSComparacaoFonetica.Factory.parse(reader);
//                        
//
//                  }
//
//              
//                  if (
//                  "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd".equals(namespaceURI) &&
//                  "CacheWS".equals(typeName)){
//                   
//                            return  CacheWS.Factory.parse(reader);
//                        
//
//                  }
//
//              
//             throw new org.apache.axis2.databinding.ADBException("Unsupported type " + namespaceURI + " " + typeName);
//          }
//
//        }
//    
//        public static class RetornoWSIdLog extends RetornoWS
//        implements org.apache.axis2.databinding.ADBBean{
//        /* This type was generated from the piece of schema that had
//                name = RetornoWSIdLog
//                Namespace URI = http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd
//                Namespace Prefix = ns1
//                */
//            
//
//                        /**
//                        * field for DataRealizacaoConsulta
//                        */
//
//                        
//                                    protected java.lang.String localDataRealizacaoConsulta ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localDataRealizacaoConsultaTracker = false ;
//
//                           public boolean isDataRealizacaoConsultaSpecified(){
//                               return localDataRealizacaoConsultaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getDataRealizacaoConsulta(){
//                               return localDataRealizacaoConsulta;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param DataRealizacaoConsulta
//                               */
//                               public void setDataRealizacaoConsulta(java.lang.String param){
//                            localDataRealizacaoConsultaTracker = true;
//                                   
//                                            this.localDataRealizacaoConsulta=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for IdLog
//                        */
//
//                        
//                                    protected java.lang.String localIdLog ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localIdLogTracker = false ;
//
//                           public boolean isIdLogSpecified(){
//                               return localIdLogTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getIdLog(){
//                               return localIdLog;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param IdLog
//                               */
//                               public void setIdLog(java.lang.String param){
//                            localIdLogTracker = true;
//                                   
//                                            this.localIdLog=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for LsRetornoIdLog
//                        * This was an Array!
//                        */
//
//                        
//                                    protected CampoWSIdLog[] localLsRetornoIdLog ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localLsRetornoIdLogTracker = false ;
//
//                           public boolean isLsRetornoIdLogSpecified(){
//                               return localLsRetornoIdLogTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return CampoWSIdLog[]
//                           */
//                           public  CampoWSIdLog[] getLsRetornoIdLog(){
//                               return localLsRetornoIdLog;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for LsRetornoIdLog
//                               */
//                              protected void validateLsRetornoIdLog(CampoWSIdLog[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param LsRetornoIdLog
//                              */
//                              public void setLsRetornoIdLog(CampoWSIdLog[] param){
//                              
//                                   validateLsRetornoIdLog(param);
//
//                               localLsRetornoIdLogTracker = true;
//                                      
//                                      this.localLsRetornoIdLog=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param CampoWSIdLog
//                             */
//                             public void addLsRetornoIdLog(CampoWSIdLog param){
//                                   if (localLsRetornoIdLog == null){
//                                   localLsRetornoIdLog = new CampoWSIdLog[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                localLsRetornoIdLogTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localLsRetornoIdLog);
//                               list.add(param);
//                               this.localLsRetornoIdLog =
//                             (CampoWSIdLog[])list.toArray(
//                            new CampoWSIdLog[list.size()]);
//
//                             }
//                             
//
//                        /**
//                        * field for OrigemConsulta
//                        */
//
//                        
//                                    protected java.lang.String localOrigemConsulta ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localOrigemConsultaTracker = false ;
//
//                           public boolean isOrigemConsultaSpecified(){
//                               return localOrigemConsultaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getOrigemConsulta(){
//                               return localOrigemConsulta;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param OrigemConsulta
//                               */
//                               public void setOrigemConsulta(java.lang.String param){
//                            localOrigemConsultaTracker = true;
//                                   
//                                            this.localOrigemConsulta=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
//               return factory.createOMElement(dataSource,parentQName);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":RetornoWSIdLog",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "RetornoWSIdLog",
//                           xmlWriter);
//                   }
//
//                if (localCdMensagemTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "cdMensagem", xmlWriter);
//                             
//
//                                          if (localCdMensagem==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localCdMensagem);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localDsMensagemTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "dsMensagem", xmlWriter);
//                             
//
//                                          if (localDsMensagem==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localDsMensagem);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localIdConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "idConsulta", xmlWriter);
//                             
//
//                                          if (localIdConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localIdConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localLsRetornoTracker){
//                                       if (localLsRetorno!=null){
//                                            for (int i = 0;i < localLsRetorno.length;i++){
//                                                if (localLsRetorno[i] != null){
//                                                 localLsRetorno[i].serialize(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetorno", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetorno", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 } if (localDataRealizacaoConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "dataRealizacaoConsulta", xmlWriter);
//                             
//
//                                          if (localDataRealizacaoConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localDataRealizacaoConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localIdLogTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "idLog", xmlWriter);
//                             
//
//                                          if (localIdLog==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localIdLog);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localLsRetornoIdLogTracker){
//                                       if (localLsRetornoIdLog!=null){
//                                            for (int i = 0;i < localLsRetornoIdLog.length;i++){
//                                                if (localLsRetornoIdLog[i] != null){
//                                                 localLsRetornoIdLog[i].serialize(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoIdLog"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetornoIdLog", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetornoIdLog", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 } if (localOrigemConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "origemConsulta", xmlWriter);
//                             
//
//                                          if (localOrigemConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localOrigemConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd")){
//                return "ns1";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                
//                    attribList.add(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema-instance","type"));
//                    attribList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","RetornoWSIdLog"));
//                 if (localCdMensagemTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "cdMensagem"));
//                                 
//                                         elementList.add(localCdMensagem==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCdMensagem));
//                                    } if (localDsMensagemTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "dsMensagem"));
//                                 
//                                         elementList.add(localDsMensagem==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDsMensagem));
//                                    } if (localIdConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "idConsulta"));
//                                 
//                                         elementList.add(localIdConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdConsulta));
//                                    } if (localLsRetornoTracker){
//                             if (localLsRetorno!=null) {
//                                 for (int i = 0;i < localLsRetorno.length;i++){
//
//                                    if (localLsRetorno[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                         elementList.add(localLsRetorno[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                        elementList.add(localLsRetorno);
//                                    
//                             }
//
//                        } if (localDataRealizacaoConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "dataRealizacaoConsulta"));
//                                 
//                                         elementList.add(localDataRealizacaoConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDataRealizacaoConsulta));
//                                    } if (localIdLogTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "idLog"));
//                                 
//                                         elementList.add(localIdLog==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdLog));
//                                    } if (localLsRetornoIdLogTracker){
//                             if (localLsRetornoIdLog!=null) {
//                                 for (int i = 0;i < localLsRetornoIdLog.length;i++){
//
//                                    if (localLsRetornoIdLog[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoIdLog"));
//                                         elementList.add(localLsRetornoIdLog[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoIdLog"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoIdLog"));
//                                        elementList.add(localLsRetornoIdLog);
//                                    
//                             }
//
//                        } if (localOrigemConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "origemConsulta"));
//                                 
//                                         elementList.add(localOrigemConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrigemConsulta));
//                                    }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static RetornoWSIdLog parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            RetornoWSIdLog object =
//                new RetornoWSIdLog();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"RetornoWSIdLog".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (RetornoWSIdLog)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list4 = new java.util.ArrayList();
//                    
//                        java.util.ArrayList list7 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","cdMensagem").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setCdMensagem(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","dsMensagem").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setDsMensagem(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","idConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setIdConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list4.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list4.add(CampoWS.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone4 = false;
//                                                        while(!loopDone4){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone4 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list4.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list4.add(CampoWS.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone4 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setLsRetorno((CampoWS[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                CampoWS.class,
//                                                                list4));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","dataRealizacaoConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setDataRealizacaoConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","idLog").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setIdLog(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoIdLog").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list7.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list7.add(CampoWSIdLog.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone7 = false;
//                                                        while(!loopDone7){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone7 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoIdLog").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list7.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list7.add(CampoWSIdLog.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone7 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setLsRetornoIdLog((CampoWSIdLog[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                CampoWSIdLog.class,
//                                                                list7));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","origemConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setOrigemConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultaWSComparacaoFonetica extends ConsultaWS
//        implements org.apache.axis2.databinding.ADBBean{
//        /* This type was generated from the piece of schema that had
//                name = ConsultaWSComparacaoFonetica
//                Namespace URI = http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd
//                Namespace Prefix = ns1
//                */
//            
//
//                        /**
//                        * field for LsCamposComparacaoFonetica
//                        * This was an Array!
//                        */
//
//                        
//                                    protected CampoWS[] localLsCamposComparacaoFonetica ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localLsCamposComparacaoFoneticaTracker = false ;
//
//                           public boolean isLsCamposComparacaoFoneticaSpecified(){
//                               return localLsCamposComparacaoFoneticaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return CampoWS[]
//                           */
//                           public  CampoWS[] getLsCamposComparacaoFonetica(){
//                               return localLsCamposComparacaoFonetica;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for LsCamposComparacaoFonetica
//                               */
//                              protected void validateLsCamposComparacaoFonetica(CampoWS[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param LsCamposComparacaoFonetica
//                              */
//                              public void setLsCamposComparacaoFonetica(CampoWS[] param){
//                              
//                                   validateLsCamposComparacaoFonetica(param);
//
//                               localLsCamposComparacaoFoneticaTracker = true;
//                                      
//                                      this.localLsCamposComparacaoFonetica=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param CampoWS
//                             */
//                             public void addLsCamposComparacaoFonetica(CampoWS param){
//                                   if (localLsCamposComparacaoFonetica == null){
//                                   localLsCamposComparacaoFonetica = new CampoWS[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                localLsCamposComparacaoFoneticaTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localLsCamposComparacaoFonetica);
//                               list.add(param);
//                               this.localLsCamposComparacaoFonetica =
//                             (CampoWS[])list.toArray(
//                            new CampoWS[list.size()]);
//
//                             }
//                             
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
//               return factory.createOMElement(dataSource,parentQName);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":ConsultaWSComparacaoFonetica",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "ConsultaWSComparacaoFonetica",
//                           xmlWriter);
//                   }
//
//                if (localIdConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "idConsulta", xmlWriter);
//                             
//
//                                          if (localIdConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localIdConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localLsParametrosTracker){
//                                       if (localLsParametros!=null){
//                                            for (int i = 0;i < localLsParametros.length;i++){
//                                                if (localLsParametros[i] != null){
//                                                 localLsParametros[i].serialize(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsParametros"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsParametros", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsParametros", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 } if (localLsCamposComparacaoFoneticaTracker){
//                                       if (localLsCamposComparacaoFonetica!=null){
//                                            for (int i = 0;i < localLsCamposComparacaoFonetica.length;i++){
//                                                if (localLsCamposComparacaoFonetica[i] != null){
//                                                 localLsCamposComparacaoFonetica[i].serialize(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsCamposComparacaoFonetica"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsCamposComparacaoFonetica", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsCamposComparacaoFonetica", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd")){
//                return "ns1";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                
//                    attribList.add(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema-instance","type"));
//                    attribList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","ConsultaWSComparacaoFonetica"));
//                 if (localIdConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "idConsulta"));
//                                 
//                                         elementList.add(localIdConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdConsulta));
//                                    } if (localLsParametrosTracker){
//                             if (localLsParametros!=null) {
//                                 for (int i = 0;i < localLsParametros.length;i++){
//
//                                    if (localLsParametros[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsParametros"));
//                                         elementList.add(localLsParametros[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsParametros"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsParametros"));
//                                        elementList.add(localLsParametros);
//                                    
//                             }
//
//                        } if (localLsCamposComparacaoFoneticaTracker){
//                             if (localLsCamposComparacaoFonetica!=null) {
//                                 for (int i = 0;i < localLsCamposComparacaoFonetica.length;i++){
//
//                                    if (localLsCamposComparacaoFonetica[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsCamposComparacaoFonetica"));
//                                         elementList.add(localLsCamposComparacaoFonetica[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsCamposComparacaoFonetica"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsCamposComparacaoFonetica"));
//                                        elementList.add(localLsCamposComparacaoFonetica);
//                                    
//                             }
//
//                        }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultaWSComparacaoFonetica parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultaWSComparacaoFonetica object =
//                new ConsultaWSComparacaoFonetica();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"ConsultaWSComparacaoFonetica".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultaWSComparacaoFonetica)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list2 = new java.util.ArrayList();
//                    
//                        java.util.ArrayList list3 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","idConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setIdConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsParametros").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list2.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list2.add(CampoWS.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone2 = false;
//                                                        while(!loopDone2){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone2 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsParametros").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list2.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list2.add(CampoWS.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone2 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setLsParametros((CampoWS[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                CampoWS.class,
//                                                                list2));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsCamposComparacaoFonetica").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list3.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list3.add(CampoWS.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone3 = false;
//                                                        while(!loopDone3){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone3 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsCamposComparacaoFonetica").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list3.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list3.add(CampoWS.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone3 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setLsCamposComparacaoFonetica((CampoWS[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                CampoWS.class,
//                                                                list3));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultarResponse
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultarResponse",
//                "ns3");
//
//            
//
//                        /**
//                        * field for _return
//                        * This was an Array!
//                        */
//
//                        
//                                    protected RetornoWS[] local_return ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean local_returnTracker = false ;
//
//                           public boolean is_returnSpecified(){
//                               return local_returnTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return RetornoWS[]
//                           */
//                           public  RetornoWS[] get_return(){
//                               return local_return;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for _return
//                               */
//                              protected void validate_return(RetornoWS[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param _return
//                              */
//                              public void set_return(RetornoWS[] param){
//                              
//                                   validate_return(param);
//
//                               local_returnTracker = true;
//                                      
//                                      this.local_return=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param RetornoWS
//                             */
//                             public void add_return(RetornoWS param){
//                                   if (local_return == null){
//                                   local_return = new RetornoWS[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                local_returnTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(local_return);
//                               list.add(param);
//                               this.local_return =
//                             (RetornoWS[])list.toArray(
//                            new RetornoWS[list.size()]);
//
//                             }
//                             
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultarResponse",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultarResponse",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (local_returnTracker){
//                                       if (local_return!=null){
//                                            for (int i = 0;i < local_return.length;i++){
//                                                if (local_return[i] != null){
//                                                 local_return[i].serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "return", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "return", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (local_returnTracker){
//                             if (local_return!=null) {
//                                 for (int i = 0;i < local_return.length;i++){
//
//                                    if (local_return[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                         elementList.add(local_return[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                        elementList.add(local_return);
//                                    
//                             }
//
//                        }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultarResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultarResponse object =
//                new ConsultarResponse();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultarResponse".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultarResponse)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list1 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list1.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list1.add(RetornoWS.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone1 = false;
//                                                        while(!loopDone1){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone1 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list1.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list1.add(RetornoWS.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone1 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.set_return((RetornoWS[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                RetornoWS.class,
//                                                                list1));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class WFtoHTMLResponse
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "WFtoHTMLResponse",
//                "ns3");
//
//            
//
//                        /**
//                        * field for _return
//                        */
//
//                        
//                                    protected GatewayPanelHTML local_return ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean local_returnTracker = false ;
//
//                           public boolean is_returnSpecified(){
//                               return local_returnTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return GatewayPanelHTML
//                           */
//                           public  GatewayPanelHTML get_return(){
//                               return local_return;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param _return
//                               */
//                               public void set_return(GatewayPanelHTML param){
//                            local_returnTracker = true;
//                                   
//                                            this.local_return=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":WFtoHTMLResponse",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "WFtoHTMLResponse",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (local_returnTracker){
//                                    if (local_return==null){
//
//                                        writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "return", xmlWriter);
//
//                                       // write the nil attribute
//                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                      xmlWriter.writeEndElement();
//                                    }else{
//                                     local_return.serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return"),
//                                        xmlWriter);
//                                    }
//                                }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (local_returnTracker){
//                            elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "return"));
//                            
//                            
//                                    elementList.add(local_return==null?null:
//                                    local_return);
//                                }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static WFtoHTMLResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            WFtoHTMLResponse object =
//                new WFtoHTMLResponse();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"WFtoHTMLResponse".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (WFtoHTMLResponse)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return").equals(reader.getName())){
//                                
//                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                          object.set_return(null);
//                                          reader.next();
//                                            
//                                            reader.next();
//                                          
//                                      }else{
//                                    
//                                                object.set_return(GatewayPanelHTML.Factory.parse(reader));
//                                              
//                                        reader.next();
//                                    }
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultarHistoricoComparacaoFonetica2Response
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultarHistoricoComparacaoFonetica2Response",
//                "ns3");
//
//            
//
//                        /**
//                        * field for _return
//                        */
//
//                        
//                                    protected RetornoWSHistoricoCF local_return ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean local_returnTracker = false ;
//
//                           public boolean is_returnSpecified(){
//                               return local_returnTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return RetornoWSHistoricoCF
//                           */
//                           public  RetornoWSHistoricoCF get_return(){
//                               return local_return;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param _return
//                               */
//                               public void set_return(RetornoWSHistoricoCF param){
//                            local_returnTracker = true;
//                                   
//                                            this.local_return=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultarHistoricoComparacaoFonetica2Response",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultarHistoricoComparacaoFonetica2Response",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (local_returnTracker){
//                                    if (local_return==null){
//
//                                        writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "return", xmlWriter);
//
//                                       // write the nil attribute
//                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                      xmlWriter.writeEndElement();
//                                    }else{
//                                     local_return.serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return"),
//                                        xmlWriter);
//                                    }
//                                }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (local_returnTracker){
//                            elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "return"));
//                            
//                            
//                                    elementList.add(local_return==null?null:
//                                    local_return);
//                                }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultarHistoricoComparacaoFonetica2Response parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultarHistoricoComparacaoFonetica2Response object =
//                new ConsultarHistoricoComparacaoFonetica2Response();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultarHistoricoComparacaoFonetica2Response".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultarHistoricoComparacaoFonetica2Response)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return").equals(reader.getName())){
//                                
//                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                          object.set_return(null);
//                                          reader.next();
//                                            
//                                            reader.next();
//                                          
//                                      }else{
//                                    
//                                                object.set_return(RetornoWSHistoricoCF.Factory.parse(reader));
//                                              
//                                        reader.next();
//                                    }
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class CacheWS
//        implements org.apache.axis2.databinding.ADBBean{
//        /* This type was generated from the piece of schema that had
//                name = CacheWS
//                Namespace URI = http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd
//                Namespace Prefix = ns1
//                */
//            
//
//                        /**
//                        * field for Atualizado
//                        */
//
//                        
//                                    protected boolean localAtualizado ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localAtualizadoTracker = false ;
//
//                           public boolean isAtualizadoSpecified(){
//                               return localAtualizadoTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return boolean
//                           */
//                           public  boolean getAtualizado(){
//                               return localAtualizado;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param Atualizado
//                               */
//                               public void setAtualizado(boolean param){
//                            
//                                       // setting primitive attribute tracker to true
//                                       localAtualizadoTracker =
//                                       true;
//                                   
//                                            this.localAtualizado=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
//               return factory.createOMElement(dataSource,parentQName);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":CacheWS",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "CacheWS",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (localAtualizadoTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "atualizado", xmlWriter);
//                             
//                                               if (false) {
//                                           
//                                                         throw new org.apache.axis2.databinding.ADBException("atualizado cannot be null!!");
//                                                      
//                                               } else {
//                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAtualizado));
//                                               }
//                                    
//                                   xmlWriter.writeEndElement();
//                             }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd")){
//                return "ns1";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (localAtualizadoTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "atualizado"));
//                                 
//                                elementList.add(
//                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAtualizado));
//                            }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static CacheWS parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            CacheWS object =
//                new CacheWS();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"CacheWS".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (CacheWS)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","atualizado").equals(reader.getName())){
//                                
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setAtualizado(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
//                                              
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class RetornoWSHistoricoCF extends RetornoWSHistorico
//        implements org.apache.axis2.databinding.ADBBean{
//        /* This type was generated from the piece of schema that had
//                name = RetornoWSHistoricoCF
//                Namespace URI = http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd
//                Namespace Prefix = ns1
//                */
//            
//
//                        /**
//                        * field for LsRetornoComparacaoFonetica
//                        * This was an Array!
//                        */
//
//                        
//                                    protected CampoWS[] localLsRetornoComparacaoFonetica ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localLsRetornoComparacaoFoneticaTracker = false ;
//
//                           public boolean isLsRetornoComparacaoFoneticaSpecified(){
//                               return localLsRetornoComparacaoFoneticaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return CampoWS[]
//                           */
//                           public  CampoWS[] getLsRetornoComparacaoFonetica(){
//                               return localLsRetornoComparacaoFonetica;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for LsRetornoComparacaoFonetica
//                               */
//                              protected void validateLsRetornoComparacaoFonetica(CampoWS[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param LsRetornoComparacaoFonetica
//                              */
//                              public void setLsRetornoComparacaoFonetica(CampoWS[] param){
//                              
//                                   validateLsRetornoComparacaoFonetica(param);
//
//                               localLsRetornoComparacaoFoneticaTracker = true;
//                                      
//                                      this.localLsRetornoComparacaoFonetica=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param CampoWS
//                             */
//                             public void addLsRetornoComparacaoFonetica(CampoWS param){
//                                   if (localLsRetornoComparacaoFonetica == null){
//                                   localLsRetornoComparacaoFonetica = new CampoWS[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                localLsRetornoComparacaoFoneticaTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localLsRetornoComparacaoFonetica);
//                               list.add(param);
//                               this.localLsRetornoComparacaoFonetica =
//                             (CampoWS[])list.toArray(
//                            new CampoWS[list.size()]);
//
//                             }
//                             
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
//               return factory.createOMElement(dataSource,parentQName);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":RetornoWSHistoricoCF",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "RetornoWSHistoricoCF",
//                           xmlWriter);
//                   }
//
//                if (localCdMensagemTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "cdMensagem", xmlWriter);
//                             
//
//                                          if (localCdMensagem==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localCdMensagem);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localDsMensagemTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "dsMensagem", xmlWriter);
//                             
//
//                                          if (localDsMensagem==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localDsMensagem);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localIdConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "idConsulta", xmlWriter);
//                             
//
//                                          if (localIdConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localIdConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localLsRetornoTracker){
//                                       if (localLsRetorno!=null){
//                                            for (int i = 0;i < localLsRetorno.length;i++){
//                                                if (localLsRetorno[i] != null){
//                                                 localLsRetorno[i].serialize(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetorno", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetorno", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 } if (localDataRealizacaoConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "dataRealizacaoConsulta", xmlWriter);
//                             
//
//                                          if (localDataRealizacaoConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localDataRealizacaoConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localIdLogTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "idLog", xmlWriter);
//                             
//
//                                          if (localIdLog==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localIdLog);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localLsRetornoIdLogTracker){
//                                       if (localLsRetornoIdLog!=null){
//                                            for (int i = 0;i < localLsRetornoIdLog.length;i++){
//                                                if (localLsRetornoIdLog[i] != null){
//                                                 localLsRetornoIdLog[i].serialize(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoIdLog"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetornoIdLog", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetornoIdLog", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 } if (localOrigemConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "origemConsulta", xmlWriter);
//                             
//
//                                          if (localOrigemConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localOrigemConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localDiasAntigHistoricoTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "diasAntigHistorico", xmlWriter);
//                             
//
//                                          if (localDiasAntigHistorico==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localDiasAntigHistorico);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localLsRetornoComparacaoFoneticaTracker){
//                                       if (localLsRetornoComparacaoFonetica!=null){
//                                            for (int i = 0;i < localLsRetornoComparacaoFonetica.length;i++){
//                                                if (localLsRetornoComparacaoFonetica[i] != null){
//                                                 localLsRetornoComparacaoFonetica[i].serialize(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoComparacaoFonetica"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetornoComparacaoFonetica", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetornoComparacaoFonetica", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd")){
//                return "ns1";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                
//                    attribList.add(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema-instance","type"));
//                    attribList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","RetornoWSHistoricoCF"));
//                 if (localCdMensagemTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "cdMensagem"));
//                                 
//                                         elementList.add(localCdMensagem==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCdMensagem));
//                                    } if (localDsMensagemTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "dsMensagem"));
//                                 
//                                         elementList.add(localDsMensagem==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDsMensagem));
//                                    } if (localIdConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "idConsulta"));
//                                 
//                                         elementList.add(localIdConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdConsulta));
//                                    } if (localLsRetornoTracker){
//                             if (localLsRetorno!=null) {
//                                 for (int i = 0;i < localLsRetorno.length;i++){
//
//                                    if (localLsRetorno[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                         elementList.add(localLsRetorno[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                        elementList.add(localLsRetorno);
//                                    
//                             }
//
//                        } if (localDataRealizacaoConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "dataRealizacaoConsulta"));
//                                 
//                                         elementList.add(localDataRealizacaoConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDataRealizacaoConsulta));
//                                    } if (localIdLogTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "idLog"));
//                                 
//                                         elementList.add(localIdLog==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdLog));
//                                    } if (localLsRetornoIdLogTracker){
//                             if (localLsRetornoIdLog!=null) {
//                                 for (int i = 0;i < localLsRetornoIdLog.length;i++){
//
//                                    if (localLsRetornoIdLog[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoIdLog"));
//                                         elementList.add(localLsRetornoIdLog[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoIdLog"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoIdLog"));
//                                        elementList.add(localLsRetornoIdLog);
//                                    
//                             }
//
//                        } if (localOrigemConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "origemConsulta"));
//                                 
//                                         elementList.add(localOrigemConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrigemConsulta));
//                                    } if (localDiasAntigHistoricoTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "diasAntigHistorico"));
//                                 
//                                         elementList.add(localDiasAntigHistorico==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDiasAntigHistorico));
//                                    } if (localLsRetornoComparacaoFoneticaTracker){
//                             if (localLsRetornoComparacaoFonetica!=null) {
//                                 for (int i = 0;i < localLsRetornoComparacaoFonetica.length;i++){
//
//                                    if (localLsRetornoComparacaoFonetica[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoComparacaoFonetica"));
//                                         elementList.add(localLsRetornoComparacaoFonetica[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoComparacaoFonetica"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoComparacaoFonetica"));
//                                        elementList.add(localLsRetornoComparacaoFonetica);
//                                    
//                             }
//
//                        }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static RetornoWSHistoricoCF parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            RetornoWSHistoricoCF object =
//                new RetornoWSHistoricoCF();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"RetornoWSHistoricoCF".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (RetornoWSHistoricoCF)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list4 = new java.util.ArrayList();
//                    
//                        java.util.ArrayList list7 = new java.util.ArrayList();
//                    
//                        java.util.ArrayList list10 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","cdMensagem").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setCdMensagem(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","dsMensagem").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setDsMensagem(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","idConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setIdConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list4.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list4.add(CampoWS.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone4 = false;
//                                                        while(!loopDone4){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone4 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list4.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list4.add(CampoWS.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone4 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setLsRetorno((CampoWS[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                CampoWS.class,
//                                                                list4));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","dataRealizacaoConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setDataRealizacaoConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","idLog").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setIdLog(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoIdLog").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list7.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list7.add(CampoWSIdLog.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone7 = false;
//                                                        while(!loopDone7){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone7 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoIdLog").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list7.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list7.add(CampoWSIdLog.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone7 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setLsRetornoIdLog((CampoWSIdLog[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                CampoWSIdLog.class,
//                                                                list7));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","origemConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setOrigemConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","diasAntigHistorico").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setDiasAntigHistorico(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoComparacaoFonetica").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list10.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list10.add(CampoWS.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone10 = false;
//                                                        while(!loopDone10){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone10 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoComparacaoFonetica").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list10.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list10.add(CampoWS.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone10 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setLsRetornoComparacaoFonetica((CampoWS[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                CampoWS.class,
//                                                                list10));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class RetornoWSComparacaoFonetica extends RetornoWSIdLog
//        implements org.apache.axis2.databinding.ADBBean{
//        /* This type was generated from the piece of schema that had
//                name = RetornoWSComparacaoFonetica
//                Namespace URI = http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd
//                Namespace Prefix = ns1
//                */
//            
//
//                        /**
//                        * field for LsRetornoComparacaoFonetica
//                        * This was an Array!
//                        */
//
//                        
//                                    protected CampoWS[] localLsRetornoComparacaoFonetica ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localLsRetornoComparacaoFoneticaTracker = false ;
//
//                           public boolean isLsRetornoComparacaoFoneticaSpecified(){
//                               return localLsRetornoComparacaoFoneticaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return CampoWS[]
//                           */
//                           public  CampoWS[] getLsRetornoComparacaoFonetica(){
//                               return localLsRetornoComparacaoFonetica;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for LsRetornoComparacaoFonetica
//                               */
//                              protected void validateLsRetornoComparacaoFonetica(CampoWS[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param LsRetornoComparacaoFonetica
//                              */
//                              public void setLsRetornoComparacaoFonetica(CampoWS[] param){
//                              
//                                   validateLsRetornoComparacaoFonetica(param);
//
//                               localLsRetornoComparacaoFoneticaTracker = true;
//                                      
//                                      this.localLsRetornoComparacaoFonetica=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param CampoWS
//                             */
//                             public void addLsRetornoComparacaoFonetica(CampoWS param){
//                                   if (localLsRetornoComparacaoFonetica == null){
//                                   localLsRetornoComparacaoFonetica = new CampoWS[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                localLsRetornoComparacaoFoneticaTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localLsRetornoComparacaoFonetica);
//                               list.add(param);
//                               this.localLsRetornoComparacaoFonetica =
//                             (CampoWS[])list.toArray(
//                            new CampoWS[list.size()]);
//
//                             }
//                             
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
//               return factory.createOMElement(dataSource,parentQName);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":RetornoWSComparacaoFonetica",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "RetornoWSComparacaoFonetica",
//                           xmlWriter);
//                   }
//
//                if (localCdMensagemTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "cdMensagem", xmlWriter);
//                             
//
//                                          if (localCdMensagem==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localCdMensagem);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localDsMensagemTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "dsMensagem", xmlWriter);
//                             
//
//                                          if (localDsMensagem==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localDsMensagem);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localIdConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "idConsulta", xmlWriter);
//                             
//
//                                          if (localIdConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localIdConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localLsRetornoTracker){
//                                       if (localLsRetorno!=null){
//                                            for (int i = 0;i < localLsRetorno.length;i++){
//                                                if (localLsRetorno[i] != null){
//                                                 localLsRetorno[i].serialize(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetorno", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetorno", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 } if (localDataRealizacaoConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "dataRealizacaoConsulta", xmlWriter);
//                             
//
//                                          if (localDataRealizacaoConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localDataRealizacaoConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localIdLogTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "idLog", xmlWriter);
//                             
//
//                                          if (localIdLog==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localIdLog);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localLsRetornoIdLogTracker){
//                                       if (localLsRetornoIdLog!=null){
//                                            for (int i = 0;i < localLsRetornoIdLog.length;i++){
//                                                if (localLsRetornoIdLog[i] != null){
//                                                 localLsRetornoIdLog[i].serialize(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoIdLog"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetornoIdLog", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetornoIdLog", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 } if (localOrigemConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "origemConsulta", xmlWriter);
//                             
//
//                                          if (localOrigemConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localOrigemConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localLsRetornoComparacaoFoneticaTracker){
//                                       if (localLsRetornoComparacaoFonetica!=null){
//                                            for (int i = 0;i < localLsRetornoComparacaoFonetica.length;i++){
//                                                if (localLsRetornoComparacaoFonetica[i] != null){
//                                                 localLsRetornoComparacaoFonetica[i].serialize(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoComparacaoFonetica"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetornoComparacaoFonetica", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetornoComparacaoFonetica", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd")){
//                return "ns1";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                
//                    attribList.add(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema-instance","type"));
//                    attribList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","RetornoWSComparacaoFonetica"));
//                 if (localCdMensagemTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "cdMensagem"));
//                                 
//                                         elementList.add(localCdMensagem==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCdMensagem));
//                                    } if (localDsMensagemTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "dsMensagem"));
//                                 
//                                         elementList.add(localDsMensagem==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDsMensagem));
//                                    } if (localIdConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "idConsulta"));
//                                 
//                                         elementList.add(localIdConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdConsulta));
//                                    } if (localLsRetornoTracker){
//                             if (localLsRetorno!=null) {
//                                 for (int i = 0;i < localLsRetorno.length;i++){
//
//                                    if (localLsRetorno[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                         elementList.add(localLsRetorno[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                        elementList.add(localLsRetorno);
//                                    
//                             }
//
//                        } if (localDataRealizacaoConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "dataRealizacaoConsulta"));
//                                 
//                                         elementList.add(localDataRealizacaoConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDataRealizacaoConsulta));
//                                    } if (localIdLogTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "idLog"));
//                                 
//                                         elementList.add(localIdLog==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdLog));
//                                    } if (localLsRetornoIdLogTracker){
//                             if (localLsRetornoIdLog!=null) {
//                                 for (int i = 0;i < localLsRetornoIdLog.length;i++){
//
//                                    if (localLsRetornoIdLog[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoIdLog"));
//                                         elementList.add(localLsRetornoIdLog[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoIdLog"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoIdLog"));
//                                        elementList.add(localLsRetornoIdLog);
//                                    
//                             }
//
//                        } if (localOrigemConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "origemConsulta"));
//                                 
//                                         elementList.add(localOrigemConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrigemConsulta));
//                                    } if (localLsRetornoComparacaoFoneticaTracker){
//                             if (localLsRetornoComparacaoFonetica!=null) {
//                                 for (int i = 0;i < localLsRetornoComparacaoFonetica.length;i++){
//
//                                    if (localLsRetornoComparacaoFonetica[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoComparacaoFonetica"));
//                                         elementList.add(localLsRetornoComparacaoFonetica[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoComparacaoFonetica"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoComparacaoFonetica"));
//                                        elementList.add(localLsRetornoComparacaoFonetica);
//                                    
//                             }
//
//                        }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static RetornoWSComparacaoFonetica parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            RetornoWSComparacaoFonetica object =
//                new RetornoWSComparacaoFonetica();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"RetornoWSComparacaoFonetica".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (RetornoWSComparacaoFonetica)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list4 = new java.util.ArrayList();
//                    
//                        java.util.ArrayList list7 = new java.util.ArrayList();
//                    
//                        java.util.ArrayList list9 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","cdMensagem").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setCdMensagem(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","dsMensagem").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setDsMensagem(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","idConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setIdConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list4.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list4.add(CampoWS.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone4 = false;
//                                                        while(!loopDone4){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone4 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list4.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list4.add(CampoWS.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone4 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setLsRetorno((CampoWS[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                CampoWS.class,
//                                                                list4));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","dataRealizacaoConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setDataRealizacaoConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","idLog").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setIdLog(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoIdLog").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list7.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list7.add(CampoWSIdLog.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone7 = false;
//                                                        while(!loopDone7){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone7 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoIdLog").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list7.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list7.add(CampoWSIdLog.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone7 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setLsRetornoIdLog((CampoWSIdLog[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                CampoWSIdLog.class,
//                                                                list7));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","origemConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setOrigemConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoComparacaoFonetica").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list9.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list9.add(CampoWS.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone9 = false;
//                                                        while(!loopDone9){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone9 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoComparacaoFonetica").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list9.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list9.add(CampoWS.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone9 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setLsRetornoComparacaoFonetica((CampoWS[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                CampoWS.class,
//                                                                list9));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultaWS
//        implements org.apache.axis2.databinding.ADBBean{
//        /* This type was generated from the piece of schema that had
//                name = ConsultaWS
//                Namespace URI = http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd
//                Namespace Prefix = ns1
//                */
//            
//
//                        /**
//                        * field for IdConsulta
//                        */
//
//                        
//                                    protected java.lang.String localIdConsulta ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localIdConsultaTracker = false ;
//
//                           public boolean isIdConsultaSpecified(){
//                               return localIdConsultaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getIdConsulta(){
//                               return localIdConsulta;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param IdConsulta
//                               */
//                               public void setIdConsulta(java.lang.String param){
//                            localIdConsultaTracker = true;
//                                   
//                                            this.localIdConsulta=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for LsParametros
//                        * This was an Array!
//                        */
//
//                        
//                                    protected CampoWS[] localLsParametros ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localLsParametrosTracker = false ;
//
//                           public boolean isLsParametrosSpecified(){
//                               return localLsParametrosTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return CampoWS[]
//                           */
//                           public  CampoWS[] getLsParametros(){
//                               return localLsParametros;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for LsParametros
//                               */
//                              protected void validateLsParametros(CampoWS[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param LsParametros
//                              */
//                              public void setLsParametros(CampoWS[] param){
//                              
//                                   validateLsParametros(param);
//
//                               localLsParametrosTracker = true;
//                                      
//                                      this.localLsParametros=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param CampoWS
//                             */
//                             public void addLsParametros(CampoWS param){
//                                   if (localLsParametros == null){
//                                   localLsParametros = new CampoWS[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                localLsParametrosTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localLsParametros);
//                               list.add(param);
//                               this.localLsParametros =
//                             (CampoWS[])list.toArray(
//                            new CampoWS[list.size()]);
//
//                             }
//                             
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
//               return factory.createOMElement(dataSource,parentQName);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":ConsultaWS",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "ConsultaWS",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (localIdConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "idConsulta", xmlWriter);
//                             
//
//                                          if (localIdConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localIdConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localLsParametrosTracker){
//                                       if (localLsParametros!=null){
//                                            for (int i = 0;i < localLsParametros.length;i++){
//                                                if (localLsParametros[i] != null){
//                                                 localLsParametros[i].serialize(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsParametros"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsParametros", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsParametros", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd")){
//                return "ns1";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (localIdConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "idConsulta"));
//                                 
//                                         elementList.add(localIdConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdConsulta));
//                                    } if (localLsParametrosTracker){
//                             if (localLsParametros!=null) {
//                                 for (int i = 0;i < localLsParametros.length;i++){
//
//                                    if (localLsParametros[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsParametros"));
//                                         elementList.add(localLsParametros[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsParametros"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsParametros"));
//                                        elementList.add(localLsParametros);
//                                    
//                             }
//
//                        }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultaWS parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultaWS object =
//                new ConsultaWS();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"ConsultaWS".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultaWS)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list2 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","idConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setIdConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsParametros").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list2.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list2.add(CampoWS.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone2 = false;
//                                                        while(!loopDone2){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone2 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsParametros").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list2.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list2.add(CampoWS.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone2 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setLsParametros((CampoWS[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                CampoWS.class,
//                                                                list2));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultarGatewayComparacaoFoneticaResponse
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultarGatewayComparacaoFoneticaResponse",
//                "ns3");
//
//            
//
//                        /**
//                        * field for _return
//                        * This was an Array!
//                        */
//
//                        
//                                    protected RetornoWSComparacaoFonetica[] local_return ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean local_returnTracker = false ;
//
//                           public boolean is_returnSpecified(){
//                               return local_returnTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return RetornoWSComparacaoFonetica[]
//                           */
//                           public  RetornoWSComparacaoFonetica[] get_return(){
//                               return local_return;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for _return
//                               */
//                              protected void validate_return(RetornoWSComparacaoFonetica[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param _return
//                              */
//                              public void set_return(RetornoWSComparacaoFonetica[] param){
//                              
//                                   validate_return(param);
//
//                               local_returnTracker = true;
//                                      
//                                      this.local_return=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param RetornoWSComparacaoFonetica
//                             */
//                             public void add_return(RetornoWSComparacaoFonetica param){
//                                   if (local_return == null){
//                                   local_return = new RetornoWSComparacaoFonetica[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                local_returnTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(local_return);
//                               list.add(param);
//                               this.local_return =
//                             (RetornoWSComparacaoFonetica[])list.toArray(
//                            new RetornoWSComparacaoFonetica[list.size()]);
//
//                             }
//                             
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultarGatewayComparacaoFoneticaResponse",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultarGatewayComparacaoFoneticaResponse",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (local_returnTracker){
//                                       if (local_return!=null){
//                                            for (int i = 0;i < local_return.length;i++){
//                                                if (local_return[i] != null){
//                                                 local_return[i].serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "return", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "return", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (local_returnTracker){
//                             if (local_return!=null) {
//                                 for (int i = 0;i < local_return.length;i++){
//
//                                    if (local_return[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                         elementList.add(local_return[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                        elementList.add(local_return);
//                                    
//                             }
//
//                        }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultarGatewayComparacaoFoneticaResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultarGatewayComparacaoFoneticaResponse object =
//                new ConsultarGatewayComparacaoFoneticaResponse();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultarGatewayComparacaoFoneticaResponse".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultarGatewayComparacaoFoneticaResponse)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list1 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list1.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list1.add(RetornoWSComparacaoFonetica.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone1 = false;
//                                                        while(!loopDone1){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone1 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list1.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list1.add(RetornoWSComparacaoFonetica.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone1 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.set_return((RetornoWSComparacaoFonetica[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                RetornoWSComparacaoFonetica.class,
//                                                                list1));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultarHistorico
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultarHistorico",
//                "ns3");
//
//            
//
//                        /**
//                        * field for PIdentificador
//                        */
//
//                        
//                                    protected int localPIdentificador ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPIdentificadorTracker = false ;
//
//                           public boolean isPIdentificadorSpecified(){
//                               return localPIdentificadorTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return int
//                           */
//                           public  int getPIdentificador(){
//                               return localPIdentificador;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PIdentificador
//                               */
//                               public void setPIdentificador(int param){
//                            
//                                       // setting primitive attribute tracker to true
//                                       localPIdentificadorTracker =
//                                       param != java.lang.Integer.MIN_VALUE;
//                                   
//                                            this.localPIdentificador=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PLogin
//                        */
//
//                        
//                                    protected java.lang.String localPLogin ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPLoginTracker = false ;
//
//                           public boolean isPLoginSpecified(){
//                               return localPLoginTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPLogin(){
//                               return localPLogin;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PLogin
//                               */
//                               public void setPLogin(java.lang.String param){
//                            localPLoginTracker = true;
//                                   
//                                            this.localPLogin=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PSenha
//                        */
//
//                        
//                                    protected java.lang.String localPSenha ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPSenhaTracker = false ;
//
//                           public boolean isPSenhaSpecified(){
//                               return localPSenhaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPSenha(){
//                               return localPSenha;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PSenha
//                               */
//                               public void setPSenha(java.lang.String param){
//                            localPSenhaTracker = true;
//                                   
//                                            this.localPSenha=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PConsulta
//                        */
//
//                        
//                                    protected ConsultaWS localPConsulta ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPConsultaTracker = false ;
//
//                           public boolean isPConsultaSpecified(){
//                               return localPConsultaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return ConsultaWS
//                           */
//                           public  ConsultaWS getPConsulta(){
//                               return localPConsulta;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PConsulta
//                               */
//                               public void setPConsulta(ConsultaWS param){
//                            localPConsultaTracker = true;
//                                   
//                                            this.localPConsulta=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultarHistorico",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultarHistorico",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (localPIdentificadorTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pIdentificador", xmlWriter);
//                             
//                                               if (localPIdentificador==java.lang.Integer.MIN_VALUE) {
//                                           
//                                                         throw new org.apache.axis2.databinding.ADBException("pIdentificador cannot be null!!");
//                                                      
//                                               } else {
//                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                                               }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPLoginTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pLogin", xmlWriter);
//                             
//
//                                          if (localPLogin==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPLogin);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPSenhaTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pSenha", xmlWriter);
//                             
//
//                                          if (localPSenha==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPSenha);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPConsultaTracker){
//                                    if (localPConsulta==null){
//
//                                        writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "pConsulta", xmlWriter);
//
//                                       // write the nil attribute
//                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                      xmlWriter.writeEndElement();
//                                    }else{
//                                     localPConsulta.serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsulta"),
//                                        xmlWriter);
//                                    }
//                                }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (localPIdentificadorTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pIdentificador"));
//                                 
//                                elementList.add(
//                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                            } if (localPLoginTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pLogin"));
//                                 
//                                         elementList.add(localPLogin==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPLogin));
//                                    } if (localPSenhaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pSenha"));
//                                 
//                                         elementList.add(localPSenha==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPSenha));
//                                    } if (localPConsultaTracker){
//                            elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pConsulta"));
//                            
//                            
//                                    elementList.add(localPConsulta==null?null:
//                                    localPConsulta);
//                                }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultarHistorico parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultarHistorico object =
//                new ConsultarHistorico();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultarHistorico".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultarHistorico)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pIdentificador").equals(reader.getName())){
//                                
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPIdentificador(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
//                                              
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                               object.setPIdentificador(java.lang.Integer.MIN_VALUE);
//                                           
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pLogin").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPLogin(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pSenha").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPSenha(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsulta").equals(reader.getName())){
//                                
//                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                          object.setPConsulta(null);
//                                          reader.next();
//                                            
//                                            reader.next();
//                                          
//                                      }else{
//                                    
//                                                object.setPConsulta(ConsultaWS.Factory.parse(reader));
//                                              
//                                        reader.next();
//                                    }
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class AtualizarCache
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "atualizarCache",
//                "ns3");
//
//            
//
//                        /**
//                        * field for PIdentificador
//                        */
//
//                        
//                                    protected int localPIdentificador ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPIdentificadorTracker = false ;
//
//                           public boolean isPIdentificadorSpecified(){
//                               return localPIdentificadorTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return int
//                           */
//                           public  int getPIdentificador(){
//                               return localPIdentificador;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PIdentificador
//                               */
//                               public void setPIdentificador(int param){
//                            
//                                       // setting primitive attribute tracker to true
//                                       localPIdentificadorTracker =
//                                       param != java.lang.Integer.MIN_VALUE;
//                                   
//                                            this.localPIdentificador=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PLogin
//                        */
//
//                        
//                                    protected java.lang.String localPLogin ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPLoginTracker = false ;
//
//                           public boolean isPLoginSpecified(){
//                               return localPLoginTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPLogin(){
//                               return localPLogin;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PLogin
//                               */
//                               public void setPLogin(java.lang.String param){
//                            localPLoginTracker = true;
//                                   
//                                            this.localPLogin=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PSenha
//                        */
//
//                        
//                                    protected java.lang.String localPSenha ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPSenhaTracker = false ;
//
//                           public boolean isPSenhaSpecified(){
//                               return localPSenhaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPSenha(){
//                               return localPSenha;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PSenha
//                               */
//                               public void setPSenha(java.lang.String param){
//                            localPSenhaTracker = true;
//                                   
//                                            this.localPSenha=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":atualizarCache",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "atualizarCache",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (localPIdentificadorTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pIdentificador", xmlWriter);
//                             
//                                               if (localPIdentificador==java.lang.Integer.MIN_VALUE) {
//                                           
//                                                         throw new org.apache.axis2.databinding.ADBException("pIdentificador cannot be null!!");
//                                                      
//                                               } else {
//                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                                               }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPLoginTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pLogin", xmlWriter);
//                             
//
//                                          if (localPLogin==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPLogin);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPSenhaTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pSenha", xmlWriter);
//                             
//
//                                          if (localPSenha==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPSenha);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (localPIdentificadorTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pIdentificador"));
//                                 
//                                elementList.add(
//                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                            } if (localPLoginTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pLogin"));
//                                 
//                                         elementList.add(localPLogin==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPLogin));
//                                    } if (localPSenhaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pSenha"));
//                                 
//                                         elementList.add(localPSenha==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPSenha));
//                                    }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static AtualizarCache parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            AtualizarCache object =
//                new AtualizarCache();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"atualizarCache".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (AtualizarCache)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pIdentificador").equals(reader.getName())){
//                                
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPIdentificador(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
//                                              
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                               object.setPIdentificador(java.lang.Integer.MIN_VALUE);
//                                           
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pLogin").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPLogin(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pSenha").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPSenha(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultarHistoricoComparacaoFoneticaResponse
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultarHistoricoComparacaoFoneticaResponse",
//                "ns3");
//
//            
//
//                        /**
//                        * field for _return
//                        */
//
//                        
//                                    protected RetornoWSHistoricoCF local_return ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean local_returnTracker = false ;
//
//                           public boolean is_returnSpecified(){
//                               return local_returnTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return RetornoWSHistoricoCF
//                           */
//                           public  RetornoWSHistoricoCF get_return(){
//                               return local_return;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param _return
//                               */
//                               public void set_return(RetornoWSHistoricoCF param){
//                            local_returnTracker = true;
//                                   
//                                            this.local_return=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultarHistoricoComparacaoFoneticaResponse",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultarHistoricoComparacaoFoneticaResponse",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (local_returnTracker){
//                                    if (local_return==null){
//
//                                        writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "return", xmlWriter);
//
//                                       // write the nil attribute
//                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                      xmlWriter.writeEndElement();
//                                    }else{
//                                     local_return.serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return"),
//                                        xmlWriter);
//                                    }
//                                }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (local_returnTracker){
//                            elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "return"));
//                            
//                            
//                                    elementList.add(local_return==null?null:
//                                    local_return);
//                                }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultarHistoricoComparacaoFoneticaResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultarHistoricoComparacaoFoneticaResponse object =
//                new ConsultarHistoricoComparacaoFoneticaResponse();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultarHistoricoComparacaoFoneticaResponse".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultarHistoricoComparacaoFoneticaResponse)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return").equals(reader.getName())){
//                                
//                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                          object.set_return(null);
//                                          reader.next();
//                                            
//                                            reader.next();
//                                          
//                                      }else{
//                                    
//                                                object.set_return(RetornoWSHistoricoCF.Factory.parse(reader));
//                                              
//                                        reader.next();
//                                    }
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultarGatewayComparacaoFonetica2Response
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultarGatewayComparacaoFonetica2Response",
//                "ns3");
//
//            
//
//                        /**
//                        * field for _return
//                        * This was an Array!
//                        */
//
//                        
//                                    protected RetornoWSComparacaoFonetica[] local_return ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean local_returnTracker = false ;
//
//                           public boolean is_returnSpecified(){
//                               return local_returnTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return RetornoWSComparacaoFonetica[]
//                           */
//                           public  RetornoWSComparacaoFonetica[] get_return(){
//                               return local_return;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for _return
//                               */
//                              protected void validate_return(RetornoWSComparacaoFonetica[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param _return
//                              */
//                              public void set_return(RetornoWSComparacaoFonetica[] param){
//                              
//                                   validate_return(param);
//
//                               local_returnTracker = true;
//                                      
//                                      this.local_return=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param RetornoWSComparacaoFonetica
//                             */
//                             public void add_return(RetornoWSComparacaoFonetica param){
//                                   if (local_return == null){
//                                   local_return = new RetornoWSComparacaoFonetica[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                local_returnTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(local_return);
//                               list.add(param);
//                               this.local_return =
//                             (RetornoWSComparacaoFonetica[])list.toArray(
//                            new RetornoWSComparacaoFonetica[list.size()]);
//
//                             }
//                             
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultarGatewayComparacaoFonetica2Response",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultarGatewayComparacaoFonetica2Response",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (local_returnTracker){
//                                       if (local_return!=null){
//                                            for (int i = 0;i < local_return.length;i++){
//                                                if (local_return[i] != null){
//                                                 local_return[i].serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "return", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "return", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (local_returnTracker){
//                             if (local_return!=null) {
//                                 for (int i = 0;i < local_return.length;i++){
//
//                                    if (local_return[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                         elementList.add(local_return[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                        elementList.add(local_return);
//                                    
//                             }
//
//                        }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultarGatewayComparacaoFonetica2Response parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultarGatewayComparacaoFonetica2Response object =
//                new ConsultarGatewayComparacaoFonetica2Response();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultarGatewayComparacaoFonetica2Response".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultarGatewayComparacaoFonetica2Response)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list1 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list1.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list1.add(RetornoWSComparacaoFonetica.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone1 = false;
//                                                        while(!loopDone1){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone1 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list1.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list1.add(RetornoWSComparacaoFonetica.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone1 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.set_return((RetornoWSComparacaoFonetica[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                RetornoWSComparacaoFonetica.class,
//                                                                list1));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultarGatewayComparacaoFoneticaUResponse
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultarGatewayComparacaoFoneticaUResponse",
//                "ns3");
//
//            
//
//                        /**
//                        * field for _return
//                        * This was an Array!
//                        */
//
//                        
//                                    protected RetornoWSComparacaoFoneticaU[] local_return ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean local_returnTracker = false ;
//
//                           public boolean is_returnSpecified(){
//                               return local_returnTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return RetornoWSComparacaoFoneticaU[]
//                           */
//                           public  RetornoWSComparacaoFoneticaU[] get_return(){
//                               return local_return;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for _return
//                               */
//                              protected void validate_return(RetornoWSComparacaoFoneticaU[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param _return
//                              */
//                              public void set_return(RetornoWSComparacaoFoneticaU[] param){
//                              
//                                   validate_return(param);
//
//                               local_returnTracker = true;
//                                      
//                                      this.local_return=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param RetornoWSComparacaoFoneticaU
//                             */
//                             public void add_return(RetornoWSComparacaoFoneticaU param){
//                                   if (local_return == null){
//                                   local_return = new RetornoWSComparacaoFoneticaU[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                local_returnTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(local_return);
//                               list.add(param);
//                               this.local_return =
//                             (RetornoWSComparacaoFoneticaU[])list.toArray(
//                            new RetornoWSComparacaoFoneticaU[list.size()]);
//
//                             }
//                             
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultarGatewayComparacaoFoneticaUResponse",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultarGatewayComparacaoFoneticaUResponse",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (local_returnTracker){
//                                       if (local_return!=null){
//                                            for (int i = 0;i < local_return.length;i++){
//                                                if (local_return[i] != null){
//                                                 local_return[i].serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "return", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "return", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (local_returnTracker){
//                             if (local_return!=null) {
//                                 for (int i = 0;i < local_return.length;i++){
//
//                                    if (local_return[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                         elementList.add(local_return[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                        elementList.add(local_return);
//                                    
//                             }
//
//                        }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultarGatewayComparacaoFoneticaUResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultarGatewayComparacaoFoneticaUResponse object =
//                new ConsultarGatewayComparacaoFoneticaUResponse();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultarGatewayComparacaoFoneticaUResponse".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultarGatewayComparacaoFoneticaUResponse)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list1 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list1.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list1.add(RetornoWSComparacaoFoneticaU.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone1 = false;
//                                                        while(!loopDone1){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone1 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list1.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list1.add(RetornoWSComparacaoFoneticaU.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone1 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.set_return((RetornoWSComparacaoFoneticaU[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                RetornoWSComparacaoFoneticaU.class,
//                                                                list1));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class CampoWSIdLog extends CampoWS
//        implements org.apache.axis2.databinding.ADBBean{
//        /* This type was generated from the piece of schema that had
//                name = CampoWSIdLog
//                Namespace URI = http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd
//                Namespace Prefix = ns1
//                */
//            
//
//                        /**
//                        * field for TpCampo
//                        */
//
//                        
//                                    protected java.lang.String localTpCampo ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localTpCampoTracker = false ;
//
//                           public boolean isTpCampoSpecified(){
//                               return localTpCampoTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getTpCampo(){
//                               return localTpCampo;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param TpCampo
//                               */
//                               public void setTpCampo(java.lang.String param){
//                            localTpCampoTracker = true;
//                                   
//                                            this.localTpCampo=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
//               return factory.createOMElement(dataSource,parentQName);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":CampoWSIdLog",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "CampoWSIdLog",
//                           xmlWriter);
//                   }
//
//                if (localNmCampoTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "nmCampo", xmlWriter);
//                             
//
//                                          if (localNmCampo==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localNmCampo);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localVlCampoTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "vlCampo", xmlWriter);
//                             
//
//                                          if (localVlCampo==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localVlCampo);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localTpCampoTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "tpCampo", xmlWriter);
//                             
//
//                                          if (localTpCampo==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localTpCampo);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd")){
//                return "ns1";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                
//                    attribList.add(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema-instance","type"));
//                    attribList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","CampoWSIdLog"));
//                 if (localNmCampoTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "nmCampo"));
//                                 
//                                         elementList.add(localNmCampo==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNmCampo));
//                                    } if (localVlCampoTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "vlCampo"));
//                                 
//                                         elementList.add(localVlCampo==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVlCampo));
//                                    } if (localTpCampoTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "tpCampo"));
//                                 
//                                         elementList.add(localTpCampo==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTpCampo));
//                                    }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static CampoWSIdLog parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            CampoWSIdLog object =
//                new CampoWSIdLog();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"CampoWSIdLog".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (CampoWSIdLog)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","nmCampo").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setNmCampo(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","vlCampo").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setVlCampo(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","tpCampo").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setTpCampo(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultarHistoricoResponse
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultarHistoricoResponse",
//                "ns3");
//
//            
//
//                        /**
//                        * field for _return
//                        */
//
//                        
//                                    protected RetornoWSHistorico local_return ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean local_returnTracker = false ;
//
//                           public boolean is_returnSpecified(){
//                               return local_returnTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return RetornoWSHistorico
//                           */
//                           public  RetornoWSHistorico get_return(){
//                               return local_return;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param _return
//                               */
//                               public void set_return(RetornoWSHistorico param){
//                            local_returnTracker = true;
//                                   
//                                            this.local_return=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultarHistoricoResponse",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultarHistoricoResponse",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (local_returnTracker){
//                                    if (local_return==null){
//
//                                        writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "return", xmlWriter);
//
//                                       // write the nil attribute
//                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                      xmlWriter.writeEndElement();
//                                    }else{
//                                     local_return.serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return"),
//                                        xmlWriter);
//                                    }
//                                }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (local_returnTracker){
//                            elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "return"));
//                            
//                            
//                                    elementList.add(local_return==null?null:
//                                    local_return);
//                                }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultarHistoricoResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultarHistoricoResponse object =
//                new ConsultarHistoricoResponse();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultarHistoricoResponse".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultarHistoricoResponse)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return").equals(reader.getName())){
//                                
//                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                          object.set_return(null);
//                                          reader.next();
//                                            
//                                            reader.next();
//                                          
//                                      }else{
//                                    
//                                                object.set_return(RetornoWSHistorico.Factory.parse(reader));
//                                              
//                                        reader.next();
//                                    }
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class CampoWS
//        implements org.apache.axis2.databinding.ADBBean{
//        /* This type was generated from the piece of schema that had
//                name = CampoWS
//                Namespace URI = http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd
//                Namespace Prefix = ns1
//                */
//            
//
//                        /**
//                        * field for NmCampo
//                        */
//
//                        
//                                    protected java.lang.String localNmCampo ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localNmCampoTracker = false ;
//
//                           public boolean isNmCampoSpecified(){
//                               return localNmCampoTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getNmCampo(){
//                               return localNmCampo;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param NmCampo
//                               */
//                               public void setNmCampo(java.lang.String param){
//                            localNmCampoTracker = true;
//                                   
//                                            this.localNmCampo=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for VlCampo
//                        */
//
//                        
//                                    protected java.lang.String localVlCampo ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localVlCampoTracker = false ;
//
//                           public boolean isVlCampoSpecified(){
//                               return localVlCampoTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getVlCampo(){
//                               return localVlCampo;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param VlCampo
//                               */
//                               public void setVlCampo(java.lang.String param){
//                            localVlCampoTracker = true;
//                                   
//                                            this.localVlCampo=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
//               return factory.createOMElement(dataSource,parentQName);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":CampoWS",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "CampoWS",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (localNmCampoTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "nmCampo", xmlWriter);
//                             
//
//                                          if (localNmCampo==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localNmCampo);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localVlCampoTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "vlCampo", xmlWriter);
//                             
//
//                                          if (localVlCampo==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localVlCampo);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd")){
//                return "ns1";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (localNmCampoTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "nmCampo"));
//                                 
//                                         elementList.add(localNmCampo==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNmCampo));
//                                    } if (localVlCampoTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "vlCampo"));
//                                 
//                                         elementList.add(localVlCampo==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVlCampo));
//                                    }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static CampoWS parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            CampoWS object =
//                new CampoWS();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"CampoWS".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (CampoWS)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","nmCampo").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setNmCampo(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","vlCampo").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setVlCampo(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class RetornoWS
//        implements org.apache.axis2.databinding.ADBBean{
//        /* This type was generated from the piece of schema that had
//                name = RetornoWS
//                Namespace URI = http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd
//                Namespace Prefix = ns1
//                */
//            
//
//                        /**
//                        * field for CdMensagem
//                        */
//
//                        
//                                    protected java.lang.String localCdMensagem ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localCdMensagemTracker = false ;
//
//                           public boolean isCdMensagemSpecified(){
//                               return localCdMensagemTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getCdMensagem(){
//                               return localCdMensagem;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param CdMensagem
//                               */
//                               public void setCdMensagem(java.lang.String param){
//                            localCdMensagemTracker = true;
//                                   
//                                            this.localCdMensagem=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for DsMensagem
//                        */
//
//                        
//                                    protected java.lang.String localDsMensagem ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localDsMensagemTracker = false ;
//
//                           public boolean isDsMensagemSpecified(){
//                               return localDsMensagemTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getDsMensagem(){
//                               return localDsMensagem;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param DsMensagem
//                               */
//                               public void setDsMensagem(java.lang.String param){
//                            localDsMensagemTracker = true;
//                                   
//                                            this.localDsMensagem=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for IdConsulta
//                        */
//
//                        
//                                    protected java.lang.String localIdConsulta ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localIdConsultaTracker = false ;
//
//                           public boolean isIdConsultaSpecified(){
//                               return localIdConsultaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getIdConsulta(){
//                               return localIdConsulta;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param IdConsulta
//                               */
//                               public void setIdConsulta(java.lang.String param){
//                            localIdConsultaTracker = true;
//                                   
//                                            this.localIdConsulta=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for LsRetorno
//                        * This was an Array!
//                        */
//
//                        
//                                    protected CampoWS[] localLsRetorno ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localLsRetornoTracker = false ;
//
//                           public boolean isLsRetornoSpecified(){
//                               return localLsRetornoTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return CampoWS[]
//                           */
//                           public  CampoWS[] getLsRetorno(){
//                               return localLsRetorno;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for LsRetorno
//                               */
//                              protected void validateLsRetorno(CampoWS[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param LsRetorno
//                              */
//                              public void setLsRetorno(CampoWS[] param){
//                              
//                                   validateLsRetorno(param);
//
//                               localLsRetornoTracker = true;
//                                      
//                                      this.localLsRetorno=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param CampoWS
//                             */
//                             public void addLsRetorno(CampoWS param){
//                                   if (localLsRetorno == null){
//                                   localLsRetorno = new CampoWS[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                localLsRetornoTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localLsRetorno);
//                               list.add(param);
//                               this.localLsRetorno =
//                             (CampoWS[])list.toArray(
//                            new CampoWS[list.size()]);
//
//                             }
//                             
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
//               return factory.createOMElement(dataSource,parentQName);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":RetornoWS",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "RetornoWS",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (localCdMensagemTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "cdMensagem", xmlWriter);
//                             
//
//                                          if (localCdMensagem==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localCdMensagem);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localDsMensagemTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "dsMensagem", xmlWriter);
//                             
//
//                                          if (localDsMensagem==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localDsMensagem);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localIdConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "idConsulta", xmlWriter);
//                             
//
//                                          if (localIdConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localIdConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localLsRetornoTracker){
//                                       if (localLsRetorno!=null){
//                                            for (int i = 0;i < localLsRetorno.length;i++){
//                                                if (localLsRetorno[i] != null){
//                                                 localLsRetorno[i].serialize(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetorno", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetorno", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd")){
//                return "ns1";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (localCdMensagemTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "cdMensagem"));
//                                 
//                                         elementList.add(localCdMensagem==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCdMensagem));
//                                    } if (localDsMensagemTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "dsMensagem"));
//                                 
//                                         elementList.add(localDsMensagem==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDsMensagem));
//                                    } if (localIdConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "idConsulta"));
//                                 
//                                         elementList.add(localIdConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdConsulta));
//                                    } if (localLsRetornoTracker){
//                             if (localLsRetorno!=null) {
//                                 for (int i = 0;i < localLsRetorno.length;i++){
//
//                                    if (localLsRetorno[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                         elementList.add(localLsRetorno[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                        elementList.add(localLsRetorno);
//                                    
//                             }
//
//                        }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static RetornoWS parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            RetornoWS object =
//                new RetornoWS();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"RetornoWS".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (RetornoWS)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list4 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","cdMensagem").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setCdMensagem(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","dsMensagem").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setDsMensagem(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","idConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setIdConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list4.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list4.add(CampoWS.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone4 = false;
//                                                        while(!loopDone4){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone4 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list4.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list4.add(CampoWS.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone4 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setLsRetorno((CampoWS[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                CampoWS.class,
//                                                                list4));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultarGatewayComparacaoFoneticaU
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultarGatewayComparacaoFoneticaU",
//                "ns3");
//
//            
//
//                        /**
//                        * field for PIdentificador
//                        */
//
//                        
//                                    protected int localPIdentificador ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPIdentificadorTracker = false ;
//
//                           public boolean isPIdentificadorSpecified(){
//                               return localPIdentificadorTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return int
//                           */
//                           public  int getPIdentificador(){
//                               return localPIdentificador;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PIdentificador
//                               */
//                               public void setPIdentificador(int param){
//                            
//                                       // setting primitive attribute tracker to true
//                                       localPIdentificadorTracker =
//                                       param != java.lang.Integer.MIN_VALUE;
//                                   
//                                            this.localPIdentificador=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PLogin
//                        */
//
//                        
//                                    protected java.lang.String localPLogin ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPLoginTracker = false ;
//
//                           public boolean isPLoginSpecified(){
//                               return localPLoginTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPLogin(){
//                               return localPLogin;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PLogin
//                               */
//                               public void setPLogin(java.lang.String param){
//                            localPLoginTracker = true;
//                                   
//                                            this.localPLogin=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PSenha
//                        */
//
//                        
//                                    protected java.lang.String localPSenha ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPSenhaTracker = false ;
//
//                           public boolean isPSenhaSpecified(){
//                               return localPSenhaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPSenha(){
//                               return localPSenha;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PSenha
//                               */
//                               public void setPSenha(java.lang.String param){
//                            localPSenhaTracker = true;
//                                   
//                                            this.localPSenha=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PAlias
//                        */
//
//                        
//                                    protected java.lang.String localPAlias ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPAliasTracker = false ;
//
//                           public boolean isPAliasSpecified(){
//                               return localPAliasTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPAlias(){
//                               return localPAlias;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PAlias
//                               */
//                               public void setPAlias(java.lang.String param){
//                            localPAliasTracker = true;
//                                   
//                                            this.localPAlias=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PConsultas
//                        * This was an Array!
//                        */
//
//                        
//                                    protected ConsultaWSComparacaoFonetica[] localPConsultas ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPConsultasTracker = false ;
//
//                           public boolean isPConsultasSpecified(){
//                               return localPConsultasTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return ConsultaWSComparacaoFonetica[]
//                           */
//                           public  ConsultaWSComparacaoFonetica[] getPConsultas(){
//                               return localPConsultas;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for PConsultas
//                               */
//                              protected void validatePConsultas(ConsultaWSComparacaoFonetica[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param PConsultas
//                              */
//                              public void setPConsultas(ConsultaWSComparacaoFonetica[] param){
//                              
//                                   validatePConsultas(param);
//
//                               localPConsultasTracker = true;
//                                      
//                                      this.localPConsultas=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param ConsultaWSComparacaoFonetica
//                             */
//                             public void addPConsultas(ConsultaWSComparacaoFonetica param){
//                                   if (localPConsultas == null){
//                                   localPConsultas = new ConsultaWSComparacaoFonetica[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                localPConsultasTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localPConsultas);
//                               list.add(param);
//                               this.localPConsultas =
//                             (ConsultaWSComparacaoFonetica[])list.toArray(
//                            new ConsultaWSComparacaoFonetica[list.size()]);
//
//                             }
//                             
//
//                        /**
//                        * field for PAlgoritmo
//                        */
//
//                        
//                                    protected java.lang.String localPAlgoritmo ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPAlgoritmoTracker = false ;
//
//                           public boolean isPAlgoritmoSpecified(){
//                               return localPAlgoritmoTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPAlgoritmo(){
//                               return localPAlgoritmo;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PAlgoritmo
//                               */
//                               public void setPAlgoritmo(java.lang.String param){
//                            localPAlgoritmoTracker = true;
//                                   
//                                            this.localPAlgoritmo=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultarGatewayComparacaoFoneticaU",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultarGatewayComparacaoFoneticaU",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (localPIdentificadorTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pIdentificador", xmlWriter);
//                             
//                                               if (localPIdentificador==java.lang.Integer.MIN_VALUE) {
//                                           
//                                                         throw new org.apache.axis2.databinding.ADBException("pIdentificador cannot be null!!");
//                                                      
//                                               } else {
//                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                                               }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPLoginTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pLogin", xmlWriter);
//                             
//
//                                          if (localPLogin==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPLogin);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPSenhaTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pSenha", xmlWriter);
//                             
//
//                                          if (localPSenha==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPSenha);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPAliasTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pAlias", xmlWriter);
//                             
//
//                                          if (localPAlias==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPAlias);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPConsultasTracker){
//                                       if (localPConsultas!=null){
//                                            for (int i = 0;i < localPConsultas.length;i++){
//                                                if (localPConsultas[i] != null){
//                                                 localPConsultas[i].serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsultas"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "pConsultas", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "pConsultas", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 } if (localPAlgoritmoTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pAlgoritmo", xmlWriter);
//                             
//
//                                          if (localPAlgoritmo==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPAlgoritmo);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (localPIdentificadorTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pIdentificador"));
//                                 
//                                elementList.add(
//                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                            } if (localPLoginTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pLogin"));
//                                 
//                                         elementList.add(localPLogin==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPLogin));
//                                    } if (localPSenhaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pSenha"));
//                                 
//                                         elementList.add(localPSenha==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPSenha));
//                                    } if (localPAliasTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pAlias"));
//                                 
//                                         elementList.add(localPAlias==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPAlias));
//                                    } if (localPConsultasTracker){
//                             if (localPConsultas!=null) {
//                                 for (int i = 0;i < localPConsultas.length;i++){
//
//                                    if (localPConsultas[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "pConsultas"));
//                                         elementList.add(localPConsultas[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "pConsultas"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "pConsultas"));
//                                        elementList.add(localPConsultas);
//                                    
//                             }
//
//                        } if (localPAlgoritmoTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pAlgoritmo"));
//                                 
//                                         elementList.add(localPAlgoritmo==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPAlgoritmo));
//                                    }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultarGatewayComparacaoFoneticaU parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultarGatewayComparacaoFoneticaU object =
//                new ConsultarGatewayComparacaoFoneticaU();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultarGatewayComparacaoFoneticaU".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultarGatewayComparacaoFoneticaU)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list5 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pIdentificador").equals(reader.getName())){
//                                
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPIdentificador(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
//                                              
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                               object.setPIdentificador(java.lang.Integer.MIN_VALUE);
//                                           
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pLogin").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPLogin(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pSenha").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPSenha(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pAlias").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPAlias(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsultas").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list5.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list5.add(ConsultaWSComparacaoFonetica.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone5 = false;
//                                                        while(!loopDone5){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone5 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsultas").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list5.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list5.add(ConsultaWSComparacaoFonetica.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone5 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setPConsultas((ConsultaWSComparacaoFonetica[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                ConsultaWSComparacaoFonetica.class,
//                                                                list5));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pAlgoritmo").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPAlgoritmo(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultarLogResponse
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultarLogResponse",
//                "ns3");
//
//            
//
//                        /**
//                        * field for _return
//                        * This was an Array!
//                        */
//
//                        
//                                    protected RetornoWSIdLog[] local_return ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean local_returnTracker = false ;
//
//                           public boolean is_returnSpecified(){
//                               return local_returnTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return RetornoWSIdLog[]
//                           */
//                           public  RetornoWSIdLog[] get_return(){
//                               return local_return;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for _return
//                               */
//                              protected void validate_return(RetornoWSIdLog[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param _return
//                              */
//                              public void set_return(RetornoWSIdLog[] param){
//                              
//                                   validate_return(param);
//
//                               local_returnTracker = true;
//                                      
//                                      this.local_return=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param RetornoWSIdLog
//                             */
//                             public void add_return(RetornoWSIdLog param){
//                                   if (local_return == null){
//                                   local_return = new RetornoWSIdLog[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                local_returnTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(local_return);
//                               list.add(param);
//                               this.local_return =
//                             (RetornoWSIdLog[])list.toArray(
//                            new RetornoWSIdLog[list.size()]);
//
//                             }
//                             
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultarLogResponse",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultarLogResponse",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (local_returnTracker){
//                                       if (local_return!=null){
//                                            for (int i = 0;i < local_return.length;i++){
//                                                if (local_return[i] != null){
//                                                 local_return[i].serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "return", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "return", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (local_returnTracker){
//                             if (local_return!=null) {
//                                 for (int i = 0;i < local_return.length;i++){
//
//                                    if (local_return[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                         elementList.add(local_return[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "return"));
//                                        elementList.add(local_return);
//                                    
//                             }
//
//                        }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultarLogResponse parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultarLogResponse object =
//                new ConsultarLogResponse();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultarLogResponse".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultarLogResponse)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list1 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list1.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list1.add(RetornoWSIdLog.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone1 = false;
//                                                        while(!loopDone1){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone1 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","return").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list1.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list1.add(RetornoWSIdLog.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone1 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.set_return((RetornoWSIdLog[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                RetornoWSIdLog.class,
//                                                                list1));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class RetornoWSHistorico extends RetornoWSIdLog
//        implements org.apache.axis2.databinding.ADBBean{
//        /* This type was generated from the piece of schema that had
//                name = RetornoWSHistorico
//                Namespace URI = http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd
//                Namespace Prefix = ns1
//                */
//            
//
//                        /**
//                        * field for DiasAntigHistorico
//                        */
//
//                        
//                                    protected java.lang.String localDiasAntigHistorico ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localDiasAntigHistoricoTracker = false ;
//
//                           public boolean isDiasAntigHistoricoSpecified(){
//                               return localDiasAntigHistoricoTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getDiasAntigHistorico(){
//                               return localDiasAntigHistorico;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param DiasAntigHistorico
//                               */
//                               public void setDiasAntigHistorico(java.lang.String param){
//                            localDiasAntigHistoricoTracker = true;
//                                   
//                                            this.localDiasAntigHistorico=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName);
//               return factory.createOMElement(dataSource,parentQName);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":RetornoWSHistorico",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "RetornoWSHistorico",
//                           xmlWriter);
//                   }
//
//                if (localCdMensagemTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "cdMensagem", xmlWriter);
//                             
//
//                                          if (localCdMensagem==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localCdMensagem);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localDsMensagemTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "dsMensagem", xmlWriter);
//                             
//
//                                          if (localDsMensagem==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localDsMensagem);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localIdConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "idConsulta", xmlWriter);
//                             
//
//                                          if (localIdConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localIdConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localLsRetornoTracker){
//                                       if (localLsRetorno!=null){
//                                            for (int i = 0;i < localLsRetorno.length;i++){
//                                                if (localLsRetorno[i] != null){
//                                                 localLsRetorno[i].serialize(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetorno", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetorno", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 } if (localDataRealizacaoConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "dataRealizacaoConsulta", xmlWriter);
//                             
//
//                                          if (localDataRealizacaoConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localDataRealizacaoConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localIdLogTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "idLog", xmlWriter);
//                             
//
//                                          if (localIdLog==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localIdLog);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localLsRetornoIdLogTracker){
//                                       if (localLsRetornoIdLog!=null){
//                                            for (int i = 0;i < localLsRetornoIdLog.length;i++){
//                                                if (localLsRetornoIdLog[i] != null){
//                                                 localLsRetornoIdLog[i].serialize(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoIdLog"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetornoIdLog", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd", "lsRetornoIdLog", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 } if (localOrigemConsultaTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "origemConsulta", xmlWriter);
//                             
//
//                                          if (localOrigemConsulta==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localOrigemConsulta);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localDiasAntigHistoricoTracker){
//                                    namespace = "http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd";
//                                    writeStartElement(null, namespace, "diasAntigHistorico", xmlWriter);
//                             
//
//                                          if (localDiasAntigHistorico==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localDiasAntigHistorico);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd")){
//                return "ns1";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                
//                    attribList.add(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema-instance","type"));
//                    attribList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","RetornoWSHistorico"));
//                 if (localCdMensagemTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "cdMensagem"));
//                                 
//                                         elementList.add(localCdMensagem==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCdMensagem));
//                                    } if (localDsMensagemTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "dsMensagem"));
//                                 
//                                         elementList.add(localDsMensagem==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDsMensagem));
//                                    } if (localIdConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "idConsulta"));
//                                 
//                                         elementList.add(localIdConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdConsulta));
//                                    } if (localLsRetornoTracker){
//                             if (localLsRetorno!=null) {
//                                 for (int i = 0;i < localLsRetorno.length;i++){
//
//                                    if (localLsRetorno[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                         elementList.add(localLsRetorno[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetorno"));
//                                        elementList.add(localLsRetorno);
//                                    
//                             }
//
//                        } if (localDataRealizacaoConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "dataRealizacaoConsulta"));
//                                 
//                                         elementList.add(localDataRealizacaoConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDataRealizacaoConsulta));
//                                    } if (localIdLogTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "idLog"));
//                                 
//                                         elementList.add(localIdLog==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIdLog));
//                                    } if (localLsRetornoIdLogTracker){
//                             if (localLsRetornoIdLog!=null) {
//                                 for (int i = 0;i < localLsRetornoIdLog.length;i++){
//
//                                    if (localLsRetornoIdLog[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoIdLog"));
//                                         elementList.add(localLsRetornoIdLog[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoIdLog"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                          "lsRetornoIdLog"));
//                                        elementList.add(localLsRetornoIdLog);
//                                    
//                             }
//
//                        } if (localOrigemConsultaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "origemConsulta"));
//                                 
//                                         elementList.add(localOrigemConsulta==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOrigemConsulta));
//                                    } if (localDiasAntigHistoricoTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd",
//                                                                      "diasAntigHistorico"));
//                                 
//                                         elementList.add(localDiasAntigHistorico==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDiasAntigHistorico));
//                                    }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static RetornoWSHistorico parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            RetornoWSHistorico object =
//                new RetornoWSHistorico();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"RetornoWSHistorico".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (RetornoWSHistorico)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list4 = new java.util.ArrayList();
//                    
//                        java.util.ArrayList list7 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","cdMensagem").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setCdMensagem(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","dsMensagem").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setDsMensagem(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","idConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setIdConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list4.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list4.add(CampoWS.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone4 = false;
//                                                        while(!loopDone4){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone4 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetorno").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list4.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list4.add(CampoWS.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone4 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setLsRetorno((CampoWS[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                CampoWS.class,
//                                                                list4));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","dataRealizacaoConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setDataRealizacaoConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","idLog").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setIdLog(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoIdLog").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list7.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list7.add(CampoWSIdLog.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone7 = false;
//                                                        while(!loopDone7){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone7 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","lsRetornoIdLog").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list7.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list7.add(CampoWSIdLog.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone7 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setLsRetornoIdLog((CampoWSIdLog[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                CampoWSIdLog.class,
//                                                                list7));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","origemConsulta").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setOrigemConsulta(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://entidades.webservices.gerenciadorconsulta.neurotech.com.br/xsd","diasAntigHistorico").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setDiasAntigHistorico(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class Consultar
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultar",
//                "ns3");
//
//            
//
//                        /**
//                        * field for PIdentificador
//                        */
//
//                        
//                                    protected int localPIdentificador ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPIdentificadorTracker = false ;
//
//                           public boolean isPIdentificadorSpecified(){
//                               return localPIdentificadorTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return int
//                           */
//                           public  int getPIdentificador(){
//                               return localPIdentificador;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PIdentificador
//                               */
//                               public void setPIdentificador(int param){
//                            
//                                       // setting primitive attribute tracker to true
//                                       localPIdentificadorTracker =
//                                       param != java.lang.Integer.MIN_VALUE;
//                                   
//                                            this.localPIdentificador=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PLogin
//                        */
//
//                        
//                                    protected java.lang.String localPLogin ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPLoginTracker = false ;
//
//                           public boolean isPLoginSpecified(){
//                               return localPLoginTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPLogin(){
//                               return localPLogin;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PLogin
//                               */
//                               public void setPLogin(java.lang.String param){
//                            localPLoginTracker = true;
//                                   
//                                            this.localPLogin=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PSenha
//                        */
//
//                        
//                                    protected java.lang.String localPSenha ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPSenhaTracker = false ;
//
//                           public boolean isPSenhaSpecified(){
//                               return localPSenhaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPSenha(){
//                               return localPSenha;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PSenha
//                               */
//                               public void setPSenha(java.lang.String param){
//                            localPSenhaTracker = true;
//                                   
//                                            this.localPSenha=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PConsultas
//                        * This was an Array!
//                        */
//
//                        
//                                    protected ConsultaWS[] localPConsultas ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPConsultasTracker = false ;
//
//                           public boolean isPConsultasSpecified(){
//                               return localPConsultasTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return ConsultaWS[]
//                           */
//                           public  ConsultaWS[] getPConsultas(){
//                               return localPConsultas;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for PConsultas
//                               */
//                              protected void validatePConsultas(ConsultaWS[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param PConsultas
//                              */
//                              public void setPConsultas(ConsultaWS[] param){
//                              
//                                   validatePConsultas(param);
//
//                               localPConsultasTracker = true;
//                                      
//                                      this.localPConsultas=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param ConsultaWS
//                             */
//                             public void addPConsultas(ConsultaWS param){
//                                   if (localPConsultas == null){
//                                   localPConsultas = new ConsultaWS[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                localPConsultasTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localPConsultas);
//                               list.add(param);
//                               this.localPConsultas =
//                             (ConsultaWS[])list.toArray(
//                            new ConsultaWS[list.size()]);
//
//                             }
//                             
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultar",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultar",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (localPIdentificadorTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pIdentificador", xmlWriter);
//                             
//                                               if (localPIdentificador==java.lang.Integer.MIN_VALUE) {
//                                           
//                                                         throw new org.apache.axis2.databinding.ADBException("pIdentificador cannot be null!!");
//                                                      
//                                               } else {
//                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                                               }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPLoginTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pLogin", xmlWriter);
//                             
//
//                                          if (localPLogin==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPLogin);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPSenhaTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pSenha", xmlWriter);
//                             
//
//                                          if (localPSenha==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPSenha);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPConsultasTracker){
//                                       if (localPConsultas!=null){
//                                            for (int i = 0;i < localPConsultas.length;i++){
//                                                if (localPConsultas[i] != null){
//                                                 localPConsultas[i].serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsultas"),
//                                                           xmlWriter);
//                                                } else {
//                                                   
//                                                            writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "pConsultas", xmlWriter);
//
//                                                           // write the nil attribute
//                                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                           xmlWriter.writeEndElement();
//                                                    
//                                                }
//
//                                            }
//                                     } else {
//                                        
//                                                writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "pConsultas", xmlWriter);
//
//                                               // write the nil attribute
//                                               writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                               xmlWriter.writeEndElement();
//                                        
//                                    }
//                                 }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (localPIdentificadorTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pIdentificador"));
//                                 
//                                elementList.add(
//                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                            } if (localPLoginTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pLogin"));
//                                 
//                                         elementList.add(localPLogin==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPLogin));
//                                    } if (localPSenhaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pSenha"));
//                                 
//                                         elementList.add(localPSenha==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPSenha));
//                                    } if (localPConsultasTracker){
//                             if (localPConsultas!=null) {
//                                 for (int i = 0;i < localPConsultas.length;i++){
//
//                                    if (localPConsultas[i] != null){
//                                         elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "pConsultas"));
//                                         elementList.add(localPConsultas[i]);
//                                    } else {
//                                        
//                                                elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "pConsultas"));
//                                                elementList.add(null);
//                                            
//                                    }
//
//                                 }
//                             } else {
//                                 
//                                        elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                          "pConsultas"));
//                                        elementList.add(localPConsultas);
//                                    
//                             }
//
//                        }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static Consultar parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            Consultar object =
//                new Consultar();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultar".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (Consultar)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list4 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pIdentificador").equals(reader.getName())){
//                                
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPIdentificador(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
//                                              
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                               object.setPIdentificador(java.lang.Integer.MIN_VALUE);
//                                           
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pLogin").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPLogin(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pSenha").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPSenha(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsultas").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list4.add(null);
//                                                              reader.next();
//                                                          } else {
//                                                        list4.add(ConsultaWS.Factory.parse(reader));
//                                                                }
//                                                        //loop until we find a start element that is not part of this array
//                                                        boolean loopDone4 = false;
//                                                        while(!loopDone4){
//                                                            // We should be at the end element, but make sure
//                                                            while (!reader.isEndElement())
//                                                                reader.next();
//                                                            // Step out of this element
//                                                            reader.next();
//                                                            // Step to next element event.
//                                                            while (!reader.isStartElement() && !reader.isEndElement())
//                                                                reader.next();
//                                                            if (reader.isEndElement()){
//                                                                //two continuous end elements means we are exiting the xml structure
//                                                                loopDone4 = true;
//                                                            } else {
//                                                                if (new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsultas").equals(reader.getName())){
//                                                                    
//                                                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                                          list4.add(null);
//                                                                          reader.next();
//                                                                      } else {
//                                                                    list4.add(ConsultaWS.Factory.parse(reader));
//                                                                        }
//                                                                }else{
//                                                                    loopDone4 = true;
//                                                                }
//                                                            }
//                                                        }
//                                                        // call the converter utility  to convert and set the array
//                                                        
//                                                        object.setPConsultas((ConsultaWS[])
//                                                            org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(
//                                                                ConsultaWS.class,
//                                                                list4));
//                                                            
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class WFtoHTML
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "WFtoHTML",
//                "ns3");
//
//            
//
//                        /**
//                        * field for POperation
//                        */
//
//                        
//                                    protected GatewayPanelOperation localPOperation ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPOperationTracker = false ;
//
//                           public boolean isPOperationSpecified(){
//                               return localPOperationTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return GatewayPanelOperation
//                           */
//                           public  GatewayPanelOperation getPOperation(){
//                               return localPOperation;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param POperation
//                               */
//                               public void setPOperation(GatewayPanelOperation param){
//                            localPOperationTracker = true;
//                                   
//                                            this.localPOperation=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":WFtoHTML",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "WFtoHTML",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (localPOperationTracker){
//                                    if (localPOperation==null){
//
//                                        writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "pOperation", xmlWriter);
//
//                                       // write the nil attribute
//                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                      xmlWriter.writeEndElement();
//                                    }else{
//                                     localPOperation.serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pOperation"),
//                                        xmlWriter);
//                                    }
//                                }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (localPOperationTracker){
//                            elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pOperation"));
//                            
//                            
//                                    elementList.add(localPOperation==null?null:
//                                    localPOperation);
//                                }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static WFtoHTML parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            WFtoHTML object =
//                new WFtoHTML();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"WFtoHTML".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (WFtoHTML)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pOperation").equals(reader.getName())){
//                                
//                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                          object.setPOperation(null);
//                                          reader.next();
//                                            
//                                            reader.next();
//                                          
//                                      }else{
//                                    
//                                                object.setPOperation(GatewayPanelOperation.Factory.parse(reader));
//                                              
//                                        reader.next();
//                                    }
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultarLog
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultarLog",
//                "ns3");
//
//            
//
//                        /**
//                        * field for PIdentificador
//                        */
//
//                        
//                                    protected int localPIdentificador ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPIdentificadorTracker = false ;
//
//                           public boolean isPIdentificadorSpecified(){
//                               return localPIdentificadorTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return int
//                           */
//                           public  int getPIdentificador(){
//                               return localPIdentificador;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PIdentificador
//                               */
//                               public void setPIdentificador(int param){
//                            
//                                       // setting primitive attribute tracker to true
//                                       localPIdentificadorTracker =
//                                       param != java.lang.Integer.MIN_VALUE;
//                                   
//                                            this.localPIdentificador=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PLogin
//                        */
//
//                        
//                                    protected java.lang.String localPLogin ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPLoginTracker = false ;
//
//                           public boolean isPLoginSpecified(){
//                               return localPLoginTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPLogin(){
//                               return localPLogin;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PLogin
//                               */
//                               public void setPLogin(java.lang.String param){
//                            localPLoginTracker = true;
//                                   
//                                            this.localPLogin=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PSenha
//                        */
//
//                        
//                                    protected java.lang.String localPSenha ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPSenhaTracker = false ;
//
//                           public boolean isPSenhaSpecified(){
//                               return localPSenhaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPSenha(){
//                               return localPSenha;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PSenha
//                               */
//                               public void setPSenha(java.lang.String param){
//                            localPSenhaTracker = true;
//                                   
//                                            this.localPSenha=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PLogIds
//                        * This was an Array!
//                        */
//
//                        
//                                    protected java.lang.String[] localPLogIds ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPLogIdsTracker = false ;
//
//                           public boolean isPLogIdsSpecified(){
//                               return localPLogIdsTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String[]
//                           */
//                           public  java.lang.String[] getPLogIds(){
//                               return localPLogIds;
//                           }
//
//                           
//                        
//
//
//                               
//                              /**
//                               * validate the array for PLogIds
//                               */
//                              protected void validatePLogIds(java.lang.String[] param){
//                             
//                              }
//
//
//                             /**
//                              * Auto generated setter method
//                              * @param param PLogIds
//                              */
//                              public void setPLogIds(java.lang.String[] param){
//                              
//                                   validatePLogIds(param);
//
//                               localPLogIdsTracker = true;
//                                      
//                                      this.localPLogIds=param;
//                              }
//
//                               
//                             
//                             /**
//                             * Auto generated add method for the array for convenience
//                             * @param param java.lang.String
//                             */
//                             public void addPLogIds(java.lang.String param){
//                                   if (localPLogIds == null){
//                                   localPLogIds = new java.lang.String[]{};
//                                   }
//
//                            
//                                 //update the setting tracker
//                                localPLogIdsTracker = true;
//                            
//
//                               java.util.List list =
//                            org.apache.axis2.databinding.utils.ConverterUtil.toList(localPLogIds);
//                               list.add(param);
//                               this.localPLogIds =
//                             (java.lang.String[])list.toArray(
//                            new java.lang.String[list.size()]);
//
//                             }
//                             
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultarLog",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultarLog",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (localPIdentificadorTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pIdentificador", xmlWriter);
//                             
//                                               if (localPIdentificador==java.lang.Integer.MIN_VALUE) {
//                                           
//                                                         throw new org.apache.axis2.databinding.ADBException("pIdentificador cannot be null!!");
//                                                      
//                                               } else {
//                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                                               }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPLoginTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pLogin", xmlWriter);
//                             
//
//                                          if (localPLogin==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPLogin);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPSenhaTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pSenha", xmlWriter);
//                             
//
//                                          if (localPSenha==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPSenha);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPLogIdsTracker){
//                             if (localPLogIds!=null) {
//                                   namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                   for (int i = 0;i < localPLogIds.length;i++){
//                                        
//                                            if (localPLogIds[i] != null){
//                                        
//                                                writeStartElement(null, namespace, "pLogIds", xmlWriter);
//
//                                            
//                                                        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPLogIds[i]));
//                                                    
//                                                xmlWriter.writeEndElement();
//                                              
//                                                } else {
//                                                   
//                                                           // write null attribute
//                                                            namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                                            writeStartElement(null, namespace, "pLogIds", xmlWriter);
//                                                            writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                            xmlWriter.writeEndElement();
//                                                       
//                                                }
//
//                                   }
//                             } else {
//                                 
//                                         // write the null attribute
//                                        // write null attribute
//                                           writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "pLogIds", xmlWriter);
//
//                                           // write the nil attribute
//                                           writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                           xmlWriter.writeEndElement();
//                                    
//                             }
//
//                        }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (localPIdentificadorTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pIdentificador"));
//                                 
//                                elementList.add(
//                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                            } if (localPLoginTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pLogin"));
//                                 
//                                         elementList.add(localPLogin==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPLogin));
//                                    } if (localPSenhaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pSenha"));
//                                 
//                                         elementList.add(localPSenha==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPSenha));
//                                    } if (localPLogIdsTracker){
//                            if (localPLogIds!=null){
//                                  for (int i = 0;i < localPLogIds.length;i++){
//                                      
//                                         if (localPLogIds[i] != null){
//                                          elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                              "pLogIds"));
//                                          elementList.add(
//                                          org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPLogIds[i]));
//                                          } else {
//                                             
//                                                    elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                              "pLogIds"));
//                                                    elementList.add(null);
//                                                
//                                          }
//                                      
//
//                                  }
//                            } else {
//                              
//                                    elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                              "pLogIds"));
//                                    elementList.add(null);
//                                
//                            }
//
//                        }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultarLog parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultarLog object =
//                new ConsultarLog();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultarLog".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultarLog)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                        java.util.ArrayList list4 = new java.util.ArrayList();
//                    
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pIdentificador").equals(reader.getName())){
//                                
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPIdentificador(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
//                                              
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                               object.setPIdentificador(java.lang.Integer.MIN_VALUE);
//                                           
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pLogin").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPLogin(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pSenha").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPSenha(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pLogIds").equals(reader.getName())){
//                                
//                                    
//                                    
//                                    // Process the array and step past its final element's end.
//                                    
//                                              nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                              if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                  list4.add(null);
//                                                       
//                                                  reader.next();
//                                              } else {
//                                            list4.add(reader.getElementText());
//                                            }
//                                            //loop until we find a start element that is not part of this array
//                                            boolean loopDone4 = false;
//                                            while(!loopDone4){
//                                                // Ensure we are at the EndElement
//                                                while (!reader.isEndElement()){
//                                                    reader.next();
//                                                }
//                                                // Step out of this element
//                                                reader.next();
//                                                // Step to next element event.
//                                                while (!reader.isStartElement() && !reader.isEndElement())
//                                                    reader.next();
//                                                if (reader.isEndElement()){
//                                                    //two continuous end elements means we are exiting the xml structure
//                                                    loopDone4 = true;
//                                                } else {
//                                                    if (new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pLogIds").equals(reader.getName())){
//                                                         
//                                                          nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                                          if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                                              list4.add(null);
//                                                                   
//                                                              reader.next();
//                                                          } else {
//                                                        list4.add(reader.getElementText());
//                                                        }
//                                                    }else{
//                                                        loopDone4 = true;
//                                                    }
//                                                }
//                                            }
//                                            // call the converter utility  to convert and set the array
//                                            
//                                                    object.setPLogIds((java.lang.String[])
//                                                        list4.toArray(new java.lang.String[list4.size()]));
//                                                
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//        public static class ConsultarHistoricoComparacaoFonetica
//        implements org.apache.axis2.databinding.ADBBean{
//        
//                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
//                "http://fachada.webservices.gateway.neurotech.com.br",
//                "consultarHistoricoComparacaoFonetica",
//                "ns3");
//
//            
//
//                        /**
//                        * field for PIdentificador
//                        */
//
//                        
//                                    protected int localPIdentificador ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPIdentificadorTracker = false ;
//
//                           public boolean isPIdentificadorSpecified(){
//                               return localPIdentificadorTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return int
//                           */
//                           public  int getPIdentificador(){
//                               return localPIdentificador;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PIdentificador
//                               */
//                               public void setPIdentificador(int param){
//                            
//                                       // setting primitive attribute tracker to true
//                                       localPIdentificadorTracker =
//                                       param != java.lang.Integer.MIN_VALUE;
//                                   
//                                            this.localPIdentificador=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PLogin
//                        */
//
//                        
//                                    protected java.lang.String localPLogin ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPLoginTracker = false ;
//
//                           public boolean isPLoginSpecified(){
//                               return localPLoginTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPLogin(){
//                               return localPLogin;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PLogin
//                               */
//                               public void setPLogin(java.lang.String param){
//                            localPLoginTracker = true;
//                                   
//                                            this.localPLogin=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PSenha
//                        */
//
//                        
//                                    protected java.lang.String localPSenha ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPSenhaTracker = false ;
//
//                           public boolean isPSenhaSpecified(){
//                               return localPSenhaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return java.lang.String
//                           */
//                           public  java.lang.String getPSenha(){
//                               return localPSenha;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PSenha
//                               */
//                               public void setPSenha(java.lang.String param){
//                            localPSenhaTracker = true;
//                                   
//                                            this.localPSenha=param;
//                                    
//
//                               }
//                            
//
//                        /**
//                        * field for PConsulta
//                        */
//
//                        
//                                    protected ConsultaWSComparacaoFonetica localPConsulta ;
//                                
//                           /*  This tracker boolean wil be used to detect whether the user called the set method
//                          *   for this attribute. It will be used to determine whether to include this field
//                           *   in the serialized XML
//                           */
//                           protected boolean localPConsultaTracker = false ;
//
//                           public boolean isPConsultaSpecified(){
//                               return localPConsultaTracker;
//                           }
//
//                           
//
//                           /**
//                           * Auto generated getter method
//                           * @return ConsultaWSComparacaoFonetica
//                           */
//                           public  ConsultaWSComparacaoFonetica getPConsulta(){
//                               return localPConsulta;
//                           }
//
//                           
//                        
//                            /**
//                               * Auto generated setter method
//                               * @param param PConsulta
//                               */
//                               public void setPConsulta(ConsultaWSComparacaoFonetica param){
//                            localPConsultaTracker = true;
//                                   
//                                            this.localPConsulta=param;
//                                    
//
//                               }
//                            
//
//     
//     
//        /**
//        *
//        * @param parentQName
//        * @param factory
//        * @return org.apache.axiom.om.OMElement
//        */
//       public org.apache.axiom.om.OMElement getOMElement (
//               final javax.xml.namespace.QName parentQName,
//               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{
//
//
//        
//               org.apache.axiom.om.OMDataSource dataSource =
//                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME);
//               return factory.createOMElement(dataSource,MY_QNAME);
//            
//        }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter)
//                                throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//                           serialize(parentQName,xmlWriter,false);
//         }
//
//         public void serialize(final javax.xml.namespace.QName parentQName,
//                               javax.xml.stream.XMLStreamWriter xmlWriter,
//                               boolean serializeType)
//            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
//            
//                
//
//
//                java.lang.String prefix = null;
//                java.lang.String namespace = null;
//                
//
//                    prefix = parentQName.getPrefix();
//                    namespace = parentQName.getNamespaceURI();
//                    writeStartElement(prefix, namespace, parentQName.getLocalPart(), xmlWriter);
//                
//                  if (serializeType){
//               
//
//                   java.lang.String namespacePrefix = registerPrefix(xmlWriter,"http://fachada.webservices.gateway.neurotech.com.br");
//                   if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)){
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           namespacePrefix+":consultarHistoricoComparacaoFonetica",
//                           xmlWriter);
//                   } else {
//                       writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",
//                           "consultarHistoricoComparacaoFonetica",
//                           xmlWriter);
//                   }
//
//               
//                   }
//                if (localPIdentificadorTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pIdentificador", xmlWriter);
//                             
//                                               if (localPIdentificador==java.lang.Integer.MIN_VALUE) {
//                                           
//                                                         throw new org.apache.axis2.databinding.ADBException("pIdentificador cannot be null!!");
//                                                      
//                                               } else {
//                                                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                                               }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPLoginTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pLogin", xmlWriter);
//                             
//
//                                          if (localPLogin==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPLogin);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPSenhaTracker){
//                                    namespace = "http://fachada.webservices.gateway.neurotech.com.br";
//                                    writeStartElement(null, namespace, "pSenha", xmlWriter);
//                             
//
//                                          if (localPSenha==null){
//                                              // write the nil attribute
//                                              
//                                                     writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                                  
//                                          }else{
//
//                                        
//                                                   xmlWriter.writeCharacters(localPSenha);
//                                            
//                                          }
//                                    
//                                   xmlWriter.writeEndElement();
//                             } if (localPConsultaTracker){
//                                    if (localPConsulta==null){
//
//                                        writeStartElement(null, "http://fachada.webservices.gateway.neurotech.com.br", "pConsulta", xmlWriter);
//
//                                       // write the nil attribute
//                                      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","nil","1",xmlWriter);
//                                      xmlWriter.writeEndElement();
//                                    }else{
//                                     localPConsulta.serialize(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsulta"),
//                                        xmlWriter);
//                                    }
//                                }
//                    xmlWriter.writeEndElement();
//               
//
//        }
//
//        private static java.lang.String generatePrefix(java.lang.String namespace) {
//            if(namespace.equals("http://fachada.webservices.gateway.neurotech.com.br")){
//                return "ns3";
//            }
//            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//        }
//
//        /**
//         * Utility method to write an element start tag.
//         */
//        private void writeStartElement(java.lang.String prefix, java.lang.String namespace, java.lang.String localPart,
//                                       javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
//            if (writerPrefix != null) {
//                xmlWriter.writeStartElement(namespace, localPart);
//            } else {
//                if (namespace.length() == 0) {
//                    prefix = "";
//                } else if (prefix == null) {
//                    prefix = generatePrefix(namespace);
//                }
//
//                xmlWriter.writeStartElement(prefix, localPart, namespace);
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//        }
//        
//        /**
//         * Util method to write an attribute with the ns prefix
//         */
//        private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (xmlWriter.getPrefix(namespace) == null) {
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            xmlWriter.writeAttribute(namespace,attName,attValue);
//        }
//
//        /**
//         * Util method to write an attribute without the ns prefix
//         */
//        private void writeAttribute(java.lang.String namespace,java.lang.String attName,
//                                    java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
//            if (namespace.equals("")) {
//                xmlWriter.writeAttribute(attName,attValue);
//            } else {
//                registerPrefix(xmlWriter, namespace);
//                xmlWriter.writeAttribute(namespace,attName,attValue);
//            }
//        }
//
//
//           /**
//             * Util method to write an attribute without the ns prefix
//             */
//            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
//                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//                java.lang.String attributeNamespace = qname.getNamespaceURI();
//                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
//                if (attributePrefix == null) {
//                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
//                }
//                java.lang.String attributeValue;
//                if (attributePrefix.trim().length() > 0) {
//                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
//                } else {
//                    attributeValue = qname.getLocalPart();
//                }
//
//                if (namespace.equals("")) {
//                    xmlWriter.writeAttribute(attName, attributeValue);
//                } else {
//                    registerPrefix(xmlWriter, namespace);
//                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
//                }
//            }
//        /**
//         *  method to handle Qnames
//         */
//
//        private void writeQName(javax.xml.namespace.QName qname,
//                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//            java.lang.String namespaceURI = qname.getNamespaceURI();
//            if (namespaceURI != null) {
//                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
//                if (prefix == null) {
//                    prefix = generatePrefix(namespaceURI);
//                    xmlWriter.writeNamespace(prefix, namespaceURI);
//                    xmlWriter.setPrefix(prefix,namespaceURI);
//                }
//
//                if (prefix.trim().length() > 0){
//                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                } else {
//                    // i.e this is the default namespace
//                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//                }
//
//            } else {
//                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
//            }
//        }
//
//        private void writeQNames(javax.xml.namespace.QName[] qnames,
//                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
//
//            if (qnames != null) {
//                // we have to store this data until last moment since it is not possible to write any
//                // namespace data after writing the charactor data
//                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
//                java.lang.String namespaceURI = null;
//                java.lang.String prefix = null;
//
//                for (int i = 0; i < qnames.length; i++) {
//                    if (i > 0) {
//                        stringToWrite.append(" ");
//                    }
//                    namespaceURI = qnames[i].getNamespaceURI();
//                    if (namespaceURI != null) {
//                        prefix = xmlWriter.getPrefix(namespaceURI);
//                        if ((prefix == null) || (prefix.length() == 0)) {
//                            prefix = generatePrefix(namespaceURI);
//                            xmlWriter.writeNamespace(prefix, namespaceURI);
//                            xmlWriter.setPrefix(prefix,namespaceURI);
//                        }
//
//                        if (prefix.trim().length() > 0){
//                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        } else {
//                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                        }
//                    } else {
//                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
//                    }
//                }
//                xmlWriter.writeCharacters(stringToWrite.toString());
//            }
//
//        }
//
//
//        /**
//         * Register a namespace prefix
//         */
//        private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
//            java.lang.String prefix = xmlWriter.getPrefix(namespace);
//            if (prefix == null) {
//                prefix = generatePrefix(namespace);
//                javax.xml.namespace.NamespaceContext nsContext = xmlWriter.getNamespaceContext();
//                while (true) {
//                    java.lang.String uri = nsContext.getNamespaceURI(prefix);
//                    if (uri == null || uri.length() == 0) {
//                        break;
//                    }
//                    prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
//                }
//                xmlWriter.writeNamespace(prefix, namespace);
//                xmlWriter.setPrefix(prefix, namespace);
//            }
//            return prefix;
//        }
//
//
//  
//        /**
//        * databinding method to get an XML representation of this object
//        *
//        */
//        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
//                    throws org.apache.axis2.databinding.ADBException{
//
//
//        
//                 java.util.ArrayList elementList = new java.util.ArrayList();
//                 java.util.ArrayList attribList = new java.util.ArrayList();
//
//                 if (localPIdentificadorTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pIdentificador"));
//                                 
//                                elementList.add(
//                                   org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPIdentificador));
//                            } if (localPLoginTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pLogin"));
//                                 
//                                         elementList.add(localPLogin==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPLogin));
//                                    } if (localPSenhaTracker){
//                                      elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pSenha"));
//                                 
//                                         elementList.add(localPSenha==null?null:
//                                         org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPSenha));
//                                    } if (localPConsultaTracker){
//                            elementList.add(new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br",
//                                                                      "pConsulta"));
//                            
//                            
//                                    elementList.add(localPConsulta==null?null:
//                                    localPConsulta);
//                                }
//
//                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
//            
//            
//
//        }
//
//  
//
//     /**
//      *  Factory class that keeps the parse method
//      */
//    public static class Factory{
//
//        
//        
//
//        /**
//        * static method to create the object
//        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
//        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
//        * Postcondition: If this object is an element, the reader is positioned at its end element
//        *                If this object is a complex type, the reader is positioned at the end element of its outer element
//        */
//        public static ConsultarHistoricoComparacaoFonetica parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
//            ConsultarHistoricoComparacaoFonetica object =
//                new ConsultarHistoricoComparacaoFonetica();
//
//            int event;
//            java.lang.String nillableValue = null;
//            java.lang.String prefix ="";
//            java.lang.String namespaceuri ="";
//            try {
//                
//                while (!reader.isStartElement() && !reader.isEndElement())
//                    reader.next();
//
//                
//                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
//                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
//                        "type");
//                  if (fullTypeName!=null){
//                    java.lang.String nsPrefix = null;
//                    if (fullTypeName.indexOf(":") > -1){
//                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
//                    }
//                    nsPrefix = nsPrefix==null?"":nsPrefix;
//
//                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
//                    
//                            if (!"consultarHistoricoComparacaoFonetica".equals(type)){
//                                //find namespace for the prefix
//                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
//                                return (ConsultarHistoricoComparacaoFonetica)ExtensionMapper.getTypeObject(
//                                     nsUri,type,reader);
//                              }
//                        
//
//                  }
//                
//
//                }
//
//                
//
//                
//                // Note all attributes that were handled. Used to differ normal attributes
//                // from anyAttributes.
//                java.util.Vector handledAttributes = new java.util.Vector();
//                
//
//                
//                    
//                    reader.next();
//                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pIdentificador").equals(reader.getName())){
//                                
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPIdentificador(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
//                                              
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                               object.setPIdentificador(java.lang.Integer.MIN_VALUE);
//                                           
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pLogin").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPLogin(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pSenha").equals(reader.getName())){
//                                
//                                       nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                       if (!"true".equals(nillableValue) && !"1".equals(nillableValue)){
//                                    
//                                    java.lang.String content = reader.getElementText();
//                                    
//                                              object.setPSenha(
//                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
//                                            
//                                       } else {
//                                           
//                                           
//                                           reader.getElementText(); // throw away text nodes if any.
//                                       }
//                                      
//                                        reader.next();
//                                    
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                
//                                    
//                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
//                                
//                                    if (reader.isStartElement() && new javax.xml.namespace.QName("http://fachada.webservices.gateway.neurotech.com.br","pConsulta").equals(reader.getName())){
//                                
//                                      nillableValue = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","nil");
//                                      if ("true".equals(nillableValue) || "1".equals(nillableValue)){
//                                          object.setPConsulta(null);
//                                          reader.next();
//                                            
//                                            reader.next();
//                                          
//                                      }else{
//                                    
//                                                object.setPConsulta(ConsultaWSComparacaoFonetica.Factory.parse(reader));
//                                              
//                                        reader.next();
//                                    }
//                              }  // End of if for expected property start element
//                                
//                                    else {
//                                        
//                                    }
//                                  
//                            while (!reader.isStartElement() && !reader.isEndElement())
//                                reader.next();
//                            
//                                if (reader.isStartElement())
//                                // A start element we are not expecting indicates a trailing invalid property
//                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getName());
//                            
//
//
//
//            } catch (javax.xml.stream.XMLStreamException e) {
//                throw new java.lang.Exception(e);
//            }
//
//            return object;
//        }
//
//        }//end of factory class
//
//        
//
//        }
//           
//    
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFoneticaResponse param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFoneticaResponse.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.WFtoHTML param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.WFtoHTML.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.WFtoHTMLResponse param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.WFtoHTMLResponse.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaU param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaU.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaUResponse param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaUResponse.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica2 param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica2.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica2Response param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica2Response.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.AtualizarCache param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.AtualizarCache.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.AtualizarCacheResponse param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.AtualizarCacheResponse.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.Consultar param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.Consultar.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarResponse param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarResponse.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica2 param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica2.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica2Response param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica2Response.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarLog param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarLog.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarLogResponse param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarLogResponse.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistorico param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistorico.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoResponse param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoResponse.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGateway param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGateway.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayResponse param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayResponse.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//            private  org.apache.axiom.om.OMElement  toOM(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaResponse param, boolean optimizeContent)
//            throws org.apache.axis2.AxisFault {
//
//            
//                        try{
//                             return param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaResponse.MY_QNAME,
//                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
//                        } catch(org.apache.axis2.databinding.ADBException e){
//                            throw org.apache.axis2.AxisFault.makeFault(e);
//                        }
//                    
//
//            }
//        
//                                    
//                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
//                                        throws org.apache.axis2.AxisFault{
//
//                                             
//                                                    try{
//
//                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
//                                                            emptyEnvelope.getBody().addChild(param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica.MY_QNAME,factory));
//                                                            return emptyEnvelope;
//                                                        } catch(org.apache.axis2.databinding.ADBException e){
//                                                            throw org.apache.axis2.AxisFault.makeFault(e);
//                                                        }
//                                                
//
//                                        }
//                                
//                             
//                             /* methods to provide back word compatibility */
//
//                             
//                                    
//                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.WFtoHTML param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
//                                        throws org.apache.axis2.AxisFault{
//
//                                             
//                                                    try{
//
//                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
//                                                            emptyEnvelope.getBody().addChild(param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.WFtoHTML.MY_QNAME,factory));
//                                                            return emptyEnvelope;
//                                                        } catch(org.apache.axis2.databinding.ADBException e){
//                                                            throw org.apache.axis2.AxisFault.makeFault(e);
//                                                        }
//                                                
//
//                                        }
//                                
//                             
//                             /* methods to provide back word compatibility */
//
//                             
//                                    
//                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaU param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
//                                        throws org.apache.axis2.AxisFault{
//
//                                             
//                                                    try{
//
//                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
//                                                            emptyEnvelope.getBody().addChild(param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaU.MY_QNAME,factory));
//                                                            return emptyEnvelope;
//                                                        } catch(org.apache.axis2.databinding.ADBException e){
//                                                            throw org.apache.axis2.AxisFault.makeFault(e);
//                                                        }
//                                                
//
//                                        }
//                                
//                             
//                             /* methods to provide back word compatibility */
//
//                             
//                                    
//                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica2 param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
//                                        throws org.apache.axis2.AxisFault{
//
//                                             
//                                                    try{
//
//                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
//                                                            emptyEnvelope.getBody().addChild(param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica2.MY_QNAME,factory));
//                                                            return emptyEnvelope;
//                                                        } catch(org.apache.axis2.databinding.ADBException e){
//                                                            throw org.apache.axis2.AxisFault.makeFault(e);
//                                                        }
//                                                
//
//                                        }
//                                
//                             
//                             /* methods to provide back word compatibility */
//
//                             
//                                    
//                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.AtualizarCache param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
//                                        throws org.apache.axis2.AxisFault{
//
//                                             
//                                                    try{
//
//                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
//                                                            emptyEnvelope.getBody().addChild(param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.AtualizarCache.MY_QNAME,factory));
//                                                            return emptyEnvelope;
//                                                        } catch(org.apache.axis2.databinding.ADBException e){
//                                                            throw org.apache.axis2.AxisFault.makeFault(e);
//                                                        }
//                                                
//
//                                        }
//                                
//                             
//                             /* methods to provide back word compatibility */
//
//                             
//                                    
//                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.Consultar param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
//                                        throws org.apache.axis2.AxisFault{
//
//                                             
//                                                    try{
//
//                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
//                                                            emptyEnvelope.getBody().addChild(param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.Consultar.MY_QNAME,factory));
//                                                            return emptyEnvelope;
//                                                        } catch(org.apache.axis2.databinding.ADBException e){
//                                                            throw org.apache.axis2.AxisFault.makeFault(e);
//                                                        }
//                                                
//
//                                        }
//                                
//                             
//                             /* methods to provide back word compatibility */
//
//                             
//                                    
//                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica2 param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
//                                        throws org.apache.axis2.AxisFault{
//
//                                             
//                                                    try{
//
//                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
//                                                            emptyEnvelope.getBody().addChild(param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica2.MY_QNAME,factory));
//                                                            return emptyEnvelope;
//                                                        } catch(org.apache.axis2.databinding.ADBException e){
//                                                            throw org.apache.axis2.AxisFault.makeFault(e);
//                                                        }
//                                                
//
//                                        }
//                                
//                             
//                             /* methods to provide back word compatibility */
//
//                             
//                                    
//                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarLog param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
//                                        throws org.apache.axis2.AxisFault{
//
//                                             
//                                                    try{
//
//                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
//                                                            emptyEnvelope.getBody().addChild(param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarLog.MY_QNAME,factory));
//                                                            return emptyEnvelope;
//                                                        } catch(org.apache.axis2.databinding.ADBException e){
//                                                            throw org.apache.axis2.AxisFault.makeFault(e);
//                                                        }
//                                                
//
//                                        }
//                                
//                             
//                             /* methods to provide back word compatibility */
//
//                             
//                                    
//                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistorico param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
//                                        throws org.apache.axis2.AxisFault{
//
//                                             
//                                                    try{
//
//                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
//                                                            emptyEnvelope.getBody().addChild(param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistorico.MY_QNAME,factory));
//                                                            return emptyEnvelope;
//                                                        } catch(org.apache.axis2.databinding.ADBException e){
//                                                            throw org.apache.axis2.AxisFault.makeFault(e);
//                                                        }
//                                                
//
//                                        }
//                                
//                             
//                             /* methods to provide back word compatibility */
//
//                             
//                                    
//                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGateway param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
//                                        throws org.apache.axis2.AxisFault{
//
//                                             
//                                                    try{
//
//                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
//                                                            emptyEnvelope.getBody().addChild(param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGateway.MY_QNAME,factory));
//                                                            return emptyEnvelope;
//                                                        } catch(org.apache.axis2.databinding.ADBException e){
//                                                            throw org.apache.axis2.AxisFault.makeFault(e);
//                                                        }
//                                                
//
//                                        }
//                                
//                             
//                             /* methods to provide back word compatibility */
//
//                             
//                                    
//                                        private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica param, boolean optimizeContent, javax.xml.namespace.QName methodQName)
//                                        throws org.apache.axis2.AxisFault{
//
//                                             
//                                                    try{
//
//                                                            org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
//                                                            emptyEnvelope.getBody().addChild(param.getOMElement(gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica.MY_QNAME,factory));
//                                                            return emptyEnvelope;
//                                                        } catch(org.apache.axis2.databinding.ADBException e){
//                                                            throw org.apache.axis2.AxisFault.makeFault(e);
//                                                        }
//                                                
//
//                                        }
//                                
//                             
//                             /* methods to provide back word compatibility */
//
//                             
//
//
//        /**
//        *  get the default envelope
//        */
//        private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory){
//        return factory.getDefaultEnvelope();
//        }
//
//
//        private  java.lang.Object fromOM(
//        org.apache.axiom.om.OMElement param,
//        java.lang.Class type,
//        java.util.Map extraNamespaces) throws org.apache.axis2.AxisFault{
//
//        try {
//        
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFoneticaResponse.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFoneticaResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.WFtoHTML.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.WFtoHTML.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.WFtoHTMLResponse.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.WFtoHTMLResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaU.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaU.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaUResponse.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaUResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica2.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica2.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica2Response.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoComparacaoFonetica2Response.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.AtualizarCache.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.AtualizarCache.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.AtualizarCacheResponse.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.AtualizarCacheResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.Consultar.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.Consultar.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarResponse.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica2.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica2.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica2Response.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica2Response.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarLog.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarLog.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarLogResponse.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarLogResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistorico.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistorico.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoResponse.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarHistoricoResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGateway.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGateway.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayResponse.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFonetica.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//                if (gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaResponse.class.equals(type)){
//                
//                           return gcom.integracao.webservice.neurotech.gateway.GATEWAY_WEBSERVICESStub.ConsultarGatewayComparacaoFoneticaResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
//                    
//
//                }
//           
//        } catch (java.lang.Exception e) {
//        throw org.apache.axis2.AxisFault.makeFault(e);
//        }
//           return null;
//        }
//
//
//
//    
//   }
//   